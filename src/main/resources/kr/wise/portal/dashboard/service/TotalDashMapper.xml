<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.wise.portal.dashboard.service.TotalDashMapper" >
	<resultMap id="BaseResultMap" type="kr.wise.portal.dashboard.service.TotalCountVO" >
		<result column="CNT_CODE" property="cntCode"  />
		<result column="CNT_NAME" property="cntName"  />
	  	<result column="TOT_CNT"  property="totCnt"  />	
	  	<result column="TOT_CNT_2"  property="totCnt2"  />
	  	<result column="PAGE"  property="page"  />	
	  	<result column="AUTH"  property="auth"  />	
	  	<result column="DTM"  property="dtm"  />
	  	<result column="ERR_CNT"  property="errCnt"  />	
	  	<result column="ERR_RATE"  property="errRate"  />
	  	<result column="NO_EXE"  property="noExe"  />
	  	<result column="COL_CNT"  property="colCnt"  />
	  	<result column="TBL_CNT"  property="tblCnt"  />
	  	<result column="SUM_RATE"  property="sumRate"  />
	  	<result column="DQI_LNM"  property="dqiLnm"  />
	  	<result column="UPP_DQI_NM"  property="uppDqiNm"  />
	  	<result column="UPP_DQI_CNT"  property="uppDqiCnt"  />
	</resultMap>
	
  <!-- 메인화면용 원천데이터 관련 count eychoi -->
  <select id="selectSrcDataRqstCnt" resultMap="BaseResultMap" parameterType="java.lang.String">
  	<!-- 스케쥴 배치용
  	SELECT X.CNT_CODE
		 , X.CNT_NAME
		 , TO_CHAR(SUM(X.TOT_CNT), '999,999,999,999') AS TOT_CNT
		 , MAX(X.DTM) AS DTM
	  FROM ( SELECT CNT_CODE
				  , CNT_NAME
 				  , CNT1 AS TOT_CNT 
 				  , DTM
 			   FROM USERS_TOTAL 
 			  WHERE TYP_CD = 'SRC' 
 			    AND USER_ID = #{userId}
		   	UNION ALL
		 	SELECT '02' AS CNT_CODE, '승인대기' AS CNT_NAME, 0 AS TOT_CNT, NULL AS DTM FROM DB_ROOT
		 	UNION ALL
		 	SELECT '04' AS CNT_CODE, '추출완료' AS CNT_NAME, 0 AS TOT_CNT, NULL AS DTM FROM DB_ROOT
	) X
	GROUP BY X.CNT_CODE, X.CNT_NAME  -->
	SELECT X.CNT_CODE
		 , CASE WHEN X.CNT_CODE = '02' THEN '승인대기' 
				WHEN X.CNT_CODE = '04' THEN '추출완료' 
				ELSE '제공' END CNT_NAME
		 , TO_CHAR(SUM(X.TOT_CNT), '999,999,999,999') AS TOT_CNT
	  FROM ( SELECT A.CD AS  CNT_CODE
				  , TO_CHAR(COUNT(B.RGST_NO), '999,999,999,999') TOT_CNT
			  FROM ( SELECT DTL.COMM_DTL_CD CD
					   FROM WAA_COMM_DTL_CD DTL
					  INNER JOIN WAA_COMM_DCD DCD ON DTL.COMM_DCD_ID = DCD.COMM_DCD_ID
						AND DCD.EXP_DTM = TO_DATE('99991231','YYYYMMDD')
						AND DCD.REG_TYP_CD IN ('C','U')
					  WHERE DTL.EXP_DTM = TO_DATE('99991231','YYYYMMDD')
					    AND DTL.REG_TYP_CD IN ('C','U')
					    AND DCD.COMM_DCD = 'HAN_PROC_STATUS'
					    AND DTL.COMM_DTL_CD IN ('01','02','04')
				 ) A  
		   	  LEFT OUTER JOIN ( SELECT X.RGST_TYPE, X.RGST_NO, X.PROC_STATUS, Y.USER_ID
						   		  FROM WAQ_SRC_DATA_RQST X
						   		 INNER JOIN WAA_USER_SYS Y
						   			ON X.INFO_SYS_CD = Y.INFO_SYS_CD
						   		   AND X.CRG_USER_ID = Y.USER_ID
						   		   AND Y.REG_TYP_CD IN ('C', 'U')
						   		 WHERE X.RGST_TYPE != 'D' 
						   		   AND Y.USER_ID = #{userId}
		   		 ) B
		   		ON A.CD = B.PROC_STATUS
			 WHERE B.RGST_NO IS NOT NULL
			 GROUP BY 1
	  		UNION ALL
		 	SELECT '02' AS CNT_CODE, 0 AS TOT_CNT FROM DB_ROOT
		 	UNION ALL
		 	SELECT '04' AS CNT_CODE, 0 AS TOT_CNT FROM DB_ROOT
	) X
	GROUP BY 1
	ORDER BY 1
  </select>
  
  <select id="selectMyListCnt" resultMap="BaseResultMap" parameterType="java.lang.String">
	<!-- 스케쥴 배치용
	SELECT X.CNT_CODE
		 , X.CNT_NAME
		 , TO_CHAR(SUM(X.TOT_CNT), '999,999,999,999') AS TOT_CNT
		 , MAX(X.DTM) AS DTM
	  FROM ( SELECT CNT_CODE
				  , CNT_NAME
 				  , CNT1 AS TOT_CNT 
 				  , DTM
 			   FROM USERS_TOTAL 
 			  WHERE TYP_CD = 'GAP' 
 			    AND USER_ID = #{userId}
		   	UNION ALL
		 	SELECT 'C' AS CNT_CODE, '신규 테이블' AS CNT_NAME, 0 AS TOT_CNT, NULL AS DTM FROM DB_ROOT
		 	UNION ALL
		 	SELECT 'D' AS CNT_CODE, '삭제 테이블' AS CNT_NAME, 0 AS TOT_CNT, NULL AS DTM FROM DB_ROOT
		 	UNION ALL
		 	SELECT 'U' AS CNT_CODE, '변경 테이블' AS CNT_NAME, 0 AS TOT_CNT, NULL AS DTM FROM DB_ROOT
	) X
	GROUP BY X.CNT_CODE, X.CNT_NAME  -->
	SELECT X.CNT_CODE
		 , CASE WHEN X.CNT_CODE = 'C' THEN '신규 테이블' 
			   	WHEN X.CNT_CODE = 'D' THEN '삭제 테이블'
			   	WHEN X.CNT_CODE = 'U' THEN '변경 테이블'
			   	ELSE NULL END AS CNT_NAME
		 , TO_CHAR(SUM(X.TOT_CNT), '999,999,999,999') AS TOT_CNT
	  FROM ( SELECT X.GAP_STS_CD AS CNT_CODE
		          , COUNT(1) AS TOT_CNT
			   FROM (	SELECT CASE WHEN F.DBC_TBL_NM IS NULL THEN 'D'
				               ELSE A.GAP_STS_CD 
				          	   END AS GAP_STS_CD	  			              
				    	  FROM WAM_MTA_TBL A
				         INNER JOIN WAA_DB_SCH B
				            ON B.EXP_DTM = STR_TO_DATE('9999-12-31', '%Y-%m-%d') 
				           AND B.REG_TYP_CD IN ('C', 'U')
				           AND B.DB_SCH_ID = A.DB_SCH_ID
				         INNER JOIN WAA_DB_CONN_TRG C
				            ON C.EXP_DTM = STR_TO_DATE('9999-12-31', '%Y-%m-%d') 
				           AND C.REG_TYP_CD IN ('C', 'U')
				           AND C.DB_CONN_TRG_ID = B.DB_CONN_TRG_ID 
				         INNER JOIN WAA_INFO_SYS D
				            ON D.EXP_DTM = STR_TO_DATE('9999-12-31', '%Y-%m-%d') 
				           AND D.INFO_SYS_CD = C.INFO_SYS_CD
				         INNER JOIN WAA_ORG E
				            ON E.EXP_DTM = STR_TO_DATE('9999-12-31', '%Y-%m-%d') 
				           AND E.ORG_CD = D.ORG_CD  
				          LEFT JOIN WAT_DBC_TBL F
				            ON F.DB_SCH_ID   = A.DB_SCH_ID
				           AND F.DBC_TBL_NM  = A.MTA_TBL_PNM 
				  		 WHERE <!-- A.GAP_STS_CD != 'S'
				  		   AND  -->
				  		   D.INFO_SYS_CD IN ( SELECT INFO_SYS_CD
	  		   										FROM WAA_USER_SYS
	  		   									   WHERE REG_TYP_CD IN ('C', 'U')
	  		   										 AND USER_ID = #{userId} )
				    	   AND B.DB_SCH_ID IN (
				    	   			SELECT Y.DB_SCH_ID				     
								      FROM WAT_DBC_TBL Y							               
								     WHERE 1 = 1
								     GROUP BY Y.DB_SCH_ID       
								    HAVING COUNT(Y.DBC_TBL_NM) != 0 )		  		  
						 UNION ALL
						 SELECT 'C' AS GAP_STS_CD    
						   FROM WAT_DBC_TBL A
						  INNER JOIN WAA_DB_SCH B
						     ON B.EXP_DTM = STR_TO_DATE('9999-12-31', '%Y-%m-%d') 
						    AND B.REG_TYP_CD IN ('C', 'U')
				            AND B.DB_SCH_ID = A.DB_SCH_ID
				          INNER JOIN WAA_DB_CONN_TRG C
				             ON C.EXP_DTM = STR_TO_DATE('9999-12-31', '%Y-%m-%d') 
				            AND C.REG_TYP_CD IN ('C', 'U')
				            AND C.DB_CONN_TRG_ID = B.DB_CONN_TRG_ID 
				          INNER JOIN WAA_INFO_SYS D
				             ON D.EXP_DTM = STR_TO_DATE('9999-12-31', '%Y-%m-%d') 
				            AND D.INFO_SYS_CD = C.INFO_SYS_CD
				          INNER JOIN WAA_ORG E
				             ON E.EXP_DTM = STR_TO_DATE('9999-12-31', '%Y-%m-%d') 
				            AND E.ORG_CD = D.ORG_CD  
				  		  WHERE 1 = 1   
				  		     AND D.INFO_SYS_CD IN ( SELECT INFO_SYS_CD
	  		   										  FROM WAA_USER_SYS
	  		   										 WHERE REG_TYP_CD IN ('C', 'U')
	  		   										   AND USER_ID = #{userId} )
				    	    AND B.DB_SCH_ID IN (
				    	    		SELECT Y.DB_SCH_ID				     
								      FROM WAT_DBC_TBL Y							               
								     WHERE 1 = 1
								     GROUP BY Y.DB_SCH_ID       
								    HAVING COUNT(Y.DBC_TBL_NM) != 0  )		  							
				    		AND NOT EXISTS (
				    				SELECT 1
				                      FROM WAM_MTA_TBL X
				                     WHERE X.DB_SCH_ID = A.DB_SCH_ID
				                       AND X.MTA_TBL_PNM = A.DBC_TBL_NM )
				) X
			GROUP BY X.GAP_STS_CD
		   	UNION ALL
		 	SELECT 'C' AS CNT_CODE, 0 AS TOT_CNT FROM DB_ROOT
		 	UNION ALL
		 	SELECT 'D' AS CNT_CODE, 0 AS TOT_CNT FROM DB_ROOT
		 	UNION ALL
		 	SELECT 'U' AS CNT_CODE, 0 AS TOT_CNT FROM DB_ROOT
	) X
	WHERE X.CNT_CODE IN ('C','D','U')
	GROUP BY 1
	ORDER BY 1
  </select>
  
  <!-- 메인화면용 보유현황 -->
  <select id="selectMtaTotalCnt" resultMap="BaseResultMap" parameterType="java.lang.String">
	SELECT X.CNT_CODE
		 , X.CNT_NAME
		 , TO_CHAR(X.TOT_CNT, '999,999,999,999') AS TOT_CNT
		 , X.DTM
	FROM ( SELECT B.CNT_CODE
				, CASE B.CNT_CODE WHEN 1 THEN CNT1
			 					  WHEN 2 THEN CNT2
								  WHEN 3 THEN CNT3
								  WHEN 4 THEN CNT4 END AS TOT_CNT
				, CASE B.CNT_CODE WHEN 1 THEN '정보시스템수'
								  WHEN 2 THEN 'DB수'
								  WHEN 3 THEN '테이블수'
								  WHEN 4 THEN '컬럼수'  END AS CNT_NAME
				, A.DTM
			FROM ( 
				SELECT * FROM USERS_TOTAL WHERE TYP_CD = 'MTA' AND USER_ID = #{userId}
			) A
			CROSS JOIN(
				SELECT LEVEL AS CNT_CODE FROM DB_ROOT CONNECT BY LEVEL <![CDATA[<=]]> 4
			) B
		) X
  </select>
  
  <!-- 메인화면용 시스템모니터링  -->
  <select id="selectCollectorStatus" resultType="String" parameterType="map">
	SELECT CASE WHEN MAX(SVR_STATUS) = 'N' THEN 'on' ELSE 'off' END SVR_STATUS 
  	FROM WAA_GPUC_FSVR WHERE ORG_CD = '1311000'
  </select>
  
  <select id="selectEsbSvrStatus" resultType="String" parameterType="map">
	SELECT CASE WHEN MAX(SVR_STATUS) = 'N' THEN 'on' ELSE 'off' END SVR_STATUS 
  	FROM WAA_GPUC_FSVR WHERE ORG_CD = '1311000'
  </select>
  
  <select id="selectGpucFsvrStatus" resultType="String" parameterType="map">
	SELECT CASE WHEN MAX(SVR_STATUS) = 'N' THEN 'on' ELSE 'off' END SVR_STATUS 
  	FROM WAA_GPUC_FSVR 
  	<where>
  	<if test="list.size != 0">
	AND ORG_CD 
	IN <foreach collection="list" item="item" open="(" separator="," close=")">#{item.codeCd}</foreach>
	</if>
  	</where>
  </select>
  
  <insert id="mergeUsersGapMeta">
  	MERGE INTO USERS_TOTAL A
  	USING (
  		SELECT 'GAP' AS TYP_CD
  			 , X.USER_ID
  			 , X.GAP_STS_CD AS CNT_CODE
		 	 , CASE WHEN X.GAP_STS_CD = 'C' THEN '신규 테이블' 
		 		  	WHEN X.GAP_STS_CD = 'D' THEN '삭제 테이블'
		 		  	WHEN X.GAP_STS_CD = 'U' THEN '변경 테이블'
		 		  	ELSE NULL END AS CNT_NAME
	         , COUNT(1) AS CNT1
	         , TO_CHAR(SYSDATE, 'YYYY') || '년 ' || TO_CHAR(SYSDATE, 'MM') || '월 ' 
				  || TO_CHAR(SYSDATE, 'DD') || '일 ' || TO_CHAR(SYSDATETIME, 'HH24:MI') AS DTM
		  FROM (	SELECT CASE WHEN F.DBC_TBL_NM IS NULL THEN 'D'
			               ELSE A.GAP_STS_CD 
			          	   END AS GAP_STS_CD
			          	 , G.USER_ID 	  			              
			    	  FROM WAM_MTA_TBL A
			         INNER JOIN WAA_DB_SCH B
			            ON B.EXP_DTM = STR_TO_DATE('9999-12-31', '%Y-%m-%d') 
			           AND B.REG_TYP_CD IN ('C', 'U')
			           AND B.DB_SCH_ID = A.DB_SCH_ID
			         INNER JOIN WAA_DB_CONN_TRG C
			            ON C.EXP_DTM = STR_TO_DATE('9999-12-31', '%Y-%m-%d') 
			           AND C.REG_TYP_CD IN ('C', 'U')
			           AND C.DB_CONN_TRG_ID = B.DB_CONN_TRG_ID 
			         INNER JOIN WAA_INFO_SYS D
			            ON D.EXP_DTM = STR_TO_DATE('9999-12-31', '%Y-%m-%d') 
			           AND D.INFO_SYS_CD = C.INFO_SYS_CD
			         INNER JOIN WAA_ORG E
			            ON E.EXP_DTM = STR_TO_DATE('9999-12-31', '%Y-%m-%d') 
			           AND E.ORG_CD = D.ORG_CD  
			          LEFT JOIN WAT_DBC_TBL F
			            ON F.DB_SCH_ID   = A.DB_SCH_ID
			           AND F.DBC_TBL_NM  = A.MTA_TBL_PNM 
			    	 INNER JOIN WAA_USER_SYS G
			    		ON D.INFO_SYS_CD = G.INFO_SYS_CD
			    	   AND G.REG_TYP_CD IN ('C', 'U')
			  		 WHERE <!-- A.GAP_STS_CD != 'S'
			    	   AND  -->
			    	   B.DB_SCH_ID IN (
			    	   			SELECT Y.DB_SCH_ID				     
							      FROM WAT_DBC_TBL Y							               
							     WHERE 1 = 1
							     GROUP BY Y.DB_SCH_ID       
							    HAVING COUNT(Y.DBC_TBL_NM) != 0 )		  		  
					 UNION ALL
					 SELECT 'C' AS GAP_STS_CD
					 	  , G.USER_ID       
					   FROM WAT_DBC_TBL A
					  INNER JOIN WAA_DB_SCH B
					     ON B.EXP_DTM = STR_TO_DATE('9999-12-31', '%Y-%m-%d') 
					    AND B.REG_TYP_CD IN ('C', 'U')
			            AND B.DB_SCH_ID = A.DB_SCH_ID
			          INNER JOIN WAA_DB_CONN_TRG C
			             ON C.EXP_DTM = STR_TO_DATE('9999-12-31', '%Y-%m-%d') 
			            AND C.REG_TYP_CD IN ('C', 'U')
			            AND C.DB_CONN_TRG_ID = B.DB_CONN_TRG_ID 
			          INNER JOIN WAA_INFO_SYS D
			             ON D.EXP_DTM = STR_TO_DATE('9999-12-31', '%Y-%m-%d') 
			            AND D.INFO_SYS_CD = C.INFO_SYS_CD
			          INNER JOIN WAA_ORG E
			             ON E.EXP_DTM = STR_TO_DATE('9999-12-31', '%Y-%m-%d') 
			            AND E.ORG_CD = D.ORG_CD  
			    	  INNER JOIN WAA_USER_SYS G
			    		 ON D.INFO_SYS_CD = G.INFO_SYS_CD
			    		AND G.REG_TYP_CD IN ('C', 'U')
			  		  WHERE 1 = 1   
			    	    AND B.DB_SCH_ID IN (
			    	    		SELECT Y.DB_SCH_ID				     
							      FROM WAT_DBC_TBL Y							               
							     WHERE 1 = 1
							     GROUP BY Y.DB_SCH_ID       
							    HAVING COUNT(Y.DBC_TBL_NM) != 0  )		  							
			    		AND NOT EXISTS (
			    				SELECT 1
			                      FROM WAM_MTA_TBL X
			                     WHERE X.DB_SCH_ID = A.DB_SCH_ID
			                       AND X.MTA_TBL_PNM = A.DBC_TBL_NM )
			) X
		WHERE X.GAP_STS_CD IN ('C','D','U')	
		GROUP BY X.USER_ID, X.GAP_STS_CD
	    ORDER BY 1
  	) B
  	ON ( A.USER_ID = B.USER_ID AND A.TYP_CD = B.TYP_CD AND A.CNT_CODE = B.CNT_CODE )
  	WHEN MATCHED THEN
  	UPDATE SET
  		  CNT1 = B.CNT1
  		, CNT_NAME = B.CNT_NAME
  		, DTM  = B.DTM
  	WHEN NOT MATCHED THEN
  	INSERT (
  		  TYP_CD
  	 	, USER_ID
  		, CNT1
  		, CNT_CODE
  		, CNT_NAME
  		, DTM
  	) VALUES (
  		  B.TYP_CD
  		, B.USER_ID
  		, B.CNT1
  		, B.CNT_CODE
  		, B.CNT_NAME
  		, B.DTM
  	)
  </insert>
  
  <insert id="mergeUsersSrcData">
  	MERGE INTO USERS_TOTAL A
  	USING (
  		SELECT 'SRC' AS TYP_CD
  			 , B.USER_ID AS USER_ID
			 , A.CD AS  CNT_CODE
			 , A.CD_NM AS CNT_NAME
			 , TO_CHAR(COUNT(B.RGST_NO), '999,999,999,999') CNT1
			 , TO_CHAR(SYSDATE, 'YYYY') || '년 ' || TO_CHAR(SYSDATE, 'MM') || '월 ' 
				  || TO_CHAR(SYSDATE, 'DD') || '일 ' || TO_CHAR(SYSDATETIME, 'HH24:MI') AS DTM
		FROM (
			SELECT DTL.COMM_DTL_CD CD
				, CASE WHEN DTL.COMM_DTL_CD = '01' THEN '배부대기' 
				   WHEN DTL.COMM_DTL_CD = '02' THEN '승인대기' 
				   WHEN DTL.COMM_DTL_CD = '04' THEN '추출완료' 
				   ELSE '제공' END CD_NM
			FROM WAA_COMM_DTL_CD DTL
				INNER JOIN WAA_COMM_DCD DCD ON DTL.COMM_DCD_ID = DCD.COMM_DCD_ID
				AND DCD.EXP_DTM = TO_DATE('99991231','YYYYMMDD')
				AND DCD.REG_TYP_CD IN ('C','U')
			WHERE DTL.EXP_DTM = TO_DATE('99991231','YYYYMMDD')
			   AND DTL.REG_TYP_CD IN ('C','U')
			   AND DCD.COMM_DCD = 'HAN_PROC_STATUS'
			   AND DTL.COMM_DTL_CD IN ('01','02','04')
			) A  
		   LEFT OUTER JOIN (
		   		SELECT X.RGST_TYPE, X.RGST_NO, X.PROC_STATUS, Y.USER_ID
		   		  FROM WAQ_SRC_DATA_RQST X
		   		 INNER JOIN WAA_USER_SYS Y
		   			ON X.INFO_SYS_CD = Y.INFO_SYS_CD
		   		   AND X.CRG_USER_ID = Y.USER_ID
		   		   AND Y.REG_TYP_CD IN ('C', 'U')
		   		 WHERE X.RGST_TYPE != 'D' 
		   ) B
		   ON A.CD = B.PROC_STATUS
		WHERE B.RGST_NO IS NOT NULL
		GROUP BY B.USER_ID, A.CD, A.CD_NM
		ORDER BY B.USER_ID, A.CD
  	) B
  	ON ( A.USER_ID = B.USER_ID AND A.TYP_CD = B.TYP_CD AND A.CNT_CODE = B.CNT_CODE )
  	WHEN MATCHED THEN
  	UPDATE SET
  		  CNT1 = B.CNT1
  		, CNT_NAME = B.CNT_NAME
  		, DTM  = B.DTM
  	WHEN NOT MATCHED THEN
  	INSERT (
  		  TYP_CD
  	 	, USER_ID
  		, CNT1
  		, CNT_CODE
  		, CNT_NAME
  		, DTM
  	) VALUES (
  		  B.TYP_CD
  		, B.USER_ID
  		, B.CNT1
  		, B.CNT_CODE
  		, B.CNT_NAME
  		, B.DTM
  	)
  </insert>
  
  <insert id="mergeUsersTotMeta">
  	MERGE INTO USERS_TOTAL A
  	USING (
  		SELECT    'MTA' AS TYP_CD
  				, Y.USER_ID
				, IFNULL(TO_CHAR(SUM(X.CNT1), '999,999,999,999'),'0') AS CNT1
				, IFNULL(TO_CHAR(SUM(X.CNT2), '999,999,999,999'),'0') AS CNT2
				, IFNULL(TO_CHAR(SUM(X.CNT3), '999,999,999,999'),'0') AS CNT3
				, IFNULL(TO_CHAR(SUM(X.CNT4), '999,999,999,999'),'0') AS CNT4
				, TO_CHAR(SYSDATE, 'YYYY') || '년 ' || TO_CHAR(SYSDATE, 'MM') || '월 ' 
				  || TO_CHAR(SYSDATE, 'DD') || '일 ' || TO_CHAR(SYSDATETIME, 'HH24:MI') AS DTM
		FROM WAA_USER Y
		LEFT OUTER JOIN (
			SELECT  A.USER_ID
				, COUNT(DISTINCT B.INFO_SYS_CD) AS CNT1
		 		, COUNT(DISTINCT C.DB_CONN_TRG_ID) AS CNT2
		 		, COUNT(DISTINCT D.MTA_TBL_ID) AS CNT3
		 		, COUNT(DISTINCT E.MTA_COL_ID) AS CNT4
			 FROM WAA_USER_SYS A
			 INNER JOIN WAA_INFO_SYS B
	  		   ON A.INFO_SYS_CD = B.INFO_SYS_CD
			  AND B.EXP_DTM = TO_DATE('99991231','YYYYMMDD')
			 INNER JOIN WAA_DB_CONN_TRG C
			   ON B.ORG_CD = C.ORG_CD
			  AND B.INFO_SYS_CD = C.INFO_SYS_CD
			  AND C.EXP_DTM = TO_DATE('99991231','YYYYMMDD')
			  AND C.REG_TYP_CD IN ('C','U')
			 INNER JOIN WAM_MTA_TBL D
			   ON C.ORG_CD = D.ORG_CD
			  AND C.INFO_SYS_CD = D.INFO_SYS_CD
			  AND C.DB_CONN_TRG_ID = D.DB_CONN_TRG_ID
 			  AND SUBSTR(D.RQST_NO, 0, 3) = 'REQ'
			 INNER JOIN WAM_MTA_COL E
			   ON D.MTA_TBL_ID = E.MTA_TBL_ID
			WHERE A.REG_TYP_CD IN ('C','U')
			GROUP BY A.USER_ID
		) X
		ON Y.USER_ID = X.USER_ID
		WHERE Y.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')
		AND Y.REG_TYP_CD IN ('C', 'U')
		AND Y.USERG_ID != 'OBJ_00000065901'
		GROUP BY Y.USER_ID
  	) B
  	ON ( A.USER_ID = B.USER_ID AND A.TYP_CD = B.TYP_CD  )
  	WHEN MATCHED THEN
  	UPDATE SET
  		  CNT1 = B.CNT1
  		, CNT2 = B.CNT2
  		, CNT3 = B.CNT3
  		, CNT4 = B.CNT4
  		, DTM  = B.DTM
  	WHEN NOT MATCHED THEN
  	INSERT (
  		  TYP_CD
  	 	, USER_ID
  		, CNT1
  		, CNT2
  		, CNT3
  		, CNT4
  		, DTM
  	) VALUES (
  		  B.TYP_CD
  		, B.USER_ID
  		, B.CNT1
  		, B.CNT2
  		, B.CNT3
  		, B.CNT4
  		, B.DTM
  	)
  </insert>
    <select id="selectDbmsCnt" resultMap="BaseResultMap" >
  			SELECT A.TOT_CNT,
				   A.CNT_NAME
			FROM (
				SELECT COUNT(*) AS TOT_CNT, '진단대상DBMS' AS CNT_NAME FROM WAA_DB_CONN_TRG
				WHERE EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d')
				UNION ALL
				SELECT count(*) as TOT_CNT,
					   '테이블수'
						  FROM WAT_DBC_TBL A
						       INNER JOIN WAA_DB_SCH B
						          ON B.EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d')
						         AND B.DB_SCH_ID = A.DB_SCH_ID  
						       INNER JOIN WAA_DB_CONN_TRG C
						          ON C.EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d')
						         AND C.DB_CONN_TRG_ID = B.DB_CONN_TRG_ID  
						       LEFT JOIN WAA_EXP_TBL D
						         ON D.DB_SCH_ID  = A.DB_SCH_ID
						        AND D.DBC_TBL_NM = A.DBC_TBL_NM  
						  WHERE IFNULL(D.EXP_YN,'N')='N'      
				UNION ALL
				SELECT count(*) as TOT_CNT,
					   '컬럼수'
						  FROM WAT_DBC_COL A
						       INNER JOIN WAA_DB_SCH B
						          ON B.EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d')
						         AND B.DB_SCH_ID = A.DB_SCH_ID  
						       INNER JOIN WAA_DB_CONN_TRG C
						          ON C.EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d')
						         AND C.DB_CONN_TRG_ID = B.DB_CONN_TRG_ID  
						       LEFT JOIN WAA_EXP_TBL D
						         ON D.DB_SCH_ID  = A.DB_SCH_ID
						        AND D.DBC_TBL_NM = A.DBC_TBL_NM 
						       INNER JOIN WAT_DBC_TBL T
								  ON T.DB_SCH_ID  = A.DB_SCH_ID
								 AND T.DBC_TBL_NM = A.DBC_TBL_NM 
						   WHERE IFNULL(D.EXP_YN,'N')='N'      
				UNION ALL
				SELECT COUNT(*) AS TOT_CNT, '유저수' FROM WAA_USER
				WHERE EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d')
			) A
  	</select>
  	
  	
  <select id="selectPrfCntByDbms" resultMap="BaseResultMap" parameterType="kr.wise.commons.damgmt.db.service.WaaDbConnTrgVO">
	  SELECT 
	  	(SELECT UP.DQI_LNM FROM WAM_DQI UP WHERE UP.DQI_ID=DQI.UPP_DQI_ID) AS UPP_DQI_NM,
	  	(SELECT COUNT(1) FROM WAM_DQI UP WHERE UP.UPP_DQI_ID=DQI.UPP_DQI_ID) AS UPP_DQI_CNT,
	  	DQI.DQI_LNM,
		DD.TBL_CNT,
		DD.COL_CNT,
		DD.ERR_CNT,
		DD.ERR_RATE,
		DD.TOT_CNT,
		DD.NO_EXE,
	  	ROUND(DD.ERR_RATE * 100 / SUM(DD.ERR_RATE) OVER (partition by NOT DD.DQI_LNM='진단값 종합'),2) AS SUM_RATE  
	  	 FROM WAM_DQI DQI
	     LEFT OUTER JOIN (
			SELECT 
				AA.DQI_LNM,
				COUNT(DISTINCT DBC_TBL_NM) AS TBL_CNT,
				COUNT(*) AS COL_CNT,
			    SUM(ESN_ER_CNT) AS ERR_CNT,
			    ROUND((SUM(ESN_ER_CNT) / SUM(ANA_CNT)) * 100, 2) AS ERR_RATE,
			    SUM(ANA_CNT) AS TOT_CNT,
			    COUNT(ANA_STR_DTM) AS NO_EXE
			FROM (
				SELECT A.PRF_ID
						 , DQI.DQI_LNM
						 , A.ANA_STR_DTM
						 , D.DB_CONN_TRG_PNM
						 , C.DB_SCH_PNM     
						 , E.VRFC_ID
						 , E.VRFC_NM
						 , E.VRFC_RULE
						 , B.DBC_TBL_NM
						 , B.DBC_COL_NM
						 , A.ANA_CNT
						 , A.ESN_ER_CNT
						 , ROUND(A.ESN_ER_CNT / A.ANA_CNT * 100, 4) AS ER_RATE
						 , 'PT01' AS PRF_KND_CD
					  FROM WAM_PRF_RESULT A
						   INNER JOIN WAA_COL_RULE_REL B
							  ON B.RULE_REL_ID = A.PRF_ID
						   INNER JOIN WAA_DB_SCH C
							  ON C.EXP_DTM = STR_TO_DATE('99991231','%Y%m%d')
							 AND C.DB_SCH_ID = B.DB_SCH_ID 
						   INNER JOIN WAA_DB_CONN_TRG D
							  ON D.EXP_DTM = STR_TO_DATE('99991231','%Y%m%d')
							 AND D.DB_CONN_TRG_ID = C.DB_CONN_TRG_ID  
							 <if test="dbConnTrgId != null and dbConnTrgId != ''" > 
							 AND D.DB_CONN_TRG_ID = #{dbConnTrgId}
							 </if>
						   INNER JOIN WAA_VRFC_RULE E
							  ON E.EXP_DTM = STR_TO_DATE('99991231','%Y%m%d')
							 AND E.VRFC_ID = B.VRFC_ID 
						  LEFT OUTER JOIN WAM_DQI DQI
							  ON E.DQI_ID=DQI.DQI_ID 
						  LEFT JOIN WAA_EXP_TBL EX          
							  ON EX.DB_SCH_ID  = B.DB_SCH_ID  
							 AND EX.DBC_TBL_NM = B.DBC_TBL_NM 	  
					 WHERE  1 = 1  
					   AND (A.PRF_ID, A.ANA_STR_DTM) IN (SELECT PRF_ID, MAX(ANA_STR_DTM)
														   FROM WAM_PRF_RESULT
														  GROUP BY PRF_ID 
														 )   
			           AND IFNULL(EX.EXP_YN,'N')='N'                               
				 UNION ALL                             
					SELECT A.PRF_ID
						 , '관계키' AS DQI_LNM
						 , A.ANA_STR_DTM
						 , D.DB_CONN_TRG_PNM
						 , C.DB_SCH_PNM
						 , NULL AS VRFC_ID
						 , '참조무결성' AS VRFC_NM  
						 , NULL AS VRFC_RULE
						 , B.DBC_TBL_NM
						 , B.OBJ_NM  AS DBC_COL_NM
						 , A.ANA_CNT
						 , A.ESN_ER_CNT
						 , ROUND(A.ESN_ER_CNT / A.ANA_CNT * 100, 4) AS ER_RATE
						 , B.PRF_KND_CD         
					  FROM WAM_PRF_RESULT A
						   INNER JOIN WAM_PRF_MSTR B
							  ON B.EXP_DTM = STR_TO_DATE('99991231','%Y%m%d')
							 AND B.PRF_ID = A.PRF_ID 
						   INNER JOIN WAA_DB_SCH C
							  ON C.EXP_DTM = STR_TO_DATE('99991231','%Y%m%d')
							 AND C.DB_SCH_ID = B.DB_SCH_ID 
						   INNER JOIN WAA_DB_CONN_TRG D
							  ON D.EXP_DTM = STR_TO_DATE('99991231','%Y%m%d')
							 AND D.DB_CONN_TRG_ID = C.DB_CONN_TRG_ID 
							 <if test="dbConnTrgId != null and dbConnTrgId != ''" >
							 AND D.DB_CONN_TRG_ID = #{dbConnTrgId}
							 </if>
						   LEFT OUTER JOIN (SELECT 
											A.PRF_ID,
												GROUP_CONCAT(B.DQI_LNM
													ORDER BY A.DQI_ID
													SEPARATOR ',') AS DQI_LNM,
												GROUP_CONCAT(B.DQI_ID
													ORDER BY A.DQI_ID
													SEPARATOR ',') AS DQI_ID,
												GROUP_CONCAT(B.FULL_PATH
													ORDER BY A.DQI_ID
													SEPARATOR ',') AS DQI_FULL_PATH
										FROM
											WAM_PRF_DQI_MAP A
										INNER JOIN WAM_DQI B ON A.DQI_ID = B.DQI_ID
										GROUP BY A.PRF_ID) DQI ON B.PRF_ID = DQI.PRF_ID
							LEFT JOIN WAA_EXP_TBL EX          
							  ON EX.DB_SCH_ID  = B.DB_SCH_ID  
							 AND EX.DBC_TBL_NM = B.DBC_TBL_NM 			
					 WHERE  1 = 1  
					   AND B.PRF_KND_CD = 'PT01'
					   AND (A.PRF_ID, A.ANA_STR_DTM) IN (SELECT PRF_ID, MAX(ANA_STR_DTM)
														   FROM WAM_PRF_RESULT
														  GROUP BY PRF_ID 
														 )  
			           AND IFNULL(EX.EXP_YN,'N')='N'                                   
				UNION ALL                             
					SELECT A.BR_ID
						 , DQI.DQI_LNM
						 , A.ANA_STR_DTM
						 , D.DB_CONN_TRG_PNM
						 , C.DB_SCH_PNM
						 , NULL AS VRFC_ID     
						 , CONCAT('업무규칙', BR_NM) AS VRFC_NM  
						 , NULL AS VRFC_RULE
						 , B.DBC_TBL_NM
						 , B.DBC_COL_NM
						 , A.ANA_CNT
						 , A.ER_CNT AS ESN_ER_CNT
						 , ROUND(A.ER_CNT / A.ANA_CNT * 100, 4) AS ER_RATE
						 , 'BR' AS PRF_KND_CD
					  FROM WAM_BR_RESULT A
						   INNER JOIN WAM_BR_MSTR B
							  ON B.BR_ID = A.BR_ID 
						   INNER JOIN WAA_DB_SCH C
							  ON C.EXP_DTM = STR_TO_DATE('99991231','%Y%m%d')
							 AND C.DB_SCH_ID = B.DB_SCH_ID 
						   INNER JOIN WAA_DB_CONN_TRG D
							  ON D.EXP_DTM = STR_TO_DATE('99991231','%Y%m%d')
							 AND D.DB_CONN_TRG_ID = C.DB_CONN_TRG_ID   
							 <if test="dbConnTrgId != null and dbConnTrgId != ''" >
							 AND D.DB_CONN_TRG_ID = #{dbConnTrgId}
							 </if>
						   LEFT OUTER JOIN (SELECT 
											A.BR_ID,
												GROUP_CONCAT(B.DQI_LNM
													ORDER BY A.DQI_ID
													SEPARATOR ',') AS DQI_LNM,
												GROUP_CONCAT(B.DQI_ID
													ORDER BY A.DQI_ID
													SEPARATOR ',') AS DQI_ID,
												GROUP_CONCAT(B.FULL_PATH
													ORDER BY A.DQI_ID
													SEPARATOR ',') AS DQI_FULL_PATH
										FROM
											WAM_BR_DQI_MAP A
										INNER JOIN WAM_DQI B ON A.DQI_ID = B.DQI_ID
										GROUP BY A.BR_ID) DQI ON B.BR_ID = DQI.BR_ID  
							LEFT JOIN WAA_EXP_TBL EX          
							  ON EX.DB_SCH_ID  = B.DB_SCH_ID  
							 AND EX.DBC_TBL_NM = B.DBC_TBL_NM 			
					 WHERE  1 = 1     
					   AND (A.BR_ID, A.ANA_STR_DTM) IN (SELECT BR_ID, MAX(ANA_STR_DTM)
														  FROM WAM_BR_RESULT
														GROUP BY BR_ID 
														)
			           AND IFNULL(EX.EXP_YN,'N')='N'      
			 	UNION ALL
					SELECT A.PRF_ID
                     , '코드' AS DQI_LNM
					 , A.ANA_STR_DTM
					 , D.DB_CONN_TRG_PNM
					 , C.DB_SCH_PNM     
					 , E.CD_RULE_ID AS VRFC_ID
					 , B.VRFC_NM
					 , NULL AS VRFC_RULE
					 , B.DBC_TBL_NM
					 , B.DBC_COL_NM
					 , A.ANA_CNT
					 , A.ESN_ER_CNT
					 , ROUND(A.ESN_ER_CNT / A.ANA_CNT * 100, 4) AS ER_RATE
					 , 'PT01' AS PRF_KND_CD
				  FROM WAM_PRF_RESULT A
					   INNER JOIN WAA_COL_RULE_REL B
						  ON B.RULE_REL_ID = A.PRF_ID
					   INNER JOIN WAA_DB_SCH C
						  ON C.EXP_DTM = STR_TO_DATE('99991231','%Y%m%d')
						 AND C.DB_SCH_ID = B.DB_SCH_ID 
					   INNER JOIN WAA_DB_CONN_TRG D
						  ON D.EXP_DTM = STR_TO_DATE('99991231','%Y%m%d')
						 AND D.DB_CONN_TRG_ID = C.DB_CONN_TRG_ID 
						 <if test="dbConnTrgId != null and dbConnTrgId != ''" >
							 AND D.DB_CONN_TRG_ID = #{dbConnTrgId}
						 </if>
					   INNER JOIN WAA_CD_RULE E
						  ON E.CD_RULE_ID = B.VRFC_ID 
					  LEFT JOIN WAA_EXP_TBL EX          
						  ON EX.DB_SCH_ID  = B.DB_SCH_ID  
						 AND EX.DBC_TBL_NM = B.DBC_TBL_NM
				 WHERE  1 = 1  
				   AND (A.PRF_ID, A.ANA_STR_DTM) IN (SELECT PRF_ID, MAX(ANA_STR_DTM)
													   FROM WAM_PRF_RESULT
													  GROUP BY PRF_ID 
													 )
				   AND IFNULL(EX.EXP_YN,'N')='N'                                        
			 ) AA
			 GROUP BY AA.DQI_LNM
	 ) DD
		ON DQI.DQI_LNM = DD.DQI_LNM
	 WHERE DQI.DQI_LVL=2
	  <!-- AND DD.TBL_CNT IS NOT NULL -->
 	ORDER BY DQI.FULL_PATH
	
  </select>
  	
  <select id="selectPrfCnt" resultMap="BaseResultMap" >
	  SELECT 
	  	(SELECT UP.DQI_LNM FROM WAM_DQI UP WHERE UP.DQI_ID=DQI.UPP_DQI_ID) AS UPP_DQI_NM,
	  	(SELECT COUNT(1) FROM WAM_DQI UP WHERE UP.UPP_DQI_ID=DQI.UPP_DQI_ID) AS UPP_DQI_CNT,
	  	DQI.DQI_LNM,
		DD.TBL_CNT,
		DD.COL_CNT,
		DD.ERR_CNT,
		DD.ERR_RATE,
		DD.TOT_CNT,
		DD.NO_EXE,
	  	ROUND(DD.ERR_RATE * 100 / SUM(DD.ERR_RATE) OVER (partition by NOT DD.DQI_LNM='진단값 종합'),2) AS SUM_RATE  
	  	 FROM WAM_DQI DQI
	     LEFT OUTER JOIN (
			SELECT 
				AA.DQI_LNM,
				COUNT(DISTINCT DBC_TBL_NM) AS TBL_CNT,
				COUNT(*) AS COL_CNT,
			    SUM(ESN_ER_CNT) AS ERR_CNT,
			    ROUND((SUM(ESN_ER_CNT) / SUM(ANA_CNT)) * 100, 2) AS ERR_RATE,
			    SUM(ANA_CNT) AS TOT_CNT,
			    COUNT(ANA_STR_DTM) AS NO_EXE
			FROM (
				SELECT A.PRF_ID
						 , DQI.DQI_LNM
						 , A.ANA_STR_DTM
						 , D.DB_CONN_TRG_PNM
						 , C.DB_SCH_PNM     
						 , E.VRFC_ID
						 , E.VRFC_NM
						 , E.VRFC_RULE
						 , B.DBC_TBL_NM
						 , B.DBC_COL_NM
						 , A.ANA_CNT
						 , A.ESN_ER_CNT
						 , ROUND(A.ESN_ER_CNT / A.ANA_CNT * 100, 4) AS ER_RATE
						 , 'PT01' AS PRF_KND_CD
					  FROM WAM_PRF_RESULT A
						   INNER JOIN WAA_COL_RULE_REL B
							  ON B.RULE_REL_ID = A.PRF_ID
						   INNER JOIN WAA_DB_SCH C
							  ON C.EXP_DTM = STR_TO_DATE('99991231','%Y%m%d')
							 AND C.DB_SCH_ID = B.DB_SCH_ID 
						   INNER JOIN WAA_DB_CONN_TRG D
							  ON D.EXP_DTM = STR_TO_DATE('99991231','%Y%m%d')
							 AND D.DB_CONN_TRG_ID = C.DB_CONN_TRG_ID   
						   INNER JOIN WAA_VRFC_RULE E
							  ON E.EXP_DTM = STR_TO_DATE('99991231','%Y%m%d')
							 AND E.VRFC_ID = B.VRFC_ID 
						  LEFT OUTER JOIN WAM_DQI DQI
							  ON E.DQI_ID=DQI.DQI_ID 
						  LEFT JOIN WAA_EXP_TBL EX          
							  ON EX.DB_SCH_ID  = B.DB_SCH_ID  
							 AND EX.DBC_TBL_NM = B.DBC_TBL_NM 	  
					 WHERE  1 = 1  
					   AND (A.PRF_ID, A.ANA_STR_DTM) IN (SELECT PRF_ID, MAX(ANA_STR_DTM)
														   FROM WAM_PRF_RESULT
														  GROUP BY PRF_ID 
														 )   
			           AND IFNULL(EX.EXP_YN,'N')='N'                               
				 UNION ALL                             
					SELECT A.PRF_ID
						 , '관계키' AS DQI_LNM
						 , A.ANA_STR_DTM
						 , D.DB_CONN_TRG_PNM
						 , C.DB_SCH_PNM
						 , NULL AS VRFC_ID
						 , '참조무결성' AS VRFC_NM  
						 , NULL AS VRFC_RULE
						 , B.DBC_TBL_NM
						 , B.OBJ_NM  AS DBC_COL_NM
						 , A.ANA_CNT
						 , A.ESN_ER_CNT
						 , ROUND(A.ESN_ER_CNT / A.ANA_CNT * 100, 4) AS ER_RATE
						 , B.PRF_KND_CD         
					  FROM WAM_PRF_RESULT A
						   INNER JOIN WAM_PRF_MSTR B
							  ON B.EXP_DTM = STR_TO_DATE('99991231','%Y%m%d')
							 AND B.PRF_ID = A.PRF_ID 
						   INNER JOIN WAA_DB_SCH C
							  ON C.EXP_DTM = STR_TO_DATE('99991231','%Y%m%d')
							 AND C.DB_SCH_ID = B.DB_SCH_ID 
						   INNER JOIN WAA_DB_CONN_TRG D
							  ON D.EXP_DTM = STR_TO_DATE('99991231','%Y%m%d')
							 AND D.DB_CONN_TRG_ID = C.DB_CONN_TRG_ID
						   LEFT OUTER JOIN (SELECT 
											A.PRF_ID,
												GROUP_CONCAT(B.DQI_LNM
													ORDER BY A.DQI_ID
													SEPARATOR ',') AS DQI_LNM,
												GROUP_CONCAT(B.DQI_ID
													ORDER BY A.DQI_ID
													SEPARATOR ',') AS DQI_ID,
												GROUP_CONCAT(B.FULL_PATH
													ORDER BY A.DQI_ID
													SEPARATOR ',') AS DQI_FULL_PATH
										FROM
											WAM_PRF_DQI_MAP A
										INNER JOIN WAM_DQI B ON A.DQI_ID = B.DQI_ID
										GROUP BY A.PRF_ID) DQI ON B.PRF_ID = DQI.PRF_ID
							LEFT JOIN WAA_EXP_TBL EX          
							  ON EX.DB_SCH_ID  = B.DB_SCH_ID  
							 AND EX.DBC_TBL_NM = B.DBC_TBL_NM 			
					 WHERE  1 = 1  
					   AND B.PRF_KND_CD = 'PT01'
					   AND (A.PRF_ID, A.ANA_STR_DTM) IN (SELECT PRF_ID, MAX(ANA_STR_DTM)
														   FROM WAM_PRF_RESULT
														  GROUP BY PRF_ID 
														 )  
			           AND IFNULL(EX.EXP_YN,'N')='N'                                   
				UNION ALL                             
					SELECT A.BR_ID
						 , DQI.DQI_LNM
						 , A.ANA_STR_DTM
						 , D.DB_CONN_TRG_PNM
						 , C.DB_SCH_PNM
						 , NULL AS VRFC_ID     
						 , CONCAT('업무규칙', BR_NM) AS VRFC_NM  
						 , NULL AS VRFC_RULE
						 , B.DBC_TBL_NM
						 , B.DBC_COL_NM
						 , A.ANA_CNT
						 , A.ER_CNT AS ESN_ER_CNT
						 , ROUND(A.ER_CNT / A.ANA_CNT * 100, 4) AS ER_RATE
						 , 'BR' AS PRF_KND_CD
					  FROM WAM_BR_RESULT A
						   INNER JOIN WAM_BR_MSTR B
							  ON B.BR_ID = A.BR_ID 
						   INNER JOIN WAA_DB_SCH C
							  ON C.EXP_DTM = STR_TO_DATE('99991231','%Y%m%d')
							 AND C.DB_SCH_ID = B.DB_SCH_ID 
						   INNER JOIN WAA_DB_CONN_TRG D
							  ON D.EXP_DTM = STR_TO_DATE('99991231','%Y%m%d')
							 AND D.DB_CONN_TRG_ID = C.DB_CONN_TRG_ID  
						   LEFT OUTER JOIN (SELECT 
											A.BR_ID,
												GROUP_CONCAT(B.DQI_LNM
													ORDER BY A.DQI_ID
													SEPARATOR ',') AS DQI_LNM,
												GROUP_CONCAT(B.DQI_ID
													ORDER BY A.DQI_ID
													SEPARATOR ',') AS DQI_ID,
												GROUP_CONCAT(B.FULL_PATH
													ORDER BY A.DQI_ID
													SEPARATOR ',') AS DQI_FULL_PATH
										FROM
											WAM_BR_DQI_MAP A
										INNER JOIN WAM_DQI B ON A.DQI_ID = B.DQI_ID
										GROUP BY A.BR_ID) DQI ON B.BR_ID = DQI.BR_ID  
							LEFT JOIN WAA_EXP_TBL EX          
							  ON EX.DB_SCH_ID  = B.DB_SCH_ID  
							 AND EX.DBC_TBL_NM = B.DBC_TBL_NM 			
					 WHERE  1 = 1     
					   AND (A.BR_ID, A.ANA_STR_DTM) IN (SELECT BR_ID, MAX(ANA_STR_DTM)
														  FROM WAM_BR_RESULT
														GROUP BY BR_ID 
														)
			           AND IFNULL(EX.EXP_YN,'N')='N'      
			 	UNION ALL
					SELECT A.PRF_ID
                     , '코드' AS DQI_LNM
					 , A.ANA_STR_DTM
					 , D.DB_CONN_TRG_PNM
					 , C.DB_SCH_PNM     
					 , E.CD_RULE_ID AS VRFC_ID
					 , B.VRFC_NM
					 , NULL AS VRFC_RULE
					 , B.DBC_TBL_NM
					 , B.DBC_COL_NM
					 , A.ANA_CNT
					 , A.ESN_ER_CNT
					 , ROUND(A.ESN_ER_CNT / A.ANA_CNT * 100, 4) AS ER_RATE
					 , 'PT01' AS PRF_KND_CD
				  FROM WAM_PRF_RESULT A
					   INNER JOIN WAA_COL_RULE_REL B
						  ON B.RULE_REL_ID = A.PRF_ID
					   INNER JOIN WAA_DB_SCH C
						  ON C.EXP_DTM = STR_TO_DATE('99991231','%Y%m%d')
						 AND C.DB_SCH_ID = B.DB_SCH_ID 
					   INNER JOIN WAA_DB_CONN_TRG D
						  ON D.EXP_DTM = STR_TO_DATE('99991231','%Y%m%d')
						 AND D.DB_CONN_TRG_ID = C.DB_CONN_TRG_ID   
					   INNER JOIN WAA_CD_RULE E
						  ON E.CD_RULE_ID = B.VRFC_ID 
					  LEFT JOIN WAA_EXP_TBL EX          
						  ON EX.DB_SCH_ID  = B.DB_SCH_ID  
						 AND EX.DBC_TBL_NM = B.DBC_TBL_NM
				 WHERE  1 = 1  
				   AND (A.PRF_ID, A.ANA_STR_DTM) IN (SELECT PRF_ID, MAX(ANA_STR_DTM)
													   FROM WAM_PRF_RESULT
													  GROUP BY PRF_ID 
													 )
				   AND IFNULL(EX.EXP_YN,'N')='N'                                        
			 ) AA
			 GROUP BY AA.DQI_LNM
	 ) DD
		ON DQI.DQI_LNM = DD.DQI_LNM
	 WHERE DQI.DQI_LVL=2
 	ORDER BY DQI.FULL_PATH
			 
  </select>
   <select id="selectChartCnt" resultMap="BaseResultMap" >
   SELECT 
  	SUM(TOT_CNT) AS TOT_CNT,
   SUM(ERR_CNT) AS ERR_CNT,
   ROUND((SUM(ERR_CNT)/SUM(TOT_CNT))*100,2) AS ERR_RATE
  	 FROM (
		SELECT 
			DQI_LNM,
			COUNT(DISTINCT DBC_TBL_NM) AS TBL_CNT,
			COUNT(*) AS COL_CNT,
		    SUM(ESN_ER_CNT) AS ERR_CNT,
		    ROUND((SUM(ESN_ER_CNT) / SUM(ANA_CNT)) * 100, 2) AS ERR_RATE,
		    SUM(ANA_CNT) AS TOT_CNT,
		    COUNT(ANA_STR_DTM) AS NO_EXE
		FROM (
			SELECT A.PRF_ID
					 , DQI.DQI_LNM
					 , A.ANA_STR_DTM
					 , D.DB_CONN_TRG_PNM
					 , C.DB_SCH_PNM     
					 , E.VRFC_ID
					 , E.VRFC_NM
					 , E.VRFC_RULE
					 , B.DBC_TBL_NM
					 , B.DBC_COL_NM
					 , A.ANA_CNT
					 , A.ESN_ER_CNT
					 , ROUND(A.ESN_ER_CNT / A.ANA_CNT * 100, 4) AS ER_RATE
					 , 'PT01' AS PRF_KND_CD
				  FROM WAM_PRF_RESULT A
					   INNER JOIN WAA_COL_RULE_REL B
						  ON B.RULE_REL_ID = A.PRF_ID
					   INNER JOIN WAA_DB_SCH C
						  ON C.EXP_DTM = STR_TO_DATE('99991231','%Y%m%d')
						 AND C.DB_SCH_ID = B.DB_SCH_ID 
					   INNER JOIN WAA_DB_CONN_TRG D
						  ON D.EXP_DTM = STR_TO_DATE('99991231','%Y%m%d')
						 AND D.DB_CONN_TRG_ID = C.DB_CONN_TRG_ID   
					   INNER JOIN WAA_VRFC_RULE E
						  ON E.EXP_DTM = STR_TO_DATE('99991231','%Y%m%d')
						 AND E.VRFC_ID = B.VRFC_ID 
					  LEFT OUTER JOIN WAM_DQI DQI
						  ON E.DQI_ID=DQI.DQI_ID 
					  LEFT JOIN WAA_EXP_TBL EX          
						  ON EX.DB_SCH_ID  = B.DB_SCH_ID  
						 AND EX.DBC_TBL_NM = B.DBC_TBL_NM 	  
				 WHERE  1 = 1  
				   AND (A.PRF_ID, A.ANA_STR_DTM) IN (SELECT PRF_ID, MAX(ANA_STR_DTM)
													   FROM WAM_PRF_RESULT
													  GROUP BY PRF_ID 
													 )   
		           AND IFNULL(EX.EXP_YN,'N')='N'                                   
			 UNION ALL                             
				SELECT A.PRF_ID
					 , DQI.DQI_LNM
					 , A.ANA_STR_DTM
					 , D.DB_CONN_TRG_PNM
					 , C.DB_SCH_PNM
					 , NULL AS VRFC_ID
					 , '참조무결성' AS VRFC_NM  
					 , NULL AS VRFC_RULE
					 , B.DBC_TBL_NM
					 , B.OBJ_NM  AS DBC_COL_NM
					 , A.ANA_CNT
					 , A.ESN_ER_CNT
					 , ROUND(A.ESN_ER_CNT / A.ANA_CNT * 100, 4) AS ER_RATE
					 , B.PRF_KND_CD         
				  FROM WAM_PRF_RESULT A
					   INNER JOIN WAM_PRF_MSTR B
						  ON B.EXP_DTM = STR_TO_DATE('99991231','%Y%m%d')
						 AND B.PRF_ID = A.PRF_ID 
					   INNER JOIN WAA_DB_SCH C
						  ON C.EXP_DTM = STR_TO_DATE('99991231','%Y%m%d')
						 AND C.DB_SCH_ID = B.DB_SCH_ID 
					   INNER JOIN WAA_DB_CONN_TRG D
						  ON D.EXP_DTM = STR_TO_DATE('99991231','%Y%m%d')
						 AND D.DB_CONN_TRG_ID = C.DB_CONN_TRG_ID
					   LEFT OUTER JOIN (SELECT 
										A.PRF_ID,
											GROUP_CONCAT(B.DQI_LNM
												ORDER BY A.DQI_ID
												SEPARATOR ',') AS DQI_LNM,
											GROUP_CONCAT(B.DQI_ID
												ORDER BY A.DQI_ID
												SEPARATOR ',') AS DQI_ID,
											GROUP_CONCAT(B.FULL_PATH
												ORDER BY A.DQI_ID
												SEPARATOR ',') AS DQI_FULL_PATH
									FROM
										WAM_PRF_DQI_MAP A
									INNER JOIN WAM_DQI B ON A.DQI_ID = B.DQI_ID
									GROUP BY A.PRF_ID) DQI ON B.PRF_ID = DQI.PRF_ID
						LEFT JOIN WAA_EXP_TBL EX          
						  ON EX.DB_SCH_ID  = B.DB_SCH_ID  
						 AND EX.DBC_TBL_NM = B.DBC_TBL_NM			
				 WHERE  1 = 1  
				   AND B.PRF_KND_CD = 'PT01'
				   AND (A.PRF_ID, A.ANA_STR_DTM) IN (SELECT PRF_ID, MAX(ANA_STR_DTM)
													   FROM WAM_PRF_RESULT
													  GROUP BY PRF_ID 
													 )  
		           AND IFNULL(EX.EXP_YN,'N')='N'                                 
			UNION ALL                             
				SELECT A.BR_ID
					 , DQI.DQI_LNM
					 , A.ANA_STR_DTM
					 , D.DB_CONN_TRG_PNM
					 , C.DB_SCH_PNM
					 , NULL AS VRFC_ID     
					 , CONCAT('업무규칙', BR_NM) AS VRFC_NM  
					 , NULL AS VRFC_RULE
					 , B.DBC_TBL_NM
					 , B.DBC_COL_NM
					 , A.ANA_CNT
					 , A.ER_CNT AS ESN_ER_CNT
					 , ROUND(A.ER_CNT / A.ANA_CNT * 100, 4) AS ER_RATE
					 , 'BR' AS PRF_KND_CD
				  FROM WAM_BR_RESULT A
					   INNER JOIN WAM_BR_MSTR B
						  ON B.BR_ID = A.BR_ID 
					   INNER JOIN WAA_DB_SCH C
						  ON C.EXP_DTM = STR_TO_DATE('99991231','%Y%m%d')
						 AND C.DB_SCH_ID = B.DB_SCH_ID 
					   INNER JOIN WAA_DB_CONN_TRG D
						  ON D.EXP_DTM = STR_TO_DATE('99991231','%Y%m%d')
						 AND D.DB_CONN_TRG_ID = C.DB_CONN_TRG_ID  
					   LEFT OUTER JOIN (SELECT 
										A.BR_ID,
											GROUP_CONCAT(B.DQI_LNM
												ORDER BY A.DQI_ID
												SEPARATOR ',') AS DQI_LNM,
											GROUP_CONCAT(B.DQI_ID
												ORDER BY A.DQI_ID
												SEPARATOR ',') AS DQI_ID,
											GROUP_CONCAT(B.FULL_PATH
												ORDER BY A.DQI_ID
												SEPARATOR ',') AS DQI_FULL_PATH
									FROM
										WAM_BR_DQI_MAP A
									INNER JOIN WAM_DQI B ON A.DQI_ID = B.DQI_ID
									GROUP BY A.BR_ID) DQI ON B.BR_ID = DQI.BR_ID 
						LEFT JOIN WAA_EXP_TBL EX          
						  ON EX.DB_SCH_ID  = B.DB_SCH_ID  
						 AND EX.DBC_TBL_NM = B.DBC_TBL_NM			 
				 WHERE  1 = 1     
				   AND (A.BR_ID, A.ANA_STR_DTM) IN (SELECT BR_ID, MAX(ANA_STR_DTM)
													  FROM WAM_BR_RESULT
													GROUP BY BR_ID 
													)
		           AND IFNULL(EX.EXP_YN,'N')='N'                                
		 ) AA
		 GROUP BY DQI_LNM
 ) DD
   </select>
</mapper>