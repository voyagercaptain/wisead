<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.wise.dq.stnd.service.WapDvCanAsmMapper" >
  <resultMap id="BaseResultMap" type="kr.wise.dq.stnd.service.WapDvCanAsm"  extends="kr.wise.commons.damgmt.dmnginfo.service.WaaInfoTypeMapper.BaseResultMap">
    <result column="DV_RQST_NO" 	   property="dvRqstNo" 	     jdbcType="VARCHAR" />
    <result column="DIC_ASM_LNM" 	   property="dicAsmLnm" 	 jdbcType="VARCHAR" />
    <result column="DIC_ASM_PNM" 	   property="dicAsmPnm" 	 jdbcType="VARCHAR" />
    <result column="DMN_LNM" 		   property="dmnLnm" 		 jdbcType="VARCHAR" />
    <result column="DMN_PNM" 		   property="dmnPnm" 		 jdbcType="VARCHAR" />
    <result column="DMNG_LNM" 		   property="dmngLnm" 		 jdbcType="VARCHAR" />
    <result column="DMNG_ID" 		   property="dmngId" 		 jdbcType="VARCHAR" />
    <result column="DIC_ASM_DS_LNM"    property="dicAsmDsLnm" 	 jdbcType="VARCHAR" />
    <result column="DIC_ASM_DS_PNM"    property="dicAsmDsPnm" 	 jdbcType="VARCHAR" />
    <result column="DV_TRG_LNM" 	   property="dvTrgLnm" 	     jdbcType="VARCHAR" />
    <result column="DV_ORG_LNM" 	   property="dvOrgLnm" 	     jdbcType="VARCHAR" />
    <result column="DV_ENC_YN" 	       property="dvEncYn" 	     jdbcType="VARCHAR" />
    <result column="DV_OBJ_DESCN" 	   property="dvObjDescn" 	 jdbcType="VARCHAR" />
    <result column="DV_RQST_RES" 	   property="dvRqstRes" 	 jdbcType="VARCHAR" />
    <result column="PRC_CD" 		   property="prcCd"          jdbcType="VARCHAR" />
    <result column="REG_POS_YN" 	   property="regPosYn"       jdbcType="VARCHAR" />
    <result column="DV_SE_CD" 		   property="dvSeCd"         jdbcType="VARCHAR" />
    <result column="SDITM_AUTO_CRT_YN" property="sditmAutoCrtYn" jdbcType="VARCHAR" />
    <result column="CD_VAL_TYP_CD"     property="cdValTypCd"     jdbcType="VARCHAR" />
    <result column="CD_VAL_IVW_CD"     property="cdValIvwCd"     jdbcType="VARCHAR" /> 
    <result column="DMN_YN"            property="dmnYn"     jdbcType="VARCHAR" /> 
  </resultMap>
  
  <insert id="insertFirst" parameterType="kr.wise.dq.stnd.service.WapDvCanDic" >
    insert into WAP_DV_CAN_ASM (DV_RQST_NO, DV_TRG_LNM, PRC_CD, DV_ORG_LNM ,DV_RQST_USER_ID ,DV_ENC_YN ,DV_OBJ_DESCN, DV_SE_CD )
    values (#{dvRqstNo,jdbcType=VARCHAR}, #{trgLnm,jdbcType=VARCHAR}, 'A', #{trgLnm,jdbcType=VARCHAR}, #{dvRqstUserId,jdbcType=VARCHAR}, #{dvEncYn,jdbcType=VARCHAR}, #{dvObjDescn,jdbcType=VARCHAR}, #{dvSeCd,jdbcType=VARCHAR})
  </insert>
  
  <insert id="insertDvListFirst" parameterType="kr.wise.dq.stnd.service.WapDvCanAsm" >
    insert into WAP_DV_CAN_ASM (
    	DV_RQST_NO
    	, DV_TRG_LNM
    	, PRC_CD
    	, DV_ORG_LNM 
    	, DV_RQST_USER_ID 
    	, DV_ENC_YN 
    	, DV_OBJ_DESCN
    	, DV_SE_CD
    	, DMNG_LNM  
    	, INFOTP_LNM   
    	, SDITM_AUTO_CRT_YN
    	, CD_VAL_TYP_CD
    	, CD_VAL_IVW_CD
    	 )  values (
    	 #{dvRqstNo,jdbcType=VARCHAR}
    	 , #{dvOrgLnm,jdbcType=VARCHAR}
    	 , 'A'
    	 , #{dvOrgLnm,jdbcType=VARCHAR}
    	 , #{dvRqstUserId,jdbcType=VARCHAR}
    	 , #{dvEncYn,jdbcType=VARCHAR}
    	 , #{dvObjDescn,jdbcType=VARCHAR}
    	 , #{dvSeCd,jdbcType=VARCHAR}    	 
    	 , #{dmngLnm,jdbcType=VARCHAR}
    	 , #{infotpLnm,jdbcType=VARCHAR}
    	 , #{sditmAutoCrtYn,jdbcType=VARCHAR}
    	 , #{cdValTypCd,jdbcType=VARCHAR}   	    	 
    	 , #{cdValIvwCd,jdbcType=VARCHAR}
    	 )
  </insert>
  
  <update id="updateDvListFirst" parameterType="java.lang.String" >
<!-- 오라클 원본   -->
 UPDATE WAP_DV_CAN_ASM A
   SET (A.DV_TRG_LNM, A.DV_TRG_LNM_NUM) = (SELECT RTRIM(DV_ORG_LNM, '1234567890'), SUBSTR(DV_ORG_LNM, CHAR_LENGTH(RTRIM(DV_ORG_LNM, '1234567890'))+1, CHAR_LENGTH(DV_ORG_LNM) )
                                         FROM WAP_DV_CAN_ASM B
                                        WHERE B.DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR}
                                          AND A.DV_RQST_NO = B.DV_RQST_NO
                                          AND A.DV_ORG_LNM = B.DV_ORG_LNM)
 WHERE A.DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR}  

  
<!-- 마리아DB 버전 , 오라클버전하고 결과값이 같은지 비교하고 바꿀것
   UPDATE WAP_DV_CAN_ASM A ,
		(SELECT TRIM(TRAILING '1234567890' FROM B.DV_ORG_LNM) AS D_O_L , SUBSTR(B.DV_ORG_LNM, CHAR_LENGTH(TRIM(TRAILING '1234567890' FROM B.DV_ORG_LNM))+1, CHAR_LENGTH(B.DV_ORG_LNM) ) AS D_O_L_N
                                         FROM WAP_DV_CAN_ASM A , WAP_DV_CAN_ASM B
                                        WHERE B.DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR}
                                          AND A.DV_RQST_NO = B.DV_RQST_NO
                                          AND A.DV_ORG_LNM = B.DV_ORG_LNM ) C
   SET A.DV_TRG_LNM = C.D_O_L , A.DV_TRG_LNM_NUM = C.D_O_L_N
   WHERE A.DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR}  
 -->
  </update>
  
  <insert id="insertAsmDic" parameterType="java.lang.String" >
	insert into WAP_DV_CAN_ASM (
		DV_RQST_NO
		, DIC_ASM_LNM
		, DIC_ASM_PNM
		, DMN_LNM
		, DMN_PNM
		, DIC_ASM_DS_LNM
		, DIC_ASM_DS_PNM
		, DV_TRG_LNM
		, PRC_CD
		, DV_ORG_LNM 
		, DV_RQST_USER_ID 
		, DV_ENC_YN 
		, DV_OBJ_DESCN
		, DV_SE_CD
		, DMNG_LNM  
    	, INFOTP_LNM 
    	, SDITM_AUTO_CRT_YN
    	, CD_VAL_TYP_CD
    	, CD_VAL_IVW_CD
	)  
	SELECT DISTINCT 
	        B.DV_RQST_NO
	      , CONCAT( IFNULL(B.DIC_ASM_LNM,'') , IFNULL(A.DIC_LNM,'') ) as DIC_ASM_LNM 
 	      , CONCAT( IFNULL(B.DIC_ASM_PNM,'') , '_' , IFNULL(A.DIC_PNM,'') ) as DIC_ASM_PNM
 	      , B.DMN_LNM
 	      , B.DMN_PNM  
 	      , CONCAT( IFNULL(B.DIC_ASM_DS_LNM,'') , '_' , IFNULL(A.DIC_LNM,'') ) as DIC_ASM_DS_LNM
	      , CONCAT( IFNULL(B.DIC_ASM_DS_PNM,'') , '_' , IFNULL(A.DIC_PNM,'') ) as DIC_ASM_DS_PNM 
	      , NULLIF(SUBSTR(B.DV_TRG_LNM, CHAR_LENGTH(A.DIC_LNM)+1),'') AS DV_TRG_LNM
	      , CASE WHEN NULLIF(SUBSTR(B.DV_TRG_LNM, CHAR_LENGTH(A.DIC_LNM)+1),'') IS NULL THEN 'Y' ELSE 'N' END AS PRC_CD 
	      , B.DV_ORG_LNM
	      , B.DV_RQST_USER_ID 
	      , B.DV_ENC_YN 
	      , B.DV_OBJ_DESCN
	      , B.DV_SE_CD
	      , B.DMNG_LNM  
    	  , B.INFOTP_LNM 
    	  , B.SDITM_AUTO_CRT_YN
    	  , B.CD_VAL_TYP_CD
    	  , B.CD_VAL_IVW_CD
	  FROM WAP_DV_CAN_DIC A
	       INNER JOIN WAP_DV_CAN_ASM B
	          ON B.DV_TRG_LNM LIKE CONCAT( IFNULL(A.DIC_LNM,'') , '%' ) 
	         AND B.DV_RQST_NO = A.DV_RQST_NO 
	         AND B.PRC_CD = 'A' 
	         AND B.DV_RQST_RES IS NULL
<!-- 	WHERE A.DIC_DS = 'W' -->
	   WHERE A.DIC_DS IN ('W','C')  --  분류어 포함 
	  AND A.DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR} 
  </insert>
  
  <insert id="insertAsmDmn" parameterType="java.lang.String" >
	insert into WAP_DV_CAN_ASM 
	(  DV_RQST_NO
	 , DMN_LNM, DMN_PNM
	 , DV_TRG_LNM
	 , PRC_CD
	 , DV_ORG_LNM 
	 , DV_RQST_USER_ID 
	 , DV_ENC_YN 
	 , DV_OBJ_DESCN
	 , DV_SE_CD
	 , INFOTP_LNM
	)  
	SELECT B.DV_RQST_NO
 	     , A.DIC_LNM AS DMN_LNM
 	     , A.DIC_PNM AS DMN_PNM
	     , SUBSTR(B.DV_TRG_LNM, 1, CHAR_LENGTH(B.DV_TRG_LNM) - CHAR_LENGTH(A.DIC_LNM)) AS DV_TRG_LNM
	     , case when SUBSTR(B.DV_TRG_LNM, 1, CHAR_LENGTH(B.DV_TRG_LNM) - CHAR_LENGTH(A.DIC_LNM)) is null then 'Y' else 'A' end AS PRC_CD
	     , B.DV_ORG_LNM
	     , B.DV_RQST_USER_ID 
	     , B.DV_ENC_YN 
	     , B.DV_OBJ_DESCN
	     , B.DV_SE_CD
	     , B.INFOTP_LNM
	  FROM WAP_DV_CAN_DIC A
	       INNER JOIN WAP_DV_CAN_ASM B
	          ON B.DV_TRG_LNM LIKE CONCAT( '%' , IFNULL( A.DIC_LNM,'' ) )
	         AND B.DV_RQST_NO = A.DV_RQST_NO 
	WHERE A.DIC_DS = 'D'
	  AND A.DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR} 
  </insert>
  
  <insert id="insertAsmNotExistDic" parameterType="java.lang.String" >
	<![CDATA[ 
	INSERT INTO WAP_DV_CAN_ASM 
	(
		DV_RQST_NO
		, DIC_ASM_LNM
		, DIC_ASM_PNM
		, DMN_LNM
		, DMN_PNM
		, DIC_ASM_DS_LNM
		, DIC_ASM_DS_PNM
		, DV_TRG_LNM
		, PRC_CD, DV_ORG_LNM 
		, DV_RQST_USER_ID 
		, DV_ENC_YN 
		, DV_OBJ_DESCN
		, DV_SE_CD
		, DMNG_LNM  
    	, INFOTP_LNM
		)  
	SELECT DISTINCT A.DV_RQST_NO
	      , CONCAT(	IFNULL(A.DIC_ASM_LNM,'') , CASE WHEN SUBSTR(A.DIC_ASM_LNM,-1,1) = ']' THEN '' ELSE '[X]' END) AS DIC_ASM_LNM 
	      , CONCAT(	IFNULL(A.DIC_ASM_PNM,'') , CASE WHEN SUBSTR(A.DIC_ASM_LNM,-1,1) = ']' THEN '' ELSE '_[X]' END) AS DIC_ASM_PNM
 	      , A.DMN_LNM
 	      , A.DMN_PNM
	      , CONCAT( IFNULL(A.DIC_ASM_DS_LNM,'') , CASE WHEN SUBSTR(A.DIC_ASM_LNM,-1,1) = ']' THEN '' ELSE ';[X]' END) AS DIC_ASM_DS_LNM
	      , CONCAT( IFNULL(A.DIC_ASM_DS_PNM,'') , CASE WHEN SUBSTR(A.DIC_ASM_LNM,-1,1) = ']' THEN '' ELSE ';[X]' END) AS DIC_ASM_DS_PNM
	      , NULLIF(SUBSTR(A.DV_TRG_LNM,2),'') AS DV_TRG_LNM
	      , CASE WHEN NULLIF(SUBSTR(A.DV_TRG_LNM,2),'') IS NULL THEN 'Y' ELSE 'N' END AS PRC_CD
	      , A.DV_ORG_LNM
	      , A.DV_RQST_USER_ID 
	      , A.DV_ENC_YN 
	      , A.DV_OBJ_DESCN
	      , A.DV_SE_CD
		  , A.DMNG_LNM  
    	  , A.INFOTP_LNM
	  FROM WAP_DV_CAN_ASM A
	 WHERE A.PRC_CD = 'A' 
	   AND A.DV_TRG_LNM IS NOT NULL
	   AND A.DV_RQST_RES IS NULL
	   AND A.DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR} 
	   AND NOT EXISTS (SELECT 1 
	                     FROM WAP_DV_CAN_ASM B
	                    WHERE CONCAT( IFNULL(SUBSTR(B.DIC_ASM_DS_LNM, B_INSTR(B.DIC_ASM_DS_LNM,'_')+1),'') , IFNULL(B.DV_TRG_LNM,'') ) = A.DV_TRG_LNM
	                      AND B.DV_RQST_NO = A.DV_RQST_NO 
	                      AND B.DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR} 
	                      AND B.PRC_CD <> 'A'
	                  )
	]]> 
  </insert>
  
  <delete id="deleteExistDmnAsm" parameterType="java.lang.String" >
<!-- 오라클 원본
	DELETE FROM WAP_DV_CAN_ASM A
	 WHERE DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR} 
	   AND DMN_LNM IS NULL
	   AND EXISTS (SELECT 1 
	                 FROM WAP_DV_CAN_ASM B
	                WHERE DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR}
	                  AND A.DV_TRG_LNM = B.DV_TRG_LNM ||B.DMN_LNM
	                  AND DMN_LNM IS NOT NULL
	              )
-->

DELETE A 
	 FROM WAP_DV_CAN_ASM A
	 WHERE DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR} 
	   AND DMN_LNM IS NULL
	   AND EXISTS (SELECT 1 
	                 FROM WAP_DV_CAN_ASM B
	                WHERE DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR}
	                  AND A.DV_TRG_LNM = CONCAT(B.DV_TRG_LNM , B.DMN_LNM)
	                  AND DMN_LNM IS NOT NULL
	              )
	              
  </delete>
  
  <delete id="delItemAutoDiv" parameterType="kr.wise.dq.stnd.service.WapDvCanAsm" >
	DELETE FROM WAP_DV_CAN_ASM
	 WHERE DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR} 	
	   AND DV_ORG_LNM = #{dvOrgLnm,jdbcType=VARCHAR}
  </delete>
  
  <delete id="delDmnAutoDiv" parameterType="kr.wise.dq.stnd.service.WapDvCanAsm" >
	DELETE FROM WAP_DV_CAN_ASM
	 WHERE DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR} 
	     AND DV_ORG_LNM = #{dvOrgLnm,jdbcType=VARCHAR}
	     AND DIC_ASM_PNM = CONCAT('_' , #{dicAsmPnm,jdbcType=VARCHAR} )
  </delete>
  
    <delete id="deleteNotEndPrcAsmDic" parameterType="java.lang.String" >
	Delete from WAP_DV_CAN_ASM where DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR} and PRC_CD = 'A'
  </delete>
  
  <update id="updateNotEndPrcAsmDic" parameterType="java.lang.String" >
	update WAP_DV_CAN_ASM
	set PRC_CD = 'A'
	where DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR} and PRC_CD = 'N'
  </update>
  
  <select id="selectList" resultMap="BaseResultMap" parameterType="java.lang.String" >
    
   <![CDATA[ 
   SELECT DIC_ASM_LNM
        , DIC_ASM_PNM
        , DMN_LNM
        , DMN_PNM
        , DV_ORG_LNM
        , DIC_ASM_DS_LNM
        , DIC_ASM_DS_PNM
        , DV_ENC_YN 
	    , DV_OBJ_DESCN 
     FROM (
            -- 단어,도메인 모두 존재
            SELECT DISTINCT
                   CONCAT(IFNULL(DIC_ASM_LNM,'') , IFNULL(DMN_LNM,'')) as DIC_ASM_LNM
                 , SUBSTR(CONCAT(IFNULL(DIC_ASM_PNM,'') , CASE WHEN DMN_PNM IS NULL THEN '' ELSE CONCAT('_' , DMN_PNM) END),2) AS DIC_ASM_PNM
                 , DMN_LNM
                 , DMN_PNM
                 , DV_ORG_LNM
                 , SUBSTR(DIC_ASM_DS_LNM,2) as DIC_ASM_DS_LNM
                 , SUBSTR(DIC_ASM_DS_PNM,2) as DIC_ASM_DS_PNM
                 , DV_ENC_YN 
                 , DV_OBJ_DESCN 
              FROM WAP_DV_CAN_ASM A
             WHERE DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR}
               AND PRC_CD = 'Y'
               AND IFNULL(INSTR(A.DIC_ASM_LNM,'[X]'),0) = 0    
               AND DMN_LNM IS NOT NULL
             UNION ALL   
            -- 도메인 미존재 
            SELECT DISTINCT
                   CONCAT(IFNULL( DIC_ASM_LNM,'' ) , IFNULL( DMN_LNM,'' )) as DIC_ASM_LNM
                 , SUBSTR(CONCAT( IFNULL(DIC_ASM_PNM,'') , CASE WHEN DMN_PNM IS NULL THEN '' ELSE CONCAT('_' , DMN_PNM) END),2) AS DIC_ASM_PNM 
                 , DMN_LNM
                 , DMN_PNM
                 , DV_ORG_LNM
                 , SUBSTR(DIC_ASM_DS_LNM,2) as DIC_ASM_DS_LNM
                 , SUBSTR(DIC_ASM_DS_PNM,2) as DIC_ASM_DS_PNM
                 , DV_ENC_YN 
                 , DV_OBJ_DESCN 
              FROM WAP_DV_CAN_ASM A
             WHERE DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR}
               AND PRC_CD = 'Y'
               AND IFNULL(INSTR(A.DIC_ASM_LNM,'[X]'),0) = 0    
               AND DMN_LNM IS NULL   
               AND NOT EXISTS (SELECT 1
                                 FROM WAP_DV_CAN_ASM  X
                                WHERE IFNULL(INSTR(X.DIC_ASM_LNM,'[X]'),0) = 0
                                  AND X.DV_RQST_NO = A.DV_RQST_NO
                                  AND X.DV_ORG_LNM = A.DV_ORG_LNM
                                  AND X.DMN_LNM IS NOT NULL 
                              )      
            UNION ALL
            -- 단어 미존재
            SELECT DISTINCT
                   CONCAT(IFNULL(DIC_ASM_LNM,'') , IFNULL(DMN_LNM,'')) as DIC_ASM_LNM
                 , SUBSTR(CONCAT( IFNULL(DIC_ASM_PNM,'') , CASE WHEN DMN_PNM IS NULL THEN '' ELSE CONCAT('_' , DMN_PNM) END),2) AS DIC_ASM_PNM
                 , DMN_LNM
                 , DMN_PNM
                 , DV_ORG_LNM
                 , SUBSTR(DIC_ASM_DS_LNM,2) AS DIC_ASM_DS_LNM
                 , SUBSTR(DIC_ASM_DS_PNM,2) AS DIC_ASM_DS_PNM
                 , DV_ENC_YN 
                 , DV_OBJ_DESCN 
              FROM WAP_DV_CAN_ASM A
             WHERE DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR}
               AND PRC_CD = 'Y'
               AND IFNULL(INSTR(A.DIC_ASM_LNM,'[X]'),0) > 0
               AND NOT EXISTS (SELECT 1
                                 FROM WAP_DV_CAN_ASM  X
                                WHERE IFNULL(INSTR(X.DIC_ASM_LNM,'[X]'),0) = 0
                                  AND X.DV_RQST_NO = A.DV_RQST_NO
                                  AND X.DV_ORG_LNM = A.DV_ORG_LNM
                              )       
      ) A                     
     ORDER BY (CHAR_LENGTH(DIC_ASM_PNM) - CHAR_LENGTH(REPLACE(DIC_ASM_PNM, '[_]', '')) * 100 + CHAR_LENGTH(DIC_ASM_PNM) )
            , CHAR_LENGTH(DMN_PNM) DESC 
	]]>

  </select>
  
  
  
<select id="selectItemDvRqstList" resultMap="BaseResultMap" parameterType="kr.wise.dq.stnd.service.WapDvCanDic" >
  SELECT DISTINCT *
    FROM (
        SELECT DISTINCT
               A.DV_RQST_NO
             , A.DIC_ASM_LNM  AS DIC_ASM_LNM
             , A.DIC_ASM_PNM
             , A.DMN_LNM
             , D.INFOTP_LNM
             , A.DMN_PNM
<!--              , DG.DMNG_LNM -->
             , A.DV_ORG_LNM
             , A.DIC_ASM_DS_LNM
             , A.DIC_ASM_DS_PNM
             , A.DV_ENC_YN 
      	     , A.DV_OBJ_DESCN
<!--       	     , (CASE WHEN A.INFOTP_LNM IS NULL THEN I.INFOTP_LNM ELSE A.INFOTP_LNM  END)  AS INFOTP_LNM   -->
<!--       	     , (CASE WHEN H.INFOTP_LNM IS NOT NULL THEN H.DATA_TYPE ELSE I.DATA_TYPE END) AS DATA_TYPE -->
<!--       	     , (CASE WHEN H.INFOTP_LNM IS NOT NULL THEN H.DATA_LEN  ELSE I.DATA_LEN END)  AS DATA_LEN -->
<!--       	     , (CASE WHEN H.INFOTP_LNM IS NOT NULL THEN H.DATA_SCAL ELSE I.DATA_SCAL END) AS DATA_SCAL -->
<!--              , D.DATA_TYPE -->
<!--              , D.DATA_LEN  -->
<!--              , D.DATA_SCAL -->
      	     , A.DV_RQST_RES 
      	     , CASE WHEN A.DV_RQST_RES  IS NOT NULL THEN '#FF0000'  END AS FontColor
      	     , CASE WHEN A.DV_RQST_RES  IS NOT NULL THEN 'N' ELSE 'Y' END AS REG_POS_YN  
<!--       	     <choose> -->
<!--                	   <when test="dvRqstDiv == 'DESC' "> -->
<!--              			<choose> -->
<!--              				<when test="dvRqstDivDmn == 'DESC'"> -->
<!--              					, ROW_NUMBER() OVER (PARTITION BY DV_ORG_LNM ORDER BY WRD_CNT DESC, DMN_WRD_CNT DESC) AS  X_RANK -->
<!--              				</when> -->
<!--              				<otherwise> -->
<!--              					, ROW_NUMBER() OVER (PARTITION BY DV_ORG_LNM ORDER BY WRD_CNT DESC, DMN_WRD_CNT ASC) AS  X_RANK -->
<!--              				</otherwise> -->
<!--              			</choose>  	    -->
               	        
<!--                    </when>                             			                               -->
<!--                    <otherwise> -->
<!--                    	   <choose> -->
<!--              				<when test="dvRqstDivDmn == 'DESC'"> -->
<!--              					, ROW_NUMBER() OVER (PARTITION BY DV_ORG_LNM ORDER BY WRD_CNT ASC, DMN_WRD_CNT DESC) AS  X_RANK -->
<!--              				</when> -->
<!--              				<otherwise> -->
<!--              					, ROW_NUMBER() OVER (PARTITION BY DV_ORG_LNM ORDER BY WRD_CNT ASC, DMN_WRD_CNT ASC) AS  X_RANK -->
<!--              				</otherwise> -->
<!--              			</choose>  	                              -->
<!--                    </otherwise>                              -->
<!--              </choose>   -->
             , DMN_YN
         FROM (
      		     SELECT #{dvRqstNo,jdbcType=VARCHAR} AS DV_RQST_NO
      		          , DIC_ASM_LNM
                        , DIC_ASM_PNM
                        , DMN_LNM
                        , DMN_PNM
                        , DV_ORG_LNM
                        , DIC_ASM_DS_LNM
                        , DIC_ASM_DS_PNM
                        , DV_ENC_YN 
                        , DV_OBJ_DESCN 
                        , DV_RQST_RES
                        , PRC_CD
                        , INFOTP_LNM     
                        , CHAR_LENGTH(DIC_ASM_PNM) - CHAR_LENGTH(REPLACE(DIC_ASM_PNM, '[_]', '')) * 100 + CHAR_LENGTH(DIC_ASM_PNM) AS WRD_CNT
                        , CHAR_LENGTH(DMN_PNM)                                             AS DMN_WRD_CNT      
                        , DMN_YN                                             
      			  FROM (
      			            -- 단어,도메인 모두 존재
                              SELECT DISTINCT
<!--                                      CONCAT(IFNULL(DIC_ASM_LNM,''), IFNULL(DMN_LNM,'')) as DIC_ASM_LNM -->
                                   DIC_ASM_LNM
                                   , SUBSTR(DIC_ASM_PNM,2) AS DIC_ASM_PNM
<!--                                    , SUBSTR(CONCAT(DIC_ASM_PNM , CASE WHEN DMN_PNM IS NULL THEN '' ELSE CONCAT('_' , DMN_PNM) END),2) AS DIC_ASM_PNM -->
                                   , DMN_LNM
                                   , DMN_PNM
                                   , DV_ORG_LNM
                                   , SUBSTR(DIC_ASM_DS_LNM,2) AS DIC_ASM_DS_LNM
                                   , SUBSTR(DIC_ASM_DS_PNM,2) AS DIC_ASM_DS_PNM
                                   , DV_ENC_YN 
                                   , DV_OBJ_DESCN   
                                   , DV_RQST_RES
                                   , PRC_CD
                                   , INFOTP_LNM 
                                   , A.DMN_YN                                                         
                                FROM WAP_DV_CAN_ASM A
                               WHERE DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR}
                                 AND PRC_CD = 'Y'
                                 AND IFNULL(INSTR(A.DIC_ASM_LNM,'[X]'),0) = 0    
                                 AND DMN_LNM IS NOT NULL
                               UNION ALL   
                              -- 도메인 미존재 
                              SELECT DISTINCT
<!--                                       CONCAT(IFNULL(DIC_ASM_LNM,''), IFNULL(DMN_LNM,'')) as DIC_ASM_LNM -->
<!--                                    , SUBSTR(CONCAT(DIC_ASM_PNM , CASE WHEN DMN_PNM IS NULL THEN '' ELSE CONCAT('_' , DMN_PNM) END),2) AS DIC_ASM_PNM -->
                                   DIC_ASM_LNM
                                   , SUBSTR(DIC_ASM_PNM,2) AS DIC_ASM_PNM
                                   , DMN_LNM
                                   , DMN_PNM
                                   , DV_ORG_LNM
                                   , SUBSTR(DIC_ASM_DS_LNM,2) as DIC_ASM_DS_LNM
                                   , SUBSTR(DIC_ASM_DS_PNM,2) as DIC_ASM_DS_PNM
                                   , DV_ENC_YN 
                                   , DV_OBJ_DESCN 
                                   , DV_RQST_RES
                                   , PRC_CD
                                   , INFOTP_LNM         
                                   , A.DMN_YN                   
                                FROM WAP_DV_CAN_ASM A
                               WHERE DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR}
                                 AND PRC_CD = 'Y'
                                 AND IFNULL(INSTR(A.DIC_ASM_LNM,'[X]'),0) = 0    
                                 AND DMN_LNM IS NULL   
                                 AND NOT EXISTS (SELECT 1
                                                   FROM WAP_DV_CAN_ASM  X
                                                  WHERE IFNULL(INSTR(X.DIC_ASM_LNM,'[X]'),0) = 0
                                                    AND X.DV_RQST_NO = A.DV_RQST_NO
                                                    AND X.DV_ORG_LNM = A.DV_ORG_LNM
                                                    AND X.DMN_LNM IS NOT NULL 
                                                )      
                              UNION ALL
                              -- 단어 미존재
                              SELECT DISTINCT
<!--                                       CONCAT(IFNULL(DIC_ASM_LNM,''), IFNULL(DMN_LNM,'')) as DIC_ASM_LNM -->
<!--                                    , SUBSTR(CONCAT(DIC_ASM_PNM , CASE WHEN DMN_PNM IS NULL THEN '' ELSE CONCAT('_' , DMN_PNM) END),2) AS DIC_ASM_PNM -->
                                   DIC_ASM_LNM
                                   , SUBSTR(DIC_ASM_PNM,2) AS DIC_ASM_PNM
                                   , DMN_LNM
                                   , DMN_PNM
                                   , DV_ORG_LNM
                                   , SUBSTR(DIC_ASM_DS_LNM,2) AS DIC_ASM_DS_LNM
                                   , SUBSTR(DIC_ASM_DS_PNM,2) AS DIC_ASM_DS_PNM
                                   , DV_ENC_YN 
                                   , DV_OBJ_DESCN 
                                   , DV_RQST_RES
                                   , PRC_CD
                                   , INFOTP_LNM        
                                   , A.DMN_YN                    
                                FROM WAP_DV_CAN_ASM A
                               WHERE DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR}
                                 AND PRC_CD = 'Y'
                                 
                                  <![CDATA[ AND IFNULL(INSTR(A.DIC_ASM_LNM,'[X]'),0) > 0 ]]>
                                 AND NOT EXISTS (SELECT 1
                                                   FROM WAP_DV_CAN_ASM  X
                                                  WHERE IFNULL(INSTR(X.DIC_ASM_LNM,'[X]'),0) = 0
                                                    AND X.DV_RQST_NO = A.DV_RQST_NO
                                                    AND X.DV_ORG_LNM = A.DV_ORG_LNM
                                                )     
      		                     			        
      			       ) A         		 
              ) A
             LEFT JOIN WAM_DMN D
               ON A.DMN_LNM = D.DMN_LNM     
<!--              LEFT JOIN WAA_DMNG DG -->               
<!--                ON DG.EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d') -->
<!--               AND DG.DMNG_ID = D.DMNG_ID -->
<!--              LEFT JOIN WAA_INFO_TYPE I -->
<!--                ON I.EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d') -->
<!--               AND I.INFOTP_ID = D.INFOTP_ID   -->
<!--              LEFT JOIN WAA_INFO_TYPE H -->
<!--                ON H.EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d') -->
<!--               AND H.INFOTP_LNM = A.INFOTP_LNM           -->
       WHERE A.DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR}  
         AND A.PRC_CD = 'Y'
       ) A
<!--  WHERE A.X_RANK = 1 -->
 ORDER BY DIC_ASM_LNM 
 
 
 </select>
  
  
<select id="selectDmnDvRqstList" resultMap="BaseResultMap" parameterType="kr.wise.dq.stnd.service.WapDvCanDic" >
SELECT DISTINCT
         A.DV_RQST_NO
       , CONCAT(A.DIC_ASM_LNM , A.DMN_LNM) as DIC_ASM_LNM
       , SUBSTR(CONCAT(A.DIC_ASM_PNM , case when A.DMN_PNM is null then '' else CONCAT('_' , A.DMN_PNM) end),2) as DIC_ASM_PNM
       , A.DMN_LNM
       , A.DMN_PNM
       , A.DMNG_LNM
       , A.DMNG_ID
       , A.INFOTP_LNM
       , A.INFOTP_ID
       , A.DV_ORG_LNM
       , SUBSTR(A.DIC_ASM_DS_LNM,2) as DIC_ASM_DS_LNM
       , SUBSTR(A.DIC_ASM_DS_PNM,2) as DIC_ASM_DS_PNM
       , A.DV_ENC_YN 
	   , A.DV_OBJ_DESCN
	   , I.DATA_TYPE
	   , I.DATA_LEN
	   , I.DATA_SCAL
	   , A.DV_RQST_RES 
	   , CASE WHEN A.DV_RQST_RES  IS NOT NULL THEN '#FF0000'  END AS FontColor
	   , CASE WHEN A.DV_RQST_RES  IS NOT NULL THEN 'N' ELSE 'Y' END AS REG_POS_YN
	   , A.CD_VAL_TYP_CD       
	   , A.CD_VAL_IVW_CD      	
	   , A.SDITM_AUTO_CRT_YN   
   FROM (
		     SELECT *
			  FROM (
			        SELECT A.*
			               ,ROW_NUMBER() OVER (PARTITION BY A.DV_ORG_LNM ORDER BY INSTR(A.DIC_ASM_DS_PNM, '[X]')  ) X_RANK
			          FROM (SELECT * 
			                  FROM (SELECT A.*
			                  
			                  
			                  
			                               ,ROW_NUMBER() OVER (PARTITION BY DV_ORG_LNM ORDER BY LENGTH(A.DIC_ASM_DS_PNM)    <if test="dvRqstDiv != null and dvRqstDiv != ''"> ${dvRqstDiv} </if>  ) RANK
			                          FROM WAP_DV_CAN_ASM A
			                         WHERE DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR}  
			                           AND DV_RQST_RES IS NULL ) A
			                <if test="dvRqstDiv != null and dvRqstDiv != ''">
			                WHERE A.RANK = 1
			                </if>
			                UNION ALL 
			                 SELECT * 
			                  FROM (SELECT A.*
			                               ,ROW_NUMBER() OVER (PARTITION BY DV_ORG_LNM ORDER BY LENGTH(A.DIC_ASM_DS_PNM) <if test="dvRqstDiv != null and dvRqstDiv != ''"> ${dvRqstDiv} </if> ) RANK
			                          FROM WAP_DV_CAN_ASM A
			                         WHERE DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR}  
			                           AND DV_RQST_RES IS NOT NULL ) A
			                 <if test="dvRqstDiv != null and dvRqstDiv != ''">
			                 WHERE A.RANK = 1
			                 </if>
			                 ) A
			         WHERE A.DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR} ) A
         <if test="dvRqstDiv != null and dvRqstDiv != ''">
		 WHERE X_RANK = 1
		 </if>
        ) A
       LEFT OUTER JOIN WAA_DMNG G
         ON A.DMNG_ID = G.DMNG_ID
        AND G.EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d')
       LEFT OUTER JOIN WAA_INFO_TYPE I
         ON A.INFOTP_ID = I.INFOTP_ID
        AND I.EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d')
 where A.DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR}
   and A.PRC_CD = 'Y'
 order by DIC_ASM_LNM, LENGTH(DIC_ASM_PNM)
  </select>

  <select id="selectItemDivList" resultMap="BaseResultMap" parameterType="java.lang.String" >
  SELECT * FROM (
	    SELECT DISTINCT
	   		DV_ORG_LNM AS DV_TRG_LNM
	       ,CONCAT(DIC_ASM_LNM , DMN_LNM) as DIC_ASM_LNM
	       ,SUBSTR(CONCAT(DIC_ASM_PNM , CASE WHEN DMN_PNM IS NULL THEN '' ELSE CONCAT('_' , DMN_PNM) END),2) AS DIC_ASM_PNM
	       ,DMN_LNM
	       ,DMN_PNM
	       ,SUBSTR(DIC_ASM_DS_LNM,2) as DIC_ASM_DS_LNM
	       ,SUBSTR(DIC_ASM_DS_PNM,2) as DIC_ASM_DS_PNM
	       ,ROW_NUMBER() OVER(PARTITION BY DV_ORG_LNM ORDER BY (CASE WHEN DIC_ASM_LNM NOT LIKE '%[X]%' THEN 0 ELSE 1 END), LENGTH(DMN_LNM) DESC, LENGTH(DIC_ASM_LNM), DIC_ASM_PNM) AS RSEQ
	    FROM WAP_DV_CAN_ASM
	    WHERE DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR}
	      AND PRC_CD = 'Y'
    ) A WHERE A.RSEQ = 1
    ORDER BY DV_TRG_LNM,  DIC_ASM_LNM, LENGTH(DIC_ASM_PNM)
  </select>
  
  <delete id="deleteDvCanAsmByDvRqstNo" parameterType="java.lang.String" >
	delete from WAP_DV_CAN_ASM where DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR}
  </delete>
  
  <delete id="deleteDvCanAsmByDup" parameterType="java.lang.String"  >
	DELETE WAP_DV_CAN_ASM P
	WHERE DV_ORG_LNM IN ( SELECT DV_ORG_LNM
										FROM WAP_DV_CAN_ASM W
										WHERE W.DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR}
										GROUP BY DV_ORG_LNM,SUBSTR(CONCAT(W.DIC_ASM_PNM , CASE WHEN W.DMN_PNM IS NULL THEN '' ELSE CONCAT('_',W.DMN_PNM) END),2)
										HAVING COUNT(*) >1 )
	AND P.DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR}
	AND P.DIC_ASM_LNM IS NOT NULL
  </delete>
  <delete id="deleteDvCanAsmByDvOrderBy" parameterType="kr.wise.dq.stnd.service.WapDvCanDic" >
	DELETE WAP_DV_CAN_ASM W
	WHERE W.DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR}
	AND DIC_ASM_PNM NOT IN (
	SELECT DISTINCT IFNULL(A.DIC_ASM_PNM,'-') 
	 FROM (
		     SELECT *
			  FROM (
			        SELECT A.*
			               ,ROW_NUMBER() OVER (PARTITION BY A.DV_ORG_LNM ORDER BY INSTR(A.DIC_ASM_DS_PNM, '[X]')  ) X_RANK
			          FROM (SELECT * 
			                  FROM (SELECT A.*
			                               ,ROW_NUMBER() OVER (PARTITION BY DV_ORG_LNM ORDER BY LENGTH(A.DIC_ASM_DS_PNM)    <if test="dvRqstDiv != null and dvRqstDiv != ''"> ${dvRqstDiv} </if>  ) RANK
			                          FROM WAP_DV_CAN_ASM A
			                         WHERE DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR}  
			                           AND DV_RQST_RES IS NULL ) A
			                <if test="dvRqstDiv != null and dvRqstDiv != ''">
			                WHERE A.RANK = 1
			                </if>
			                UNION ALL 
			                 SELECT * 
			                  FROM (SELECT A.*
			                               <choose>
			                               	   <when test="dvRqstDiv == 'DESC'">
			                               	       , ROW_NUMBER() OVER (PARTITION BY DV_ORG_LNM ORDER BY 
			                                                             CASE WHEN INSTR(A.DIC_ASM_PNM,'[X]') = 0 THEN 999999
                                                                              ELSE LENGTH(A.DIC_ASM_DS_PNM) END ${dvRqstDiv} ) RANK 
                                               </when>                             
			                                   <when test="dvRqstDiv == 'ASC'">
			                                   	   , ROW_NUMBER() OVER (PARTITION BY DV_ORG_LNM ORDER BY 
			                                                              CASE WHEN INSTR(A.DIC_ASM_PNM,'[X]') = 0 THEN -1
                                                                               ELSE LENGTH(A.DIC_ASM_DS_PNM) END ${dvRqstDiv} ) RANK 
                                               </when>                             
                                               <otherwise>
                                           		   , ROW_NUMBER() OVER (PARTITION BY DV_ORG_LNM ORDER BY LENGTH(A.DIC_ASM_DS_PNM) <if test="dvRqstDiv != null and dvRqstDiv != ''"> ${dvRqstDiv} </if> ) RANK    
                                               </otherwise>                             
			                               </choose>
			                               
			                          FROM WAP_DV_CAN_ASM A
			                         WHERE DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR}  
			                           AND DV_RQST_RES IS NOT NULL ) A
			                 <if test="dvRqstDiv != null and dvRqstDiv != ''">
			                 WHERE A.RANK = 1
			                 </if>
			                 ) A
			         WHERE A.DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR} ) A
         <if test="dvRqstDiv != null and dvRqstDiv != ''">
		 WHERE X_RANK = 1
		 </if>
        ) A
     )
  </delete>
  
  <insert id="insert" parameterType="kr.wise.dq.stnd.service.WapDvCanAsm" >
    insert into WAP_DV_CAN_ASM (DV_RQST_NO, DIC_ASM_LNM, DIC_ASM_PNM, 
      DMN_LNM, DMN_PNM, DIC_ASM_DS_LNM, 
      DIC_ASM_DS_PNM, DV_TRG_LNM, PRC_CD
      )
    values (#{dvRqstNo,jdbcType=VARCHAR}, #{dicAsmLnm,jdbcType=VARCHAR}, #{dicAsmPnm,jdbcType=VARCHAR}, 
      #{dmnLnm,jdbcType=VARCHAR}, #{dmnPnm,jdbcType=VARCHAR}, #{dicAsmDsLnm,jdbcType=VARCHAR}, 
      #{dicAsmDsPnm,jdbcType=VARCHAR}, #{dvTrgLnm,jdbcType=VARCHAR}, #{prcCd,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="kr.wise.dq.stnd.service.WapDvCanAsm" >
    insert into WAP_DV_CAN_ASM
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="dvRqstNo != null" >
        DV_RQST_NO,
      </if>
      <if test="dicAsmLnm != null" >
        DIC_ASM_LNM,
      </if>
      <if test="dicAsmPnm != null" >
        DIC_ASM_PNM,
      </if>
      <if test="dmnLnm != null" >
        DMN_LNM,
      </if>
      <if test="dmnPnm != null" >
        DMN_PNM,
      </if>
      <if test="dicAsmDsLnm != null" >
        DIC_ASM_DS_LNM,
      </if>
      <if test="dicAsmDsPnm != null" >
        DIC_ASM_DS_PNM,
      </if>
      <if test="dvTrgLnm != null" >
        DV_TRG_LNM,
      </if>
      <if test="prcCd != null" >
        PRC_CD,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="dvRqstNo != null" >
        #{dvRqstNo,jdbcType=VARCHAR},
      </if>
      <if test="dicAsmLnm != null" >
        #{dicAsmLnm,jdbcType=VARCHAR},
      </if>
      <if test="dicAsmPnm != null" >
        #{dicAsmPnm,jdbcType=VARCHAR},
      </if>
      <if test="dmnLnm != null" >
        #{dmnLnm,jdbcType=VARCHAR},
      </if>
      <if test="dmnPnm != null" >
        #{dmnPnm,jdbcType=VARCHAR},
      </if>
      <if test="dicAsmDsLnm != null" >
        #{dicAsmDsLnm,jdbcType=VARCHAR},
      </if>
      <if test="dicAsmDsPnm != null" >
        #{dicAsmDsPnm,jdbcType=VARCHAR},
      </if>
      <if test="dvTrgLnm != null" >
        #{dvTrgLnm,jdbcType=VARCHAR},
      </if>
      <if test="prcCd != null" >
        #{prcCd,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  
    <insert id="insertFirstApp" parameterType="kr.wise.dq.stnd.service.WapDvCanDic" >
    insert into WAP_DV_CAN_ASM (DV_RQST_NO, DV_TRG_LNM, PRC_CD, DV_ORG_LNM ,DV_RQST_USER_ID ,DV_ENC_YN ,DV_OBJ_DESCN, DV_SE_CD )
    values (#{dvRqstNo,jdbcType=VARCHAR}, #{trgLnm,jdbcType=VARCHAR}, 'P', #{trgLnm,jdbcType=VARCHAR}, #{dvRqstUserId,jdbcType=VARCHAR}, #{dvEncYn,jdbcType=VARCHAR}, #{dvObjDescn,jdbcType=VARCHAR}, #{dvSeCd,jdbcType=VARCHAR})
  </insert>
  
  <insert id="insertAsmAppDic" parameterType="java.lang.String" >
	insert into WAP_DV_CAN_ASM (
		DV_RQST_NO
		, DIC_ASM_LNM
		, DIC_ASM_PNM
		, DMN_LNM
		, DMN_PNM
		, DIC_ASM_DS_LNM
		, DIC_ASM_DS_PNM
		, DV_TRG_LNM
		, PRC_CD
		, DV_ORG_LNM 
		, DV_RQST_USER_ID 
		, DV_ENC_YN 
		, DV_OBJ_DESCN
		, DV_SE_CD
		, DMNG_LNM  
    	--, INFOTP_LNM 
	)  
	select distinct B.DV_RQST_NO
	      ,B.DIC_ASM_LNM||A.DIC_LNM as DIC_ASM_LNM 
 	      ,B.DIC_ASM_PNM||'_'||A.DIC_PNM as DIC_ASM_PNM
 	      ,B.DMN_LNM
 	      ,B.DMN_PNM  
 	      ,B.DIC_ASM_DS_LNM||'_'||A.DIC_LNM as DIC_ASM_DS_LNM
	      ,B.DIC_ASM_DS_PNM||'_'||A.DIC_PNM as DIC_ASM_DS_PNM 
	      ,SUBSTR(B.DV_TRG_LNM, LENGTH(A.DIC_LNM)+1) AS DV_TRG_LNM
	      ,case when SUBSTR(B.DV_TRG_LNM, LENGTH(A.DIC_LNM)+1) is null then 'Y' else 'N' end AS PRC_CD
	      ,B.DV_ORG_LNM
	      ,B.DV_RQST_USER_ID 
	      ,B.DV_ENC_YN 
	      ,B.DV_OBJ_DESCN
	      ,B.DV_SE_CD
	      ,B.DMNG_LNM  
    	--  ,B.INFOTP_LNM 
	from WAP_DV_CAN_DIC A
	inner join WAP_DV_CAN_ASM B
	   on B.DV_TRG_LNM like A.DIC_LNM||'%' 
	  and B.DV_RQST_NO = A.DV_RQST_NO 
	  and B.PRC_CD = 'P' 
	  and B.DV_RQST_RES IS NULL
	where A.DIC_DS = 'P' 
	and   A.DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR} 
  </insert>
  
  <insert id="insertAsmNotExistAppDic" parameterType="java.lang.String" >
	<![CDATA[ 
	insert into WAP_DV_CAN_ASM (
		DV_RQST_NO
		, DIC_ASM_LNM
		, DIC_ASM_PNM
		, DMN_LNM
		, DMN_PNM
		, DIC_ASM_DS_LNM
		, DIC_ASM_DS_PNM
		, DV_TRG_LNM
		, PRC_CD, DV_ORG_LNM 
		, DV_RQST_USER_ID 
		, DV_ENC_YN 
		, DV_OBJ_DESCN
		, DV_SE_CD
		, DMNG_LNM  
    	--, INFOTP_LNM
		)  
	select distinct A.DV_RQST_NO
	      ,A.DIC_ASM_LNM||case when SUBSTR(A.DIC_ASM_LNM,-1,1) = ']' then '' else '[X]' end as DIC_ASM_LNM 
	      ,A.DIC_ASM_PNM||case when SUBSTR(A.DIC_ASM_LNM,-1,1) = ']' then '' else '_[X]' end as DIC_ASM_PNM
 	      ,A.DMN_LNM
 	      ,A.DMN_PNM
	      ,A.DIC_ASM_DS_LNM||case when SUBSTR(A.DIC_ASM_LNM,-1,1) = ']' then '' else ';[X]' end as DIC_ASM_DS_LNM
	      ,A.DIC_ASM_DS_PNM||case when SUBSTR(A.DIC_ASM_LNM,-1,1) = ']' then '' else ';[X]' end as DIC_ASM_DS_PNM
	      ,SUBSTR(A.DV_TRG_LNM,2) AS DV_TRG_LNM
	      ,case when SUBSTR(A.DV_TRG_LNM,2) is null then 'Y' else 'N' end AS PRC_CD
	      ,A.DV_ORG_LNM
	      ,A.DV_RQST_USER_ID 
	      ,A.DV_ENC_YN 
	      ,A.DV_OBJ_DESCN
	      ,A.DV_SE_CD
		  ,A.DMNG_LNM  
    	 -- ,A.INFOTP_LNM	      
	from WAP_DV_CAN_ASM A
	where A.PRC_CD = 'P' 
	and   A.DV_TRG_LNM is not null
	and   A.DV_RQST_RES IS NULL
	and   A.DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR} 
	and not exists (select 1 from WAP_DV_CAN_ASM B
	                 where SUBSTR(B.DIC_ASM_DS_LNM, INSTR(B.DIC_ASM_DS_LNM,'_',-1)+1)||B.DV_TRG_LNM = A.DV_TRG_LNM
	                   and B.DV_RQST_NO = A.DV_RQST_NO 
	                   and B.DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR} 
	                   and B.PRC_CD <> 'P'
	               )
	]]> 
  </insert>
  <delete id="deleteNotEndPrcAsmAppDic" parameterType="java.lang.String" >
	delete from WAP_DV_CAN_ASM where DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR} and PRC_CD = 'P'
  </delete>
  
  <update id="updateNotEndPrcAsmAppDic" parameterType="java.lang.String" >
	update WAP_DV_CAN_ASM
	set PRC_CD = 'P'
	where DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR} and PRC_CD = 'N'
  </update>
  
  
     <insert id="insertAsmDmnFromClsWdMap" parameterType="kr.wise.dq.stnd.service.WapDvCanDic" >
	insert into WAP_DV_CAN_ASM 
	(  DV_RQST_NO
	 , DMN_LNM
	 , DMN_PNM
	 , DV_TRG_LNM
	 , PRC_CD
	 , DV_ORG_LNM 
	 , DV_RQST_DTM
	 , DV_RQST_USER_ID 
	 , DV_ENC_YN 
	 , DV_OBJ_DESCN
	 , DV_SE_CD
	 , INFOTP_LNM
	)  
	SELECT B.DV_RQST_NO
 	     , A.DIC_LNM AS DMN_LNM
 	     , A.DIC_PNM AS DMN_PNM
         , B.DV_TRG_LNM
	     , case when B.DV_TRG_LNM is null then 'Y' else 'A' end AS PRC_CD
	     ,  B.DV_ORG_LNM
	     , NOW()
	     , B.DV_RQST_USER_ID 
	     , B.DV_ENC_YN 
	     , B.DV_OBJ_DESCN
	     , B.DV_SE_CD
	     , B.INFOTP_LNM
	  FROM WAP_DV_CAN_DIC A
	       INNER JOIN WAP_DV_CAN_ASM B
	           ON A.DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR} 
	          AND B.DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR} 
	          AND B.DV_RQST_NO = A.DV_RQST_NO
	WHERE A.DIC_DS = 'D'
	  AND A.DV_RQST_NO = #{dvRqstNo,jdbcType=VARCHAR}
	  AND EXISTS (
<!-- 	              그룹도메인 -->
<!-- 기존재 도메인인 경우 -->
	              SELECT 1 
	              FROM WAP_DV_CAN_DIC Z
	              INNER JOIN
                  WAM_STWD X
	              ON Z.DV_RQST_NO =#{dvRqstNo,jdbcType=VARCHAR}
                  AND Z.DIC_DS ='C'
                  AND Z.DIC_LNM = X.STWD_LNM
                  AND IFNULL(X.DMN_YN,'N') = 'Y'
                  INNER JOIN WAM_DMN Y
                  ON X.DMN_LNM = Y.DMN_LNM
	              WHERE A.DV_RQST_NO = Z.DV_RQST_NO         
                  AND A.DIC_LNM = X.DMN_LNM
                  AND B.DV_TRG_LNM LIKE CONCAT('%',X.STWD_LNM)
<!--                   단어만 요청인 경우 -->
                  UNION ALL
                  SELECT 1 
	              FROM WAP_DV_CAN_DIC Z
	              INNER JOIN
                  WAQ_STWD X
	              ON Z.DV_RQST_NO =#{dvRqstNo,jdbcType=VARCHAR}
	              AND X.RQST_NO =#{rqstNo,jdbcType=VARCHAR}
                  AND Z.DIC_DS ='C'
                  AND Z.DIC_LNM = X.STWD_LNM
                  AND IFNULL(X.DMN_YN,'N') = 'Y'
                  INNER JOIN WAM_DMN Y
                  ON X.DMN_LNM = Y.DMN_LNM
	              WHERE A.DV_RQST_NO = Z.DV_RQST_NO         
                  AND A.DIC_LNM = X.DMN_LNM            
                  AND B.DV_TRG_LNM LIKE CONCAT('%',X.STWD_LNM)
                  AND X.VRF_CD ='1'
<!--                   단어 도메인 둘다 요청인 경우 -->
                  UNION ALL
                  SELECT 1 
	              FROM WAP_DV_CAN_DIC Z
	              INNER JOIN
                  WAQ_STWD X
	              ON Z.DV_RQST_NO =#{dvRqstNo,jdbcType=VARCHAR}
	              AND X.RQST_NO =#{rqstNo,jdbcType=VARCHAR}
                  AND Z.DIC_DS ='C'
                  AND Z.DIC_LNM = X.STWD_LNM
                  AND IFNULL(X.DMN_YN,'N') = 'Y'
                  INNER JOIN WAQ_DMN Y
                  ON X.DMN_LNM = Y.DMN_LNM
                  AND X.RQST_NO = Y.RQST_NO
	              WHERE A.DV_RQST_NO = Z.DV_RQST_NO         
                  AND A.DIC_LNM = X.DMN_LNM 
                  AND B.DV_TRG_LNM LIKE CONCAT('%',X.STWD_LNM)
                  AND X.VRF_CD ='1'
                  AND Y.VRF_CD ='1'
                  <!-- 도메인만  요청인 경우 -->
                  UNION ALL
                  SELECT 1 
	              FROM WAP_DV_CAN_DIC Z
	              INNER JOIN
                  WAM_STWD X
	              ON Z.DV_RQST_NO =#{dvRqstNo,jdbcType=VARCHAR}
                  AND Z.DIC_DS ='C'
                  AND Z.DIC_LNM = X.STWD_LNM
                  AND IFNULL(X.DMN_YN,'N') = 'Y'
                  INNER JOIN WAQ_DMN Y
                  ON X.DMN_LNM = Y.DMN_LNM
                  AND Y.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
	              WHERE A.DV_RQST_NO = Z.DV_RQST_NO         
                  AND A.DIC_LNM = X.DMN_LNM
                  AND B.DV_TRG_LNM LIKE CONCAT('%',X.STWD_LNM)
                  AND Y.VRF_CD ='1'
<!--                   그룹이외의 도메인인 경우 -->
                  UNION ALL
                  SELECT 1 
	              FROM WAP_DV_CAN_DIC Z
	              INNER JOIN WAM_DMN Y
                  ON Y.DMN_LNM = Z.DIC_LNM
                  AND Z.DIC_DS = 'D'
	              AND Z.DV_RQST_NO =#{dvRqstNo,jdbcType=VARCHAR}
	              WHERE A.DV_RQST_NO = Z.DV_RQST_NO         
                  AND B.DV_TRG_LNM LIKE CONCAT('%', Y.DMN_LNM)
                  AND A.DIC_LNM = Y.DMN_LNM
                  UNION ALL
                  SELECT 1 
	              FROM WAP_DV_CAN_DIC Z
	              INNER JOIN WAQ_DMN Y
                  ON Y.RQST_NO = #{rqstNo, jdbcType=VARCHAR}
                  AND Y.DMN_LNM = Z.DIC_LNM
                  AND Z.DIC_DS = 'D'
	              AND Z.DV_RQST_NO =#{dvRqstNo,jdbcType=VARCHAR}
	              WHERE A.DV_RQST_NO = Z.DV_RQST_NO         
                  AND B.DV_TRG_LNM LIKE CONCAT('%',Y.DMN_LNM)
                  AND A.DIC_LNM = Y.DMN_LNM
                  AND Y.VRF_CD = '1'
	              ) 
  </insert>
</mapper>