<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.wise.dq.stnd.service.WaqCodeTsfMapper" >
  <resultMap id="BaseResultMap" type="kr.wise.dq.stnd.service.WaqCdValTsf"  extends="kr.wise.commons.cmm.service.CommonMapper.BaseResultMap">
    <id column="RQST_NO" 		property="rqstNo" 		jdbcType="VARCHAR" />
    <id column="RQST_SNO" 		property="rqstSno" 		jdbcType="DECIMAL" />
    <id column="RQST_DTL_SNO" 	property="rqstDtlSno" 	jdbcType="DECIMAL" />
    <result column="CD_VAL_ID" 	property="cdValId" 		jdbcType="VARCHAR" />
    <result column="CD_VAL" 	property="cdVal" 		jdbcType="VARCHAR" />
    <result column="CD_VAL_NM" 	property="cdValNm" 		jdbcType="VARCHAR" />
    <result column="DMN_ID" 	property="dmnId" 		jdbcType="VARCHAR" />
    <result column="DMN_LNM" 	property="dmnLnm" 		jdbcType="VARCHAR" />
    <result column="DMN_PNM" 	property="dmnPnm" 		jdbcType="VARCHAR" />
    <result column="UPP_CD_VAL_ID" property="uppCdValId" jdbcType="VARCHAR" />
    <result column="UPP_CD_VAL" property="uppCdVal" 	jdbcType="VARCHAR" />
    <result column="VV_NOTE1" property="vvNote1" 	jdbcType="VARCHAR" />
    <result column="VV_NOTE2" property="vvNote2" 	jdbcType="VARCHAR" />
    <result column="VV_NOTE3" property="vvNote3" 	jdbcType="VARCHAR" />
    <result column="VV_NOTE4" property="vvNote4" 	jdbcType="VARCHAR" />
    <result column="VV_NOTE5" property="vvNote5" 	jdbcType="VARCHAR" />
    <result column="VV_NOTE_NM1" property="vvNoteNm1" 	jdbcType="VARCHAR" />
    <result column="VV_NOTE_NM2" property="vvNoteNm2" 	jdbcType="VARCHAR" />
    <result column="VV_NOTE_NM3" property="vvNoteNm3" 	jdbcType="VARCHAR" />
    <result column="VV_NOTE_NM4" property="vvNoteNm4" 	jdbcType="VARCHAR" />
    <result column="VV_NOTE_NM5" property="vvNoteNm5" 	jdbcType="VARCHAR" />
    <result column="OUTL_CNTN1" property="outlCntn1" 	jdbcType="VARCHAR" />
    <result column="OUTL_CNTN2" property="outlCntn2" 	jdbcType="VARCHAR" />
    <result column="USE_YN" property="useYn" 	jdbcType="VARCHAR" />
    <result column="DISP_ORD" property="dispOrd" 	jdbcType="VARCHAR" />
    <result column="TGT_DB_CONN_TRG_ID" property="tgtDbConnTrgId" 	jdbcType="VARCHAR" />
    <result column="TGT_DB_CONN_TRG_PNM" property="tgtDbConnTrgPnm" 	jdbcType="VARCHAR" />
    <result column="TGT_DB_SCH_ID" property="tgtDbSchId" 	jdbcType="VARCHAR" />
    <result column="TGT_DB_SCH_PNM" property="tgtDbSchPnm" 	jdbcType="VARCHAR" />
    <result column="DMN_DSCD"      property="dmnDscd"        jdbcType="VARCHAR" />
    <result column="CD_VAL_TYP_CD"  property="cdValTypCd"        jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    RQST_NO, RQST_SNO,TGT_DB_CONN_TRG_ID, TGT_DB_CONN_TRG_PNM,TGT_DB_SCH_ID, TGT_DB_SCH_PNM, CD_VAL_ID, CD_VAL, CD_VAL_NM, RQST_DCD, RVW_STS_CD, 
    RVW_CONTS, VRF_CD, VRF_RMK, DMN_ID, DMN_LNM,DMN_PNM, UPP_CD_VAL_ID, UPP_CD_VAL, 
    VV_NOTE1, VV_NOTE2, VV_NOTE3, VV_NOTE4, VV_NOTE5, VV_NOTE_NM1, VV_NOTE_NM2, VV_NOTE_NM3, VV_NOTE_NM4, VV_NOTE_NM5, OUTL_CNTN1, OUTL_CNTN2, USE_YN,
    DISP_ORD,DMN_DSCD,CD_VAL_TYP_CD
    OBJ_DESCN, 
    OBJ_VERS, REG_TYP_CD, FRS_RQST_DTM, FRS_RQST_USER_ID, RQST_DTM, RQST_USER_ID, APRV_DTM, 
    APRV_USER_ID
    
  </sql>
  <sql id="waq_Column_List" >
    A.RQST_NO, A.RQST_SNO,A.TGT_DB_CONN_TRG_ID,A.TGT_DB_CONN_TRG_PNM,A.TGT_DB_SCH_ID, A.TGT_DB_SCH_PNM, 
    A.CD_VAL_ID, A.CD_VAL, A.CD_VAL_NM, A.RQST_DCD,A.RVW_STS_CD ,
    A.RVW_CONTS, A.VRF_CD, A.VRF_RMK, A.DMN_ID, A.DMN_LNM, A.UPP_CD_VAL_ID, A.UPP_CD_VAL, 
    A.VV_NOTE1, VV_NOTE2, A.VV_NOTE3, A.VV_NOTE4, A.VV_NOTE5, A.VV_NOTE_NM1, A.VV_NOTE_NM2, A.VV_NOTE_NM3, A.VV_NOTE_NM4, A.VV_NOTE_NM5, 
    A.OUTL_CNTN1, A.OUTL_CNTN2, A.USE_YN, A.DISP_ORD,A.DMN_DSCD,A.CD_VAL_TYP_CD, A.OBJ_DESCN,
    A.OBJ_VERS, A.REG_TYP_CD, A.FRS_RQST_DTM, A.FRS_RQST_USER_ID, A.RQST_DTM, A.RQST_USER_ID, A.APRV_DTM, 
    A.APRV_USER_ID

  </sql>
  <sql id="wam_col_list">
        A.CD_VAL, A.CD_VAL_NM, A.TGT_DB_CONN_TRG_ID,A.TGT_DB_SCH_ID,A.DMN_ID, A.UPP_CD_VAL_ID,
        A.VV_NOTE1, A.VV_NOTE2, A.VV_NOTE3, A.VV_NOTE4, A.VV_NOTE5, A.VV_NOTE_NM1, A.VV_NOTE_NM2, A.VV_NOTE_NM3, A.VV_NOTE_NM4, 
        A.VV_NOTE_NM5, A.OUTL_CNTN1, A.OUTL_CNTN2, A.USE_YN,A.DISP_ORD,A.DMN_DSCD,A.CD_VAL_TYP_CD, 
	     A.RQST_NO, A.RQST_SNO,A.OBJ_DESCN, A.OBJ_VERS, A.REG_TYP_CD, A.FRS_RQST_DTM, A.FRS_RQST_USER_ID, A.RQST_DTM, A.RQST_USER_ID, 
	    A.APRV_DTM, A.APRV_USER_ID 
  </sql>
  
  <insert id="insertSelective" parameterType="kr.wise.dq.stnd.service.WaqCdValTsf" >
   	<selectKey keyProperty="rqstSno" resultType="int" order="BEFORE" statementType="PREPARED">
  		SELECT CASE WHEN MAX(RQST_SNO) IS NULL THEN 1
  		            ELSE MAX(RQST_SNO)+1 END AS RQST_SNO
  	      FROM WAQ_CD_VAL_TSF
  	     WHERE RQST_NO = #{rqstNo,jdbcType=VARCHAR}
  	</selectKey> 
<!--    	<selectKey keyProperty="rqstDtlSno" resultType="int" order="BEFORE" statementType="PREPARED">
   		SELECT IFNULL(MAX(RQST_DTL_SNO), 0) + 1 FROM WAQ_CD_VAL WHERE RQST_NO = #{rqstNo,jdbcType=VARCHAR} AND RQST_SNO = #{rqstSno,jdbcType=VARCHAR}
   	</selectKey> --> 
    insert into WAQ_CD_VAL_TSF
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="rqstNo != null" >
        RQST_NO,
      </if>
      <if test="rqstSno != null" >
        RQST_SNO,
      </if>
      <if test="cdValId != null" >
        CD_VAL_ID,
      </if>
      <if test="cdVal != null" >
        CD_VAL,
      </if>
      <if test="cdValNm != null" >
        CD_VAL_NM,
      </if>
      <if test="rqstDcd != null" >
        RQST_DCD,
      </if>
      <if test="rvwStsCd != null" >
        RVW_STS_CD,
      </if>
      <if test="rvwConts != null" >
        RVW_CONTS,
      </if>
      <if test="vrfCd != null" >
        VRF_CD,
      </if>
      <if test="vrfRmk != null" >
        VRF_RMK,
      </if>
      <if test="dmnId != null" >
        DMN_ID,
      </if>
      <if test="dmnLnm != null" >
        DMN_LNM,
      </if>
      <if test="uppCdValId != null" >
        UPP_CD_VAL_ID,
      </if>
      <if test="uppCdVal != null" >
        UPP_CD_VAL,
      </if>
      <if test="objDescn != null" >
        OBJ_DESCN,
      </if>
        OBJ_VERS,
      <if test="regTypCd != null" >
        REG_TYP_CD,
      </if>
        FRS_RQST_DTM,
        FRS_RQST_USER_ID,
      <if test="rqstUserId != null" >
        RQST_USER_ID,
      </if>
      <if test="useYn != null" >
        USE_YN,
      </if>
       <if test="vvNote1 != null" >
        VV_NOTE1,
      </if>
       <if test="vvNoteNm1 != null" >
        VV_NOTE_NM1,
      </if>
       <if test="vvNote2 != null" >
        VV_NOTE2,
      </if>
       <if test="vvNoteNm2 != null" >
        VV_NOTE_NM2,
      </if>
       <if test="vvNote3 != null" >
        VV_NOTE3,
      </if>
       <if test="vvNoteNm3 != null" >
        VV_NOTE_NM3,
      </if>
       <if test="vvNote4 != null" >
        VV_NOTE4,
      </if>
       <if test="vvNoteNm4 != null" >
        VV_NOTE_NM4,
      </if>
       <if test="vvNote5 != null" >
        VV_NOTE5,
      </if>
       <if test="vvNoteNm5 != null" >
        VV_NOTE_NM5,
      </if>
        <if test="outlCntn1 != null" >
        OUTL_CNTN1,
      </if>
       <if test="outlCntn2 != null" >
        OUTL_CNTN2,
      </if>
      <if test="dispOrd != null" >
        DISP_ORD,
      </if>
      <if test="tgtDbConnTrgId != null" >
        TGT_DB_CONN_TRG_ID,
      </if>
        <if test="tgtDbConnTrgPnm != null" >
        TGT_DB_CONN_TRG_PNM,
      </if>
        <if test="tgtDbSchId != null" >
        TGT_DB_SCH_ID,
      </if>
        <if test="tgtDbSchPnm != null" >
        TGT_DB_SCH_PNM,
      </if>
      <if test="cdValTypCd != null" >
        CD_VAL_TYP_CD,
      </if>
         <if test="dmnDscd != null" >
        DMN_DSCD,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="rqstNo != null" >
        #{rqstNo,jdbcType=VARCHAR},
      </if>
      <if test="rqstSno != null" >
        #{rqstSno,jdbcType=DECIMAL},
      </if>
      <if test="cdValId != null" >
        #{cdValId,jdbcType=VARCHAR},
      </if>
      <if test="cdVal != null" >
        #{cdVal,jdbcType=VARCHAR},
      </if>
      <if test="cdValNm != null" >
        #{cdValNm,jdbcType=VARCHAR},
      </if>
      <if test="rqstDcd != null" >
        #{rqstDcd,jdbcType=VARCHAR},
      </if>
      <if test="rvwStsCd != null" >
        #{rvwStsCd,jdbcType=VARCHAR},
      </if>
      <if test="rvwConts != null" >
        #{rvwConts,jdbcType=VARCHAR},
      </if>
      <if test="vrfCd != null" >
        #{vrfCd,jdbcType=VARCHAR},
      </if>
      <if test="vrfRmk != null" >
        #{vrfRmk,jdbcType=VARCHAR},
      </if>
      <if test="dmnId != null" >
        #{dmnId,jdbcType=VARCHAR},
      </if>
      <if test="dmnLnm != null" >
        #{dmnLnm,jdbcType=VARCHAR},
      </if>
      <if test="uppCdValId != null" >
        #{uppCdValId,jdbcType=VARCHAR},
      </if>
      <if test="uppCdVal != null" >
        #{uppCdVal,jdbcType=VARCHAR},
      </if>
      <if test="objDescn != null" >
        #{objDescn,jdbcType=VARCHAR},
      </if>
        1, 
      <if test="regTypCd != null" >
        #{regTypCd,jdbcType=VARCHAR},
      </if>
        now() ,
        #{frsRqstUserId,jdbcType=VARCHAR},
      <if test="rqstUserId != null" >
        #{rqstUserId,jdbcType=VARCHAR},
      </if>
        <if test="useYn != null" >
        #{useYn,jdbcType=VARCHAR},
      </if>
      <if test="vvNote1 != null" >
       #{vvNote1,jdbcType=VARCHAR},
      </if>
       <if test="vvNoteNm1 != null" >
        #{vvNoteNm1,jdbcType=VARCHAR},
      </if>
       <if test="vvNote2 != null" >
         #{vvNote2,jdbcType=VARCHAR},
      </if>
       <if test="vvNoteNm2 != null" >
         #{vvNoteNm2,jdbcType=VARCHAR},
      </if>
       <if test="vvNote3 != null" >
       #{vvNote3,jdbcType=VARCHAR},
      </if>
       <if test="vvNoteNm3 != null" >
       #{vvNoteNm3,jdbcType=VARCHAR},
      </if>
       <if test="vvNote4 != null" >
       #{vvNote4,jdbcType=VARCHAR},
      </if>
       <if test="vvNoteNm4 != null" >
         #{vvNoteNm4,jdbcType=VARCHAR},
      </if>
       <if test="vvNote5 != null" >
       #{vvNote5,jdbcType=VARCHAR},
      </if>
       <if test="vvNoteNm5 != null" >
        #{vvNoteNm5,jdbcType=VARCHAR},
      </if>
        <if test="outlCntn1 != null" >
        #{outlCntn1,jdbcType=VARCHAR},
      </if>
       <if test="outlCntn2 != null" >
         #{outlCntn2,jdbcType=VARCHAR},
      </if>
       <if test="dispOrd != null" >
         #{dispOrd,jdbcType=VARCHAR},
      </if>
        <if test="tgtDbConnTrgId != null" >
        #{tgtDbConnTrgId,jdbcType=VARCHAR},
      </if>
       <if test="tgtDbConnTrgPnm != null" >
        #{tgtDbConnTrgPnm,jdbcType=VARCHAR},
      </if>
        <if test="tgtDbSchId != null" >
        #{tgtDbSchId,jdbcType=VARCHAR},
      </if>
        <if test="tgtDbSchPnm != null" >
        #{tgtDbSchPnm,jdbcType=VARCHAR},
      </if>
       <if test="cdValTypCd != null" >
        #{cdValTypCd,jdbcType=VARCHAR},
       </if>
       <if test="dmnDscd != null" >
        #{dmnDscd,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
    <insert id="insertCodeByDmn" parameterType="kr.wise.dq.stnd.service.WaqCdValTsf" >
    insert into WAQ_CD_VAL_TSF(RQST_NO, RQST_SNO, TGT_DB_CONN_TRG_ID, TGT_DB_CONN_TRG_PNM, TGT_DB_SCH_ID, TGT_DB_SCH_PNM, 
    CD_VAL_ID, CD_VAL, CD_VAL_NM, RQST_DCD, RVW_STS_CD, RVW_CONTS, VRF_CD, VRF_RMK, DMN_ID, DMN_LNM, UPP_CD_VAL_ID, 
    UPP_CD_VAL, OBJ_DESCN, OBJ_VERS, REG_TYP_CD, FRS_RQST_DTM, FRS_RQST_USER_ID, RQST_DTM, RQST_USER_ID, APRV_DTM, 
    APRV_USER_ID, VV_NOTE1, VV_NOTE2, VV_NOTE3, VV_NOTE4, VV_NOTE5, VV_NOTE_NM1, VV_NOTE_NM2, VV_NOTE_NM3, VV_NOTE_NM4, 
    VV_NOTE_NM5, OUTL_CNTN1, OUTL_CNTN2, USE_YN, DISP_ORD, DMN_DSCD, CD_VAL_TYP_CD)
    SELECT  #{rqstNo,jdbcType=VARCHAR}
           ,(SELECT IFNULL(MAX(Q.RQST_SNO),0) FROM WAQ_CD_VAL_TSF Q WHERE Q.RQST_NO =#{rqstNo,jdbcType=VARCHAR})+ROWNUM
           ,#{tgtDbConnTrgId,jdbcType=VARCHAR}
           ,#{tgtDbConnTrgPnm,jdbcType=VARCHAR} AS DB_CONN_TRG_PNM
           ,#{tgtDbSchId,jdbcType=VARCHAR}
           ,#{tgtDbSchPnm,jdbcType=VARCHAR} AS DB_SCH_PNM
           ,A.CD_VAL_ID, A.CD_VAL, A.CD_VAL_NM, #{rqstDcd,jdbcType=VARCHAR}
           ,'0', NULL,NULL, NULL, A.DMN_ID, B.DMN_LNM, A.UPP_CD_VAL_ID, 
           GET_CD_VAL(A.UPP_CD_VAL_ID), A.OBJ_DESCN, A.OBJ_VERS, A.REG_TYP_CD, now(),
            #{frsRqstUserId,jdbcType=VARCHAR}, now(), #{rqstUserId,jdbcType=VARCHAR}, NULL, 
           NULL, A.VV_NOTE1, A.VV_NOTE2, A.VV_NOTE3,A.VV_NOTE4, A.VV_NOTE5, A.VV_NOTE_NM1, A.VV_NOTE_NM2, A.VV_NOTE_NM3, A.VV_NOTE_NM4, 
           A.VV_NOTE_NM5, A.OUTL_CNTN1, A.OUTL_CNTN2, A.USE_YN, A.DISP_ORD ,B.DMN_DSCD,B.CD_VAL_TYP_CD
    FROM WAM_CD_VAL A
    INNER JOIN WAM_DMN B
    ON A.DMN_ID = B.DMN_ID
    WHERE A.DMN_ID = #{dmnId,jdbcType=VARCHAR} 
    ORDER BY DB_CONN_TRG_PNM,DB_SCH_PNM, B.DMN_LNM, A.DISP_ORD
  </insert>
    <insert id="insertDelCodeByDmn" parameterType="kr.wise.commons.rqstmst.service.WaqMstr" >
    insert into WAQ_CD_VAL_TSF(RQST_NO, RQST_SNO, TGT_DB_CONN_TRG_ID, TGT_DB_CONN_TRG_PNM, TGT_DB_SCH_ID, TGT_DB_SCH_PNM, 
    CD_VAL_ID, CD_VAL, CD_VAL_NM, RQST_DCD, RVW_STS_CD, RVW_CONTS, VRF_CD, VRF_RMK, DMN_ID, DMN_LNM, UPP_CD_VAL_ID, 
    UPP_CD_VAL, OBJ_DESCN, OBJ_VERS, REG_TYP_CD, FRS_RQST_DTM, FRS_RQST_USER_ID, RQST_DTM, RQST_USER_ID, APRV_DTM, 
    APRV_USER_ID, VV_NOTE1, VV_NOTE2, VV_NOTE3, VV_NOTE4, VV_NOTE5, VV_NOTE_NM1, VV_NOTE_NM2, VV_NOTE_NM3, VV_NOTE_NM4, 
    VV_NOTE_NM5, OUTL_CNTN1, OUTL_CNTN2, USE_YN, DISP_ORD, DMN_DSCD, CD_VAL_TYP_CD)
    SELECT  #{rqstNo,jdbcType=VARCHAR}
           ,(SELECT IFNULL(MAX(Q.RQST_SNO),0) FROM WAQ_CD_VAL_TSF Q WHERE Q.RQST_NO =#{rqstNo,jdbcType=VARCHAR})+ROWNUM
           ,A.TGT_DB_CONN_TRG_ID
           ,T.DB_CONN_TRG_PNM
           ,A.TGT_DB_SCH_ID
           ,S.DB_SCH_PNM
           ,A.CD_VAL_ID, A.CD_VAL, A.CD_VAL_NM, 'DD'
           ,'0', NULL,NULL, NULL, A.DMN_ID, B.DMN_LNM, A.UPP_CD_VAL_ID, 
           GET_CD_VAL(A.UPP_CD_VAL_ID), A.OBJ_DESCN, A.OBJ_VERS, NULL, A.FRS_RQST_DTM, 
            A.FRS_RQST_USER_ID, now(), #{rqstUserId,jdbcType=VARCHAR}, NULL, 
           NULL, A.VV_NOTE1, A.VV_NOTE2, A.VV_NOTE3,A.VV_NOTE4, A.VV_NOTE5, A.VV_NOTE_NM1, A.VV_NOTE_NM2, A.VV_NOTE_NM3, A.VV_NOTE_NM4, 
           A.VV_NOTE_NM5, A.OUTL_CNTN1, A.OUTL_CNTN2, A.USE_YN, A.DISP_ORD ,B.DMN_DSCD,B.CD_VAL_TYP_CD
    FROM WAM_CD_VAL_TSF A
    INNER JOIN WAM_DMN B
    ON A.DMN_ID =B.DMN_ID
    INNER JOIN WAA_DB_CONN_TRG T
    ON A.TGT_DB_CONN_TRG_ID = T.DB_CONN_TRG_ID
    AND T.EXP_DTM = TO_DATE('99991231' , 'YYYYMMDD')
    AND T.REG_TYP_CD IN ('C', 'U')
    INNER JOIN WAA_DB_SCH S
    ON A.TGT_DB_SCH_ID = S.DB_SCH_ID
    AND S.EXP_DTM = TO_DATE('99991231' , 'YYYYMMDD')
    AND S.REG_TYP_CD IN ('C', 'U')
    LEFT OUTER JOIN WAQ_CD_VAL_TSF C
     ON A.CD_VAL_ID = C.CD_VAL_ID 
    AND A.TGT_DB_CONN_TRG_ID = C.TGT_DB_CONN_TRG_ID
    AND A.TGT_DB_SCH_ID = C.TGT_DB_SCH_ID 
    AND C.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
    WHERE C.CD_VAL_ID IS NULL
    AND A.DMN_ID IN (SELECT DMN_ID FROM WAQ_CD_VAL_TSF WHERE RQST_NO = #{rqstNo,jdbcType=VARCHAR}) 
    ORDER BY T.DB_CONN_TRG_PNM,S.DB_SCH_PNM, B.DMN_LNM, A.CD_VAL
  </insert>
  <select id="selectRqstList" resultMap="BaseResultMap" parameterType="kr.wise.commons.rqstmst.service.WaqMstr">
      SELECT 
          A.RQST_NO, A.RQST_SNO,A.TGT_DB_CONN_TRG_ID,A.TGT_DB_CONN_TRG_PNM,A.TGT_DB_SCH_ID, A.TGT_DB_SCH_PNM, 
    A.CD_VAL_ID, A.CD_VAL, A.CD_VAL_NM, A.RQST_DCD,
    <if test='rqstStepCd == "Q" '>
      CASE WHEN A.RVW_STS_CD = '2' THEN '2' ELSE '0' END AS RVW_STS_CD
     </if>
     <if test='rqstStepCd != "Q" '>
      A.RVW_STS_CD
     </if>,
    CASE WHEN A.VRF_CD = '2' THEN '#FF0000' END AS FontColor,
    A.RVW_CONTS, A.VRF_CD, A.VRF_RMK, A.DMN_ID, A.DMN_LNM, A.UPP_CD_VAL_ID, A.UPP_CD_VAL, 
    A.VV_NOTE1, VV_NOTE2, A.VV_NOTE3, A.VV_NOTE4, A.VV_NOTE5, A.VV_NOTE_NM1, A.VV_NOTE_NM2, A.VV_NOTE_NM3, A.VV_NOTE_NM4, A.VV_NOTE_NM5, 
    A.OUTL_CNTN1, A.OUTL_CNTN2, A.USE_YN, A.DISP_ORD,A.DMN_DSCD,A.CD_VAL_TYP_CD, A.OBJ_DESCN,
    A.OBJ_VERS, A.REG_TYP_CD, A.FRS_RQST_DTM, A.FRS_RQST_USER_ID, A.RQST_DTM, A.RQST_USER_ID, A.APRV_DTM, 
    A.APRV_USER_ID
      FROM WAQ_CD_VAL_TSF A
      WHERE RQST_NO = #{rqstNo,jdbcType=VARCHAR}
      <if test='rqstStepCd == "Q" or rqstStepCd == "A" '>
      AND VRF_CD = '1'
      </if>
      ORDER BY A.RQST_SNO
  </select>
    <select id="selectRqstDetail" resultMap="BaseResultMap" parameterType="kr.wise.dq.stnd.service.WaqCdValTsf">
      SELECT 
          A.RQST_NO, A.RQST_SNO,A.TGT_DB_CONN_TRG_ID,A.TGT_DB_CONN_TRG_PNM,A.TGT_DB_SCH_ID, A.TGT_DB_SCH_PNM, 
    A.CD_VAL_ID, A.CD_VAL, A.CD_VAL_NM, A.RQST_DCD,
      A.RVW_STS_CD,
    A.RVW_CONTS, A.VRF_CD, A.VRF_RMK, A.DMN_ID, A.DMN_LNM, A.UPP_CD_VAL_ID, A.UPP_CD_VAL, 
    A.VV_NOTE1, VV_NOTE2, A.VV_NOTE3, A.VV_NOTE4, A.VV_NOTE5, A.VV_NOTE_NM1, A.VV_NOTE_NM2, A.VV_NOTE_NM3, A.VV_NOTE_NM4, A.VV_NOTE_NM5, 
    A.OUTL_CNTN1, A.OUTL_CNTN2, A.USE_YN, A.DISP_ORD,A.DMN_DSCD,A.CD_VAL_TYP_CD, A.OBJ_DESCN,
    A.OBJ_VERS, A.REG_TYP_CD, A.FRS_RQST_DTM, A.FRS_RQST_USER_ID, A.RQST_DTM, A.RQST_USER_ID, A.APRV_DTM, 
    A.APRV_USER_ID
      FROM WAQ_CD_VAL_TSF A
      WHERE RQST_NO = #{rqstNo,jdbcType=VARCHAR}
      AND RQST_SNO = #{rqstSno,jdbcType=VARCHAR}
  </select>
  
  
    <delete id="deleteRqstList" parameterType="kr.wise.dq.stnd.service.WaqCdValTsf">
    --WAQ 삭제 
	DELETE FROM WAQ_CD_VAL_TSF A
    WHERE A.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
    AND A.RQST_SNO = #{rqstSno,jdbcType=VARCHAR}
   </delete>
    <!-- 검증로직 시작 -->
  <update id="updateCheckInit" parameterType="java.lang.String" >
<!-- 오라클 버전 
    UPDATE WAQ_CD_VAL_TSF A
    SET A.REG_TYP_CD = (select case when A.RQST_DCD = 'DD' then 'D' else case when MAX(B.CD_VAL_ID) IS NULL then 'C' else 'U' end end
                        from WAM_CD_VAL_TSF B
                        where B.REG_TYP_CD in ('C','U')
                          and B.CD_VAL_ID = A.CD_VAL_ID
                          AND A.TGT_DB_CONN_TRG_ID = B.TGT_DB_CONN_TRG_ID
                          AND A.TGT_DB_SCH_ID = B.TGT_DB_SCH_ID
                         )
       ,A.VRF_CD = '4'
       ,A.RVW_STS_CD = '0'
    WHERE A.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
-->
UPDATE WAQ_CD_VAL_TSF A ,
		   (select case when A.RQST_DCD = 'DD' then 'D' else case when MAX(B.CD_VAL_ID) IS NULL then 'C' else 'U' end end AS R_T_Y
                        from WAQ_CD_VAL_TSF A , WAM_CD_VAL_TSF B
                        where B.REG_TYP_CD in ('C','U')
                          and B.CD_VAL_ID = A.CD_VAL_ID
                          AND A.TGT_DB_CONN_TRG_ID = B.TGT_DB_CONN_TRG_ID
                          AND A.TGT_DB_SCH_ID = B.TGT_DB_SCH_ID
                         ) C
    SET A.REG_TYP_CD = C.R_T_Y ,A.VRF_CD = '4' ,A.RVW_STS_CD = '0'
    WHERE A.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
  </update>
    <update id="updateTgtDb" parameterType="java.lang.String" >
    UPDATE WAQ_CD_VAL_TSF A
    SET A.TGT_DB_CONN_TRG_ID = (SELECT MAX(DB_CONN_TRG_ID)
                                FROM WAA_DB_CONN_TRG B 
                                WHERE A.TGT_DB_CONN_TRG_PNM = B.DB_CONN_TRG_PNM 
                                  AND B.EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d')
                                  AND B.REG_TYP_CD IN ('C', 'U')
                                )
    , A.TGT_DB_SCH_ID = (SELECT MAX(DB_SCH_ID)
                                FROM WAA_DB_SCH C
                                INNER JOIN WAA_DB_CONN_TRG D
                                 ON C.DB_CONN_TRG_ID = D.DB_CONN_TRG_ID
                                AND C.EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d')
                                AND D.EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d')
                                AND C.REG_TYP_CD IN ('C', 'U')
                                AND D.REG_TYP_CD IN ('C', 'U')
                                WHERE A.TGT_DB_CONN_TRG_PNM = D.DB_CONN_TRG_PNM
                                  AND A.TGT_DB_SCH_PNM = C.DB_SCH_PNM 
                                )
    WHERE A.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
    AND (A.TGT_DB_CONN_TRG_ID IS NULL OR A.TGT_DB_SCH_ID IS NULL)
  </update>
  
  <insert id="checkNotChgData" parameterType="map">
  	<!-- <include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSnoSql"/> -->
  	  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.updateVrfNotChg"/>
--검증쿼리
      and A.REG_TYP_CD = 'U'
      and exists (select 1
            from WAM_CD_VAL_TSF D
               left outer join WAM_CD_VAL_TSF E
                 on D.UPP_CD_VAL_ID = E.CD_VAL_ID
                AND D.TGT_DB_CONN_TRG_ID = E.TGT_DB_CONN_TRG_ID
                AND D.TGT_DB_SCH_ID = E.TGT_DB_SCH_ID 
                and E.REG_TYP_CD IN ('C','U')
            where A.CD_VAL = D.CD_VAL
              AND A.TGT_DB_CONN_TRG_ID = D.TGT_DB_CONN_TRG_ID
              AND A.TGT_DB_SCH_ID = D.TGT_DB_SCH_ID
			  and IFNULL(A.CD_VAL_NM      , '_') = IFNULL(D.CD_VAL_NM      , '_')
			  and IFNULL(A.UPP_CD_VAL      , '_') = IFNULL(E.CD_VAL      , '_')
			  and IFNULL(A.OBJ_DESCN      , '_') = IFNULL(D.OBJ_DESCN      , '_')
			  and IFNULL(A.USE_YN     , '_') = IFNULL(D.USE_YN      , '_')
			  and IFNULL(A.VV_NOTE1     , '_') = IFNULL(D.VV_NOTE1      , '_')
			  and IFNULL(A.VV_NOTE2     , '_') = IFNULL(D.VV_NOTE2      , '_')
			  and IFNULL(A.VV_NOTE3     , '_') = IFNULL(D.VV_NOTE3      , '_')
			  and IFNULL(A.VV_NOTE4     , '_') = IFNULL(D.VV_NOTE4      , '_')
			  and IFNULL(A.VV_NOTE5     , '_') = IFNULL(D.VV_NOTE5      , '_')
			  and IFNULL(A.VV_NOTE_NM1     , '_') = IFNULL(D.VV_NOTE_NM1      , '_')
			  and IFNULL(A.VV_NOTE_NM2     , '_') = IFNULL(D.VV_NOTE_NM2      , '_')
			  and IFNULL(A.VV_NOTE_NM3     , '_') = IFNULL(D.VV_NOTE_NM3      , '_')
			  and IFNULL(A.VV_NOTE_NM4     , '_') = IFNULL(D.VV_NOTE_NM4      , '_')
			  and IFNULL(A.VV_NOTE_NM5     , '_') = IFNULL(D.VV_NOTE_NM5      , '_')
			  and IFNULL(A.OUTL_CNTN1     , '_') = IFNULL(D.OUTL_CNTN1      , '_')
			  and IFNULL(A.OUTL_CNTN2     , '_') = IFNULL(D.OUTL_CNTN2      , '_')
			  and IFNULL(A.DISP_ORD     , 99999) = IFNULL(D.DISP_ORD     , 99999)
              and D.REG_TYP_CD IN ('C','U')
                  )
  </insert>

  <insert id="checkDupCdTsf" parameterType="map">                        
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
--검증쿼리 CT001 중복건수 체크
      AND EXISTS (SELECT 1
                  FROM WAQ_CD_VAL_TSF D
                  WHERE A.RQST_NO = D.RQST_NO
                    AND A.CD_VAL_ID = D.CD_VAL_ID
                    AND A.TGT_DB_CONN_TRG_ID = D.TGT_DB_CONN_TRG_ID
                    AND A.TGT_DB_SCH_ID = D.TGT_DB_SCH_ID
                    AND A.RQST_SNO != D.RQST_SNO)
  </insert>
  
    <insert id="checkDupCdTsfOtherRqst" parameterType="map">                        
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
    --검증쿼리 CT002 타요청서 기존재 체크
      AND EXISTS (SELECT 1
                  FROM WAQ_CD_VAL_TSF D
                  WHERE A.RQST_NO != D.RQST_NO
                    AND A.CD_VAL_ID = D.CD_VAL_ID
                    AND A.TGT_DB_CONN_TRG_ID = D.TGT_DB_CONN_TRG_ID
                    AND A.TGT_DB_SCH_ID = D.TGT_DB_SCH_ID
                    AND EXISTS (SELECT 1 FROM WAQ_MSTR Q WHERE D.RQST_NO = Q.RQST_NO AND Q.RQST_STEP_CD = 'Q' )
                    )
  </insert>
      <insert id="checkUppCdValExists" parameterType="map">                        
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
    --검증쿼리 CT003 상위코드값 존재여부 확인
      AND A.REG_TYP_CD IN ('C', 'U')
      AND A.UPP_CD_VAL_ID IS NOT NULL
      AND A.UPP_CD_VAL_ID NOT IN (SELECT D.CD_VAL_ID
                                    FROM WAQ_CD_VAL_TSF D
                                  WHERE A.RQST_NO = D.RQST_NO
                                    AND A.TGT_DB_CONN_TRG_ID = D.TGT_DB_CONN_TRG_ID
                                    AND A.TGT_DB_SCH_ID = D.TGT_DB_SCH_ID
                                    AND A.CD_VAL_ID != D.CD_VAL_ID
                                    AND D.REG_TYP_CD IN ('C', 'U')
                                   UNION ALL
                                  SELECT M.CD_VAL_ID
                                    FROM WAM_CD_VAL_TSF M
                                  WHERE A.TGT_DB_CONN_TRG_ID = M.TGT_DB_CONN_TRG_ID
                                    AND A.TGT_DB_SCH_ID = M.TGT_DB_SCH_ID
                                    AND A.CD_VAL_ID != M.CD_VAL_ID
                                    AND NOT EXISTS (SELECT 1 
                                                FROM WAQ_CD_VAL_TSF Q 
                                                WHERE Q.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
                                                AND Q.TGT_DB_CONN_TRG_ID = M.TGT_DB_CONN_TRG_ID
                                                AND Q.TGT_DB_SCH_ID = M.TGT_DB_SCH_ID
                                                AND Q.CD_VAL_ID = M.CD_VAL_ID
                                                AND Q.REG_TYP_CD ='D'
                                                ) 
                   )
  </insert>
      <insert id="checkLowerCdValExists" parameterType="map">                        
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
    --검증쿼리 CT004 하위코드가 존재하면 삭제불가능
      AND A.REG_TYP_CD ='D'
      AND A.CD_VAL_ID  IN (SELECT D.UPP_CD_VAL_ID
                             FROM WAQ_CD_VAL_TSF D
                            WHERE A.RQST_NO = D.RQST_NO
                              AND A.TGT_DB_CONN_TRG_ID = D.TGT_DB_CONN_TRG_ID
                              AND A.TGT_DB_SCH_ID = D.TGT_DB_SCH_ID
                              AND A.CD_VAL_ID = D.UPP_CD_VAL_ID
                              AND D.REG_TYP_CD IN ('C', 'U')
                            UNION ALL
                            SELECT M.UPP_CD_VAL_ID
                              FROM WAM_CD_VAL_TSF M
                             WHERE A.TGT_DB_CONN_TRG_ID = M.TGT_DB_CONN_TRG_ID
                               AND A.TGT_DB_SCH_ID = M.TGT_DB_SCH_ID
                               AND A.CD_VAL_ID = M.UPP_CD_VAL_ID
                               AND NOT EXISTS(SELECT 1 
                                              FROM WAQ_CD_VAL_TSF Q
                                              WHERE Q.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
                                                AND Q.TGT_DB_CONN_TRG_ID = M.TGT_DB_CONN_TRG_ID
                                                AND Q.TGT_DB_SCH_ID = M.TGT_DB_SCH_ID
                                                AND Q.CD_VAL_ID = M.CD_VAL_ID
                                                AND Q.REG_TYP_CD ='D'
                                              )
                               
                          )
  </insert>
      <insert id="checkTgtDb" parameterType="map">                        
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
    --검증쿼리 CT005 타겟db정보 있는지 확인
      AND (A.TGT_DB_CONN_TRG_ID IS NULL OR A.TGT_DB_SCH_ID IS NULL)
  </insert>
  
  <!-- 결재처리 -->
  <update id="updatervwStsCd" parameterType="kr.wise.dq.stnd.service.WaqCdValTsf">
  	UPDATE WAQ_CD_VAL_TSF
  	<set>
  	    RVW_STS_CD 	= #{rvwStsCd} , 
  		RVW_CONTS 	= #{rvwConts} , 
  		APRV_DTM	= now() ,
  		APRV_USER_ID = #{aprvUserId} ,
  	</set>
    WHERE RQST_NO = #{rqstNo,jdbcType=VARCHAR}
      AND RQST_SNO = #{rqstSno,jdbcType=DECIMAL}
      AND VRF_CD = '1'
      AND IFNULL(RVW_STS_CD, '_') != '2'
  </update>

  <!-- 적재 쿼리 -->
  <update id="updateWaqCUD" parameterType="map">
   	--WAQ ID, VERS 등을 업데이트...
	UPDATE WAQ_CD_VAL_TSF A
		SET (OBJ_VERS, FRS_RQST_DTM, FRS_RQST_USER_ID) = (
			SELECT 
				  IFNULL(C.OBJ_VERS, 0) + 1 AS OBJ_VERS
				, C.FRS_RQST_DTM
				, C.FRS_RQST_USER_ID
			  FROM WAQ_CD_VAL_TSF B
			 INNER JOIN WAM_CD_VAL_TSF C
				ON B.DMN_ID = C.DMN_ID 
			   AND B.CD_VAL_ID = C.CD_VAL_ID
			   AND B.TGT_DB_CONN_TRG_ID = C.TGT_DB_CONN_TRG_ID
               AND B.TGT_DB_SCH_ID = C.TGT_DB_SCH_ID
			   AND B.RVW_STS_CD = '1'
			   WHERE B.RQST_NO = #{rqstNo}
			   AND A.CD_VAL_ID = B.CD_VAL_ID
			   AND A.TGT_DB_CONN_TRG_ID = B.TGT_DB_CONN_TRG_ID
               AND A.TGT_DB_SCH_ID = B.TGT_DB_SCH_ID
	)
	WHERE A.RQST_NO = #{rqstNo}
	  AND A.VRF_CD = '1' --등록가능
	  AND EXISTS (
			 SELECT 1
			   FROM WAQ_CD_VAL_TSF B
			 INNER JOIN WAM_CD_VAL_TSF C
				ON B.DMN_ID = C.DMN_ID 
			   AND B.CD_VAL_ID = C.CD_VAL_ID
			   AND B.TGT_DB_CONN_TRG_ID = C.TGT_DB_CONN_TRG_ID
               AND B.TGT_DB_SCH_ID = C.TGT_DB_SCH_ID
			   AND B.RVW_STS_CD = '1'
			  WHERE A.RQST_NO = B.RQST_NO 
			  AND A.RQST_SNO = B.RQST_SNO
			  AND B.RVW_STS_CD = '1'
			  AND A.CD_VAL_ID = B.CD_VAL_ID
			  AND A.TGT_DB_CONN_TRG_ID = B.TGT_DB_CONN_TRG_ID
              AND A.TGT_DB_SCH_ID = B.TGT_DB_SCH_ID
	)
   </update>
  

   <delete id="deleteWAM" parameterType="map">
    --WAM 삭제 (등록유형코드가REG_TYP_CD 변경, 삭제일 경우)
	DELETE FROM WAM_CD_VAL_TSF A
	 WHERE EXISTS (
		SELECT 1 FROM WAQ_CD_VAL_TSF B 
		 WHERE B.RQST_NO = #{rqstNo}
	       AND B.RVW_STS_CD = '1'
	       AND B.VRF_CD = '1'
	       AND A.CD_VAL_ID = B.CD_VAL_ID
	       AND A.TGT_DB_CONN_TRG_ID = B.TGT_DB_CONN_TRG_ID
           AND A.TGT_DB_SCH_ID = B.TGT_DB_SCH_ID
	)
   </delete>
   
   <insert id="insertWAM" parameterType="map">
   	-- WAM 추가 (WAQ 내용을 추가, REG_TYP_CD 가 신규,변경일 경우)
	INSERT INTO WAM_CD_VAL_TSF
	SELECT 
		A.CD_VAL_ID
	  , <include refid="wam_col_list"/>
	  FROM WAQ_CD_VAL_TSF A
	 WHERE A.RQST_NO = #{rqstNo}
	   AND A.VRF_CD = '1'
	   AND A.REG_TYP_CD IN ('C', 'U')
	   AND A.RVW_STS_CD = '1'
   </insert>
   
   <update id="updateWAH"  parameterType="map">
   	--WAH 이력 만료...
	UPDATE WAH_CD_VAL_TSF A 
	SET A.EXP_DTM = now()
	WHERE EXISTS (
		SELECT 1 FROM WAQ_CD_VAL_TSF C
	     WHERE C.RQST_NO = #{rqstNo}
	       AND C.CD_VAL_ID = A.CD_VAL_ID
	       AND C.TGT_DB_CONN_TRG_ID = A.TGT_DB_CONN_TRG_ID
           AND C.TGT_DB_SCH_ID = A.TGT_DB_SCH_ID
	       AND C.VRF_CD = '1'
	       AND C.RVW_STS_CD = '1'
	)
	AND A.EXP_DTM = DATE_FORMAT( '9999-12-31', '%Y-%m-%d')
   </update>
   
   <insert id="insertWAH"  parameterType="map">
   	--WAH이력 적재...
	INSERT INTO WAH_CD_VAL_TSF
	SELECT 
			A.CD_VAL_ID
		  , DATE_FORMAT( '9999-12-31', '%Y-%m-%d') AS EXP_DTM
		  , now() AS STR_DTM 
		  , <include refid="wam_col_list"/>
	  FROM WAQ_CD_VAL_TSF A
	 WHERE A.RQST_NO = #{rqstNo}
	   AND A.VRF_CD = '1'
	   AND A.RVW_STS_CD = '1'
    </insert>
  
       <insert id="insertWaqCdRejected" parameterType="map" >
  	       INSERT INTO WAQ_CD_VAL(
                        RQST_NO
                        ,RQST_SNO
                        ,RQST_DTL_SNO
                        ,CD_VAL_ID
                        ,CD_VAL
                        ,CD_VAL_NM
                        ,RQST_DCD
                        ,RVW_STS_CD
                        ,RVW_CONTS
                        ,VRF_CD
                        ,VRF_RMK
                        ,DMN_ID
                        ,DMN_LNM
                        ,UPP_CD_VAL_ID
                        ,UPP_CD_VAL
                        ,OBJ_DESCN
                        ,OBJ_VERS
                        ,REG_TYP_CD
                        ,FRS_RQST_DTM
                        ,FRS_RQST_USER_ID
                        ,RQST_DTM
                        ,RQST_USER_ID
                        ,APRV_DTM
                        ,APRV_USER_ID,
                        VV_NOTE1,
                        VV_NOTE2,
                        VV_NOTE3, 
                        VV_NOTE4,
                        VV_NOTE5, 
                        VV_NOTE_NM1,
                        VV_NOTE_NM2, 
                        VV_NOTE_NM3, 
                        VV_NOTE_NM4,
                        VV_NOTE_NM5, 
                        OUTL_CNTN1, 
                        OUTL_CNTN2, 
                        USE_YN ,
                        DISP_ORD
  	       )
  	       SELECT 
  	                    #{reqmst.rqstNo,jdbcType=VARCHAR}
                        ,A.RQST_SNO
                        ,A.RQST_DTL_SNO
                        ,A.CD_VAL_ID
                        ,A.CD_VAL
                        ,A.CD_VAL_NM
                        ,A.RQST_DCD
                        ,'0'
                        ,NULL
                        ,NULL
                        ,NULL
                        ,A.DMN_ID
                        ,A.DMN_LNM
                        ,A.UPP_CD_VAL_ID
                        ,A.UPP_CD_VAL
                        ,A.OBJ_DESCN
                        ,A.OBJ_VERS
                        ,A.REG_TYP_CD
                        ,A.FRS_RQST_DTM
                        ,A.FRS_RQST_USER_ID
                        ,A.RQST_DTM
                        ,A.RQST_USER_ID
                        ,NULL
                        ,NULL
                        ,A.VV_NOTE1,
                        A.VV_NOTE2,
                        A.VV_NOTE3, 
                        A.VV_NOTE4,
                        A.VV_NOTE5, 
                        A.VV_NOTE_NM1,
                        A.VV_NOTE_NM2, 
                        A.VV_NOTE_NM3, 
                        A.VV_NOTE_NM4,
                        A.VV_NOTE_NM5, 
                        A.OUTL_CNTN1, 
                        A.OUTL_CNTN2, 
                        A.USE_YN 
                       ,A.DISP_ORD
  	          FROM WAQ_CD_VAL A
  	          INNER JOIN WAQ_DMN B
  	          ON A.DMN_LNM = B.DMN_LNM
  	          AND A.RQST_NO = B.RQST_NO
  	          AND A.RQST_SNO = B.RQST_SNO
  	          WHERE B.RQST_NO = #{oldRqstNo,jdbcType=VARCHAR}
  	          AND B.RVW_STS_CD = '2'
       </insert>
          <insert id="insertnoWaqdelCdVal" parameterType="map" >
          --삭제유효값 대상 추가
  	          INSERT INTO WAQ_CD_VAL(                           
                        RQST_NO                      
                        ,RQST_SNO                    
                        ,RQST_DTL_SNO                
                        ,CD_VAL_ID                   
                        ,CD_VAL                      
                        ,CD_VAL_NM                   
                        ,RQST_DCD                    
                        ,RVW_STS_CD                  
                        ,RVW_CONTS                   
                        ,VRF_CD                      
                        ,VRF_RMK                     
                        ,DMN_ID                      
                        ,DMN_LNM                     
                        ,UPP_CD_VAL_ID               
                        ,UPP_CD_VAL                  
                        ,OBJ_DESCN                   
                        ,OBJ_VERS                    
                        ,REG_TYP_CD                  
                        ,FRS_RQST_DTM                
                        ,FRS_RQST_USER_ID            
                        ,RQST_DTM                    
                        ,RQST_USER_ID                
                        ,APRV_DTM                    
                        ,APRV_USER_ID,               
                        VV_NOTE1,                    
                        VV_NOTE2,                    
                        VV_NOTE3,                    
                        VV_NOTE4,                    
                        VV_NOTE5,                    
                        VV_NOTE_NM1,                 
                        VV_NOTE_NM2,                 
                        VV_NOTE_NM3,                 
                        VV_NOTE_NM4,                 
                        VV_NOTE_NM5,                 
                        OUTL_CNTN1,                  
                        OUTL_CNTN2,                  
                        USE_YN ,                     
                        DISP_ORD                     
  	       )                                         
           SELECT                                              	                                                 
  	                    #{rqstNo,jdbcType=VARCHAR}                                                      
                        ,B.RQST_SNO                                                                     
                        ,IFNULL((SELECT MAX(RQST_DTL_SNO)+1
                          FROM WAQ_CD_VAL Q 
                          WHERE Q.RQST_NO = #{rqstNo,jdbcType=VARCHAR}  
                          AND B.RQST_SNO = Q.RQST_SNO),1)
                        ,C.CD_VAL_ID                                                                    
                        ,C.CD_VAL                                                                       
                        ,C.CD_VAL_NM                                                                    
                        ,'DD'                                                                           
                        ,'0'                                                                            
                        ,NULL                                                                           
                        ,NULL                                                                           
                        ,NULL                      
                        ,C.DMN_ID                  
                        ,B.DMN_LNM                 
                        ,C.UPP_CD_VAL_ID           
                        ,GET_CD_VAL_NM(C.UPP_CD_VAL_ID) UPP_CD_VAL              
                        ,C.OBJ_DESCN               
                        ,C.OBJ_VERS                
                        ,'D'                       
                        ,C.FRS_RQST_DTM            
                        ,C.FRS_RQST_USER_ID        
                        ,C.RQST_DTM                
                        ,C.RQST_USER_ID            
                        ,NULL                      
                        ,NULL                      
                        ,C.VV_NOTE1,               
                        C.VV_NOTE2,                
                        C.VV_NOTE3,                
                        C.VV_NOTE4,                
                        C.VV_NOTE5,                
                        C.VV_NOTE_NM1,             
                        C.VV_NOTE_NM2,             
                        C.VV_NOTE_NM3,             
                        C.VV_NOTE_NM4,             
                        C.VV_NOTE_NM5,             
                        C.OUTL_CNTN1,              
                        C.OUTL_CNTN2,              
                        C.USE_YN                   
                       ,C.DISP_ORD                 
  	        FROM WAM_DMN A                         
      INNER JOIN WAQ_DMN B                         
      ON A.DMN_ID = B.DMN_ID                       
      INNER JOIN WAM_CD_VAL C                      
      ON A.DMN_ID = C.DMN_ID                       
      LEFT OUTER JOIN WAQ_CD_VAL D                 
      ON C.CD_VAL = D.CD_VAL                       
      --AND C.CD_VAL_NM = D.CD_VAL_NM                
      AND B.RQST_NO = D.RQST_NO                    
      AND B.RQST_SNO = D.RQST_SNO                  
      WHERE B.RQST_NO = #{rqstNo,jdbcType=VARCHAR}  
      AND D.CD_VAL IS NULL                         
       </insert>
       
              <insert id="insertWaqRejected" parameterType="map" >
  	       INSERT INTO WAQ_CD_VAL_TSF(
                        RQST_NO
                        ,RQST_SNO
                        ,TGT_DB_CONN_TRG_ID 
                        ,TGT_DB_CONN_TRG_PNM 
                        ,TGT_DB_SCH_ID 
                        ,TGT_DB_SCH_PNM 
                        ,CD_VAL_ID
                        ,CD_VAL
                        ,CD_VAL_NM
                        ,RQST_DCD
                        ,RVW_STS_CD
                        ,RVW_CONTS
                        ,VRF_CD
                        ,VRF_RMK
                        ,DMN_ID
                        ,DMN_LNM
                        ,UPP_CD_VAL_ID
                        ,UPP_CD_VAL
                        ,OBJ_DESCN
                        ,OBJ_VERS
                        ,REG_TYP_CD
                        ,FRS_RQST_DTM
                        ,FRS_RQST_USER_ID
                        ,RQST_DTM
                        ,RQST_USER_ID
                        ,APRV_DTM
                        ,APRV_USER_ID,
                        VV_NOTE1,
                        VV_NOTE2,
                        VV_NOTE3, 
                        VV_NOTE4,
                        VV_NOTE5, 
                        VV_NOTE_NM1,
                        VV_NOTE_NM2, 
                        VV_NOTE_NM3, 
                        VV_NOTE_NM4,
                        VV_NOTE_NM5, 
                        OUTL_CNTN1, 
                        OUTL_CNTN2, 
                        USE_YN ,
                        DISP_ORD,
                        DMN_DSCD, 
                        CD_VAL_TYP_CD 
  	       )
  	       SELECT 
  	                    #{reqmst.rqstNo,jdbcType=VARCHAR}
                        ,A.RQST_SNO
                        ,TGT_DB_CONN_TRG_ID 
                        ,TGT_DB_CONN_TRG_PNM 
                        ,TGT_DB_SCH_ID 
                        ,TGT_DB_SCH_PNM
                        ,A.CD_VAL_ID
                        ,A.CD_VAL
                        ,A.CD_VAL_NM
                        ,A.RQST_DCD
                        ,'0'
                        ,NULL
                        ,NULL
                        ,NULL
                        ,A.DMN_ID
                        ,A.DMN_LNM
                        ,A.UPP_CD_VAL_ID
                        ,A.UPP_CD_VAL
                        ,A.OBJ_DESCN
                        ,A.OBJ_VERS
                        ,A.REG_TYP_CD
                        ,A.FRS_RQST_DTM
                        ,A.FRS_RQST_USER_ID
                        ,A.RQST_DTM
                        ,A.RQST_USER_ID
                        ,NULL
                        ,NULL
                        ,A.VV_NOTE1,
                        A.VV_NOTE2,
                        A.VV_NOTE3, 
                        A.VV_NOTE4,
                        A.VV_NOTE5, 
                        A.VV_NOTE_NM1,
                        A.VV_NOTE_NM2, 
                        A.VV_NOTE_NM3, 
                        A.VV_NOTE_NM4,
                        A.VV_NOTE_NM5, 
                        A.OUTL_CNTN1, 
                        A.OUTL_CNTN2, 
                        A.USE_YN, 
                        A.DISP_ORD,
                        A.DMN_DSCD, 
                        A.CD_VAL_TYP_CD 
  	          FROM WAQ_CD_VAL_TSF A
  	          WHERE A.RQST_NO = #{oldRqstNo,jdbcType=VARCHAR}
  	          AND A.RVW_STS_CD = '2'
       </insert>
      
</mapper>



