<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.wise.dq.stnd.service.WaqDmnMapper" >
  <resultMap id="BaseResultMap" type="kr.wise.dq.stnd.service.WaqDmn" extends="kr.wise.commons.cmm.service.CommonMapper.BaseResultMap">
    <id column="RQST_NO" 		   property="rqstNo" jdbcType="VARCHAR" />
    <id column="RQST_SNO" 		   property="rqstSno"    jdbcType="DECIMAL" />
    <result column="DMN_ID" 	   property="dmnId"      jdbcType="VARCHAR" />
    <result column="DMN_LNM" 	   property="dmnLnm"     jdbcType="VARCHAR" />
    <result column="DMN_PNM" 	   property="dmnPnm"     jdbcType="VARCHAR" />
    <result column="LNM_CRI_DS"    property="lnmCriDs"   jdbcType="VARCHAR" />
    <result column="PNM_CRI_DS"    property="pnmCriDs"   jdbcType="VARCHAR" />
    <result column="DMNG_ID" 	   property="dmngId"     jdbcType="VARCHAR" />
    <result column="DMNG_LNM" 	   property="dmngLnm"    jdbcType="VARCHAR" />
    <result column="INFOTP_ID" 	   property="infotpId"   jdbcType="VARCHAR" />
    <result column="DATA_TYPE" 	   property="dataType"   jdbcType="VARCHAR" />
    <result column="DATA_LEN" 	   property="dataLen"    jdbcType="DECIMAL" />
    <result column="DATA_SCAL" 	   property="dataScal"   jdbcType="DECIMAL" />
    <result column="INFOTP_LNM"    property="infotpLnm"  jdbcType="VARCHAR" />
    <result column="UPP_DMN_ID"    property="uppDmnId"   jdbcType="VARCHAR" />
    <result column="UPP_DMN_LNM"   property="uppDmnLnm"  jdbcType="VARCHAR" />
    <result column="MDL_LNM" 	   property="mdlLnm"     jdbcType="VARCHAR" />
    <result column="UPP_SUBJ_LNM"  property="uppSubjLnm" jdbcType="VARCHAR" />
    <result column="SUBJ_ID" 	   property="subjId"     jdbcType="VARCHAR" />
    <result column="SUBJ_LNM" 	   property="subjLnm"    jdbcType="VARCHAR" />
    <result column="LST_ENTY_ID"   property="lstEntyId"  jdbcType="VARCHAR" />
    <result column="LST_ENTY_PNM"  property="lstEntyPnm" jdbcType="VARCHAR" />
    <result column="LST_ENTY_LNM"  property="lstEntyLnm" jdbcType="VARCHAR" />
    <result column="LST_ATTR_ID"   property="lstAttrId"  jdbcType="VARCHAR" />
    <result column="LST_ATTR_PNM"  property="lstAttrPnm" jdbcType="VARCHAR" />
    <result column="LST_ATTR_LNM"  property="lstAttrLnm" jdbcType="VARCHAR" />
    <result column="CD_VAL_TYP_CD" property="cdValTypCd" jdbcType="VARCHAR" />
    <result column="CD_VAL_IVW_CD" property="cdValIvwCd" jdbcType="VARCHAR" />
    <result column="DATA_FRM" 	   property="dataFrm" jdbcType="VARCHAR" />
    <result column="SDITM_AUTO_CRT_YN" property="sditmAutoCrtYn" jdbcType="VARCHAR" />
    <result column="CRG_USER_ID"   property="crgUserId"   jdbcType="VARCHAR" />
    <result column="CRG_USER_NM"   property="crgUserNm"   jdbcType="VARCHAR" />
    <result column="DMN_ORG_DS"    property="dmnOrgDs"    jdbcType="VARCHAR" />
	<result column="UPP_DMNG_ID"   property="uppDmngId"   jdbcType="VARCHAR" />
	<result column="UPP_DMNG_LNM"  property="uppDmngLnm"  jdbcType="VARCHAR" />
    <result column="ENC_YN"        property="encYn"       jdbcType="VARCHAR" />
    <result column="DMN_DSCD"      property="dmnDscd"     jdbcType="VARCHAR" />
    <result column="DMN_MIN_VAL"   property="dmnMinVal"   jdbcType="VARCHAR" />
    <result column="DMN_MAX_VAL"   property="dmnMaxVal"   jdbcType="VARCHAR" />
    <result column="SAVE_FRM"      property="saveFrm"     jdbcType="VARCHAR" />
    <result column="EXPRSN_FRM"    property="exprsnFrm"   jdbcType="VARCHAR" />
    <result column="UNIT"          property="unit"        jdbcType="VARCHAR" />
    <result column="CD_VAL"        property="cdVal"       jdbcType="VARCHAR" />
    <result column="ADMN_STND_CD"  property="admnStndCd"  jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    RQST_NO, RQST_SNO, DMN_ID, DMN_LNM, DMN_PNM, LNM_CRI_DS, RQST_DCD, RVW_STS_CD, RVW_CONTS, 
    VRF_CD, VRF_RMK, DMNG_ID, DMNG_LNM, INFOTP_ID, DATA_TYPE, DATA_LEN, DATA_SCAL, INFOTP_LNM, 
    UPP_DMN_ID, UPP_DMN_LNM, MDL_LNM, UPP_SUBJ_LNM, SUBJ_ID, SUBJ_LNM, LST_ENTY_ID, LST_ENTY_PNM, 
    LST_ENTY_LNM, CD_VAL_TYP_CD, CD_VAL_IVW_CD, DATA_FRM, SDITM_AUTO_CRT_YN, CRG_USER_ID, 
    CRG_USER_NM, DMN_ORG_DS, OBJ_DESCN, OBJ_VERS, REG_TYP_CD, FRS_RQST_DTM, FRS_RQST_USER_ID, 
    RQST_DTM, RQST_USER_ID, APRV_DTM, APRV_USER_ID, FULL_PATH,ENC_YN,DMN_DSCD
    ,SAVE_FRM,EXPRSN_FRM,UNIT,CD_VAL,ADMN_STND_CD
  </sql>
  <sql id="waq_Column_List" >
    RQST_NO, RQST_SNO, DMN_ID, DMN_LNM, DMN_PNM, LNM_CRI_DS, RQST_DCD, RVW_CONTS, 
    VRF_CD, VRF_RMK, DMNG_ID, DMNG_LNM, INFOTP_ID, DATA_TYPE, DATA_LEN, DATA_SCAL, INFOTP_LNM, 
    UPP_DMN_ID, UPP_DMN_LNM, MDL_LNM, UPP_SUBJ_LNM, SUBJ_ID, SUBJ_LNM, LST_ENTY_ID, LST_ENTY_PNM, 
    LST_ENTY_LNM, LST_ATTR_ID, LST_ATTR_PNM, LST_ATTR_LNM, CD_VAL_TYP_CD, CD_VAL_IVW_CD, DATA_FRM, SDITM_AUTO_CRT_YN, CRG_USER_ID, 
    CRG_USER_NM, DMN_ORG_DS, OBJ_DESCN, OBJ_VERS, REG_TYP_CD, FRS_RQST_DTM, FRS_RQST_USER_ID, 
    RQST_DTM, RQST_USER_ID, APRV_DTM, APRV_USER_ID, FULL_PATH,ENC_YN,DMN_DSCD
    ,SAVE_FRM,EXPRSN_FRM,UNIT,CD_VAL,ADMN_STND_CD
  </sql>
  
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    from WAQ_DMN
    where RQST_NO = #{rqstNo,jdbcType=VARCHAR}
      and RQST_SNO = #{rqstSno,jdbcType=DECIMAL}
  </select>
  
  <select id="selectDmnRqstListbyMst" parameterType="kr.wise.commons.rqstmst.service.WaqMstr" resultMap="BaseResultMap">
  
    SELECT A.RQST_NO, A.RQST_SNO, A.DMN_ID, A.DMN_LNM, IFNULL(A.DMN_PNM,'-') AS DMN_PNM, IFNULL(A.LNM_CRI_DS,'-') AS LNM_CRI_DS, IFNULL(A.PNM_CRI_DS,'-') AS PNM_CRI_DS, A.RQST_DCD, A.RVW_CONTS 
         , A.VRF_CD, A.VRF_RMK, A.DMNG_ID, A.DMNG_LNM, A.INFOTP_ID
         , A.DATA_TYPE
         , A.DATA_LEN
         , A.DATA_SCAL
         , A.INFOTP_LNM 
         , A.UPP_DMN_ID, A.UPP_DMN_LNM, A.MDL_LNM, A.UPP_SUBJ_LNM, A.SUBJ_ID, A.SUBJ_LNM, A.LST_ENTY_ID, A.LST_ENTY_PNM 
         , A.LST_ENTY_LNM, A.LST_ATTR_ID, A.LST_ATTR_PNM, A.LST_ATTR_LNM, A.CD_VAL_TYP_CD, A.CD_VAL_IVW_CD, A.DATA_FRM, A.SDITM_AUTO_CRT_YN, A.CRG_USER_ID 
         , A.CRG_USER_NM, A.DMN_ORG_DS, A.OBJ_DESCN, A.OBJ_VERS, A.REG_TYP_CD, A.FRS_RQST_DTM, A.FRS_RQST_USER_ID 
         , A.RQST_DTM, A.RQST_USER_ID, A.APRV_DTM, A.APRV_USER_ID, A.FULL_PATH,A.ENC_YN,A.DMN_DSCD
         <if test='rqstStepCd == "Q" '>
         , CASE WHEN A.RVW_STS_CD = '2' THEN '2' ELSE '0' END AS RVW_STS_CD
         </if>
         <if test='rqstStepCd != "Q" '>
         , A.RVW_STS_CD
         </if>
         -- , CASE WHEN A.VRF_CD = '2' THEN '#FF0000' END AS FontColor
         , CASE WHEN A.VRF_CD = '2' THEN '#FF0000' ELSE CASE WHEN A.VRF_CD = '5' THEN '#0000FF'  END END AS FontColor 
         , GET_USER_NM(A.RQST_USER_ID) AS RQST_USER_NM
         , A.DMN_MIN_VAL
         , A.DMN_MAX_VAL
         , A.SAVE_FRM, A.EXPRSN_FRM, A.UNIT, A.CD_VAL, A.ADMN_STND_CD
      FROM WAQ_DMN A 
    WHERE A.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
    <if test='rqstStepCd == "Q" or rqstStepCd == "A" '>
    	AND A.VRF_CD = '1'
    </if>
    ORDER BY A.RQST_SNO
  </select>
  
  <select id="selectDomainRqstDetail" parameterType="kr.wise.dq.stnd.service.WaqDmn" resultMap="BaseResultMap">
  	SELECT A.*
  	         ,G.UPP_DMNG_ID
  	         ,G.UPP_DMNG_LNM
      FROM WAQ_DMN A
              LEFT OUTER JOIN V_WAA_DMNG G
  	             ON A.DMNG_LNM = G.DMNG_LNM
  	 WHERE A.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
       AND A.RQST_SNO = #{rqstSno,jdbcType=DECIMAL} 
  </select>
  
  
  <select id="selectByDmnLnm" parameterType="kr.wise.dq.stnd.service.WaqDmn" resultMap="BaseResultMap">
   SELECT A.DMN_LNM, A.DMNG_LNM, A.INFOTP_LNM, A.DATA_TYPE, A.DATA_LEN, A.DATA_SCAL
         , A.SAVE_FRM, A.EXPRSN_FRM, A.UNIT, A.CD_VAL, A.ADMN_STND_CD 
     FROM WAQ_DMN A
<!--           LEFT JOIN V_WAA_DMNG G -->
<!--             ON A.DMNG_LNM = G.DMNG_LNM -->
<!--            <![CDATA[AND G.DMNG_LVL > 0]]> -->
 	WHERE A.DMN_LNM = #{dmnLnm,jdbcType=VARCHAR}	  
 	  AND A.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
 	  <if test="rqstSno != null" >
 	   AND A.RQST_SNO = #{rqstSno,jdbcType=DECIMAL}
 	 </if>
    UNION ALL
    SELECT A.DMN_LNM, A.DMNG_LNM, A.INFOTP_LNM, A.DATA_TYPE, A.DATA_LEN, A.DATA_SCAL
          , A.SAVE_FRM, A.EXPRSN_FRM, A.UNIT, A.CD_VAL, A.ADMN_STND_CD
      FROM WAM_DMN A
<!--            INNER JOIN WAA_DMNG B -->
<!--               ON A.DMNG_ID = B.DMNG_ID -->
<!--              AND B.EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d') -->
<!--            INNER JOIN WAA_INFO_TYPE C -->
<!--               ON A.INFOTP_ID = C.INFOTP_ID -->
<!--              AND C.EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d') -->
<!--            LEFT JOIN V_WAA_DMNG G -->
<!--               ON B.DMNG_LNM = G.DMNG_LNM -->
<!--              <![CDATA[ AND G.DMNG_LVL > 0  ]]> -->
      WHERE A.REG_TYP_CD IN ('C','U')
 	    AND A.DMN_LNM = #{dmnLnm,jdbcType=VARCHAR} 	   
        AND NOT EXISTS (SELECT 1 
                          FROM WAQ_DMN D
                         WHERE A.DMN_LNM = D.DMN_LNM                        
                           AND D.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
                           <if test="rqstSno != null" >
 	 				 	   AND D.RQST_SNO = #{rqstSno,jdbcType=DECIMAL}
 	 				 	 </if>
                          )
  
  </select>
  <select id="selectListByCdval" parameterType="kr.wise.dq.stnd.service.WaqCdVal" resultMap="BaseResultMap">
  	SELECT A.DMN_LNM, A.DMN_PNM, A.RQST_NO, A.RQST_SNO
  	  FROM WAQ_DMN A
  	 WHERE RQST_NO = #{rqstNo}
  	   AND A.DMN_LNM = #{dmnLnm}
  </select>
  
    <select id="selectExistsDmnCheck" resultMap="BaseResultMap" parameterType="kr.wise.dq.stnd.service.WaqDmn" >
    SELECT 
         DMN_ID
    FROM WAQ_DMN
    WHERE RQST_NO = #{rqstNo,jdbcType=VARCHAR}
    limit 1

  </select>
  
  
  <select id="selectListByDmnLnm" parameterType="kr.wise.dq.stnd.service.WaqDmn" resultMap="BaseResultMap">
      SELECT 
    	A.DMN_LNM, A.DMNG_LNM, A.INFOTP_LNM, A.DATA_TYPE, A.DATA_LEN, A.DATA_SCAL
          , A.SAVE_FRM, A.EXPRSN_FRM, A.UNIT, A.CD_VAL, A.ADMN_STND_CD
    FROM WAQ_DMN A
<!--     LEFT OUTER JOIN V_WAA_DMNG G -->
<!--       ON A.DMNG_LNM = G.DMNG_LNM -->
<!--      <![CDATA[AND G.DMNG_LVL > 0]]> -->
	WHERE A.DMN_LNM = #{dmnLnm,jdbcType=VARCHAR}
	<if test="dmnPnm != null" >
	  AND A.DMN_PNM = #{dmnPnm,jdbcType=VARCHAR}
	</if>
	  AND A.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
	 <if test="rqstSno != null" >
	  AND A.RQST_SNO = #{rqstSno,jdbcType=DECIMAL}
	</if>
    UNION ALL
    SELECT 
    	A.DMN_LNM, A.DMNG_LNM, A.INFOTP_LNM, A.DATA_TYPE, A.DATA_LEN, A.DATA_SCAL
          , A.SAVE_FRM, A.EXPRSN_FRM, A.UNIT, A.CD_VAL, A.ADMN_STND_CD
    FROM WAM_DMN A
<!--     INNER JOIN WAA_DMNG B -->
<!--        ON A.DMNG_ID = B.DMNG_ID -->
<!--       AND B.EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d') -->
<!--     INNER JOIN WAA_INFO_TYPE C -->
<!--        ON A.INFOTP_ID = C.INFOTP_ID -->
<!--       AND C.EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d') -->
<!--     LEFT OUTER JOIN V_WAA_DMNG G -->
<!--        ON B.DMNG_LNM = G.DMNG_LNM -->
<!--       <![CDATA[AND G.DMNG_LVL > 0]]> -->
    WHERE A.REG_TYP_CD IN ('C','U')
	  AND A.DMN_LNM = #{dmnLnm,jdbcType=VARCHAR}
	  <if test="dmnPnm != null" >
	  AND A.DMN_PNM = #{dmnPnm,jdbcType=VARCHAR}
	  </if>
      AND NOT EXISTS (SELECT 1 FROM WAQ_DMN D
                      WHERE A.DMN_LNM = D.DMN_LNM
                        AND A.DMN_PNM = D.DMN_PNM
                        AND D.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
                        <if test="rqstSno != null" >
						AND D.RQST_SNO = #{rqstSno,jdbcType=DECIMAL}
						</if>
                        )
  
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="map" >
    delete from WAQ_DMN
    where RQST_NO = #{rqstNo,jdbcType=VARCHAR}
      and RQST_SNO = #{rqstSno,jdbcType=DECIMAL}
  </delete>
  
  <delete id="deleteDmnList" parameterType="map">
  	DELETE FROM WAQ_DMN
  	 WHERE RQST_NO = #{reqmst.rqstNo}
  	   AND RQST_SNO IN 
  	   <foreach collection="list" item="item" index="index" open="("  separator="," close=")" >
  	   	#{item.rqstSno}
  	   </foreach>
  	
  </delete>
  
  <insert id="insertwam2waq" parameterType="map">
  INSERT INTO WAQ_DMN (
<!--   					  RQST_NO, RQST_SNO, DMN_ID, DMN_LNM, DMN_PNM, LNM_CRI_DS, RQST_DCD, DMNG_ID, DMNG_LNM -->
<!-- 					, INFOTP_ID, DATA_TYPE, DATA_LEN, DATA_SCAL, INFOTP_LNM, UPP_DMN_ID, UPP_DMN_LNM -->
<!-- 					, SUBJ_ID, LST_ENTY_ID, LST_ENTY_PNM, LST_ENTY_LNM, CD_VAL_TYP_CD, CD_VAL_IVW_CD -->
<!-- 					, DATA_FRM, SDITM_AUTO_CRT_YN, CRG_USER_ID, DMN_ORG_DS, OBJ_DESCN, OBJ_VERS,ENC_YN,DMN_DSCD -->

					RQST_NO, RQST_SNO, DMN_ID, DMN_LNM, RQST_DCD, DMNG_LNM
					, DATA_TYPE, DATA_LEN, DATA_SCAL, INFOTP_LNM
					, CRG_USER_ID, OBJ_DESCN, OBJ_VERS
					, SAVE_FRM, EXPRSN_FRM, UNIT, CD_VAL, ADMN_STND_CD
					)
	SELECT #{reqmst.rqstNo}
<!-- 		  , (SELECT IFNULL(MAX(RQST_SNO), 0) FROM WAQ_DMN WHERE RQST_NO = #{reqmst.rqstNo}) + ROWNUM-->
<!-- 	      , (SELECT IFNULL(MAX(RQST_SNO), 0)+@rownum:=@rownum+1 FROM WAQ_DMN,(SELECT @rownum:=0) TMP WHERE RQST_NO = #{reqmst.rqstNo}) AS RQST_SNO -->
<!-- 		  , A.DMN_ID, A.DMN_LNM, A.DMN_PNM, A.LNM_CRI_DS, #{reqmst.rqstDcd} AS RQST_DCD , A.DMNG_ID, B.DMNG_LNM -->
<!-- 		  , A.INFOTP_ID, A.DATA_TYPE, A.DATA_LEN, A.DATA_SCAL, C.INFOTP_LNM, A.UPP_DMN_ID, D.DMN_LNM -->
<!-- 		  , A.SUBJ_ID, A.LST_ENTY_ID, A.LST_ENTY_PNM, A.LST_ENTY_LNM, A.CD_VAL_TYP_CD, A.CD_VAL_IVW_CD -->
<!-- 		  , A.DATA_FRM, A.SDITM_AUTO_CRT_YN, A.CRG_USER_ID, A.DMN_ORG_DS, A.OBJ_DESCN, A.OBJ_VERS,A.ENC_YN,A.DMN_DSCD -->
<!-- 		  , A.SAVE_FRM, A.EXPRSN_FRM, A.UNIT, A.CD_VAL, A.ADMN_STND_CD -->
			, (SELECT IFNULL(MAX(RQST_SNO), 0)+@rownum:=@rownum+1 FROM WAQ_DMN,(SELECT @rownum:=0) TMP WHERE RQST_NO = #{reqmst.rqstNo}) AS RQST_SNO
		  , A.DMN_ID, A.DMN_LNM, #{reqmst.rqstDcd} AS RQST_DCD, A.DMNG_LNM
		  , A.DATA_TYPE, A.DATA_LEN, A.DATA_SCAL, A.INFOTP_LNM
		  , A.CRG_USER_ID, A.DMN_ORG_DS, A.OBJ_DESCN, A.OBJ_VERS
		  , A.SAVE_FRM, A.EXPRSN_FRM, A.UNIT, A.CD_VAL, A.ADMN_STND_CD
	  FROM WAM_DMN A
<!-- 	  LEFT OUTER JOIN WAA_DMNG B -->
<!-- 	    ON A.DMNG_ID = B.DMNG_ID -->
<!-- 	   AND B.EXP_DTM = DATE_FORMAT( '9999-12-31', '%Y-%m-%d')  -->
<!-- 	    AND B.REG_TYP_CD IN ('C', 'U') -->
<!-- 	   LEFT OUTER JOIN WAA_INFO_TYPE C -->
<!-- 	     ON A.INFOTP_ID = C.INFOTP_ID -->
<!-- 	    AND C.EXP_DTM = DATE_FORMAT( '9999-12-31', '%Y-%m-%d')  -->
<!-- 	   LEFT OUTER JOIN WAM_DMN D -->
<!-- 	     ON A.UPP_DMN_ID = D.DMN_ID -->
<!-- 	    LEFT OUTER JOIN WAA_SUBJ E -->
<!-- 	      ON A.SUBJ_ID = E.SUBJ_ID -->
	
	  WHERE A.DMN_ID IN -- ('OBJ_00000001173')
	  <foreach collection="list" item="item" open="(" separator="," close=")">
	  	#{item.dmnId}
	  </foreach>
	    AND A.REG_TYP_CD IN ('C', 'U')
  </insert>
  
  <select id="selectwamlist" parameterType="map" resultMap="BaseResultMap">
  		SELECT 
<!--   			(SELECT IFNULL(MAX(RQST_SNO), 0)+@rownum:=@rownum+1 FROM WAQ_DMN,(SELECT @rownum:=0) TMP WHERE RQST_NO = #{reqmst.rqstNo}) AS RQST_SNO -->
<!--   		  , 'I' AS IBS_STATUS -->
<!-- 		  , A.DMN_ID, A.DMN_LNM, A.DMN_PNM, A.LNM_CRI_DS, A.PNM_CRI_DS -->
<!-- 		  , #{reqmst.rqstDcd} AS RQST_DCD, A.DMNG_ID, B.DMNG_LNM -->
<!-- 		  , A.INFOTP_ID, A.DATA_TYPE, A.DATA_LEN, A.DATA_SCAL, C.INFOTP_LNM, A.UPP_DMN_ID, D.DMN_LNM -->
<!-- 		  , A.SUBJ_ID, A.LST_ENTY_ID, A.LST_ENTY_PNM, A.LST_ENTY_LNM, A.LST_ATTR_ID, A.LST_ATTR_PNM, A.LST_ATTR_LNM, A.CD_VAL_TYP_CD, A.CD_VAL_IVW_CD -->
<!-- 		  , A.DATA_FRM, A.SDITM_AUTO_CRT_YN, A.CRG_USER_ID, A.DMN_ORG_DS, A.OBJ_DESCN, A.OBJ_VERS,A.ENC_YN,A.DMN_DSCD -->
			(SELECT IFNULL(MAX(RQST_SNO), 0)+@rownum:=@rownum+1 FROM WAQ_DMN,(SELECT @rownum:=0) TMP WHERE RQST_NO = #{reqmst.rqstNo}) AS RQST_SNO
  		  , 'I' AS IBS_STATUS
		  , A.DMN_ID, A.DMN_LNM
		  , #{reqmst.rqstDcd} AS RQST_DCD, A.DMNG_LNM
		  , A.DATA_TYPE, A.DATA_LEN, A.DATA_SCAL, A.INFOTP_LNM
		  , A.CRG_USER_ID, A.DMN_ORG_DS, A.OBJ_DESCN, A.OBJ_VERS
		  , A.SAVE_FRM, A.EXPRSN_FRM, A.UNIT, A.CD_VAL, A.ADMN_STND_CD
	  FROM WAM_DMN A
<!-- 	  LEFT OUTER JOIN WAA_DMNG B -->
<!-- 	    ON A.DMNG_ID = B.DMNG_ID -->
<!-- 	   AND B.EXP_DTM = DATE_FORMAT( '9999-12-31', '%Y-%m-%d')  -->
<!-- 	    AND B.REG_TYP_CD IN ('C', 'U') -->
<!-- 	   LEFT OUTER JOIN WAA_INFO_TYPE C -->
<!-- 	     ON A.INFOTP_ID = C.INFOTP_ID -->
<!-- 	    AND C.EXP_DTM = DATE_FORMAT( '9999-12-31', '%Y-%m-%d')  -->
<!-- 	   LEFT OUTER JOIN WAM_DMN D -->
<!-- 	     ON A.UPP_DMN_ID = D.DMN_ID -->
<!-- 	    LEFT OUTER JOIN WAA_SUBJ E -->
<!-- 	      ON A.SUBJ_ID = E.SUBJ_ID -->
	
	  WHERE A.DMN_ID IN 
	  <foreach collection="list" item="item" open="(" separator="," close=")">
	  	#{item.dmnId}
	  </foreach>
	    AND A.REG_TYP_CD IN ('C', 'U')
  </select>
  
  <insert id="insert" parameterType="kr.wise.dq.stnd.service.WaqDmn" >
    insert into WAQ_DMN (RQST_NO, RQST_SNO, DMN_ID, 
      DMN_LNM, DMN_PNM, LNM_CRI_DS, 
      RQST_DCD, RVW_STS_CD, RVW_CONTS, 
      VRF_CD, VRF_RMK, DMNG_ID, 
      DMNG_LNM, INFOTP_ID, DATA_TYPE, 
      DATA_LEN, DATA_SCAL, INFOTP_LNM, 
      UPP_DMN_ID, UPP_DMN_LNM, MDL_LNM, 
      UPP_SUBJ_LNM, SUBJ_ID, SUBJ_LNM, 
      LST_ENTY_ID, LST_ENTY_PNM, LST_ENTY_LNM, 
      CD_VAL_TYP_CD, CD_VAL_IVW_CD, DATA_FRM, 
      SDITM_AUTO_CRT_YN, CRG_USER_ID, CRG_USER_NM, 
      DMN_ORG_DS, OBJ_DESCN, OBJ_VERS, 
      REG_TYP_CD, FRS_RQST_DTM, FRS_RQST_USER_ID, 
      RQST_DTM, RQST_USER_ID, APRV_DTM, 
      APRV_USER_ID,ENC_YN,DMN_DSCD)
    values (#{rqstNo,jdbcType=VARCHAR}, #{rqstSno,jdbcType=DECIMAL}, #{dmnId,jdbcType=VARCHAR}, 
      #{dmnLnm,jdbcType=VARCHAR}, #{dmnPnm,jdbcType=VARCHAR}, #{lnmCriDs,jdbcType=VARCHAR}, 
      #{rqstDcd,jdbcType=VARCHAR}, #{rvwStsCd,jdbcType=VARCHAR}, #{rvwConts,jdbcType=VARCHAR}, 
      #{vrfCd,jdbcType=VARCHAR}, #{vrfRmk,jdbcType=VARCHAR}, #{dmngId,jdbcType=VARCHAR}, 
      #{dmngLnm,jdbcType=VARCHAR}, #{infotpId,jdbcType=VARCHAR}, #{dataType,jdbcType=VARCHAR}, 
      #{dataLen,jdbcType=DECIMAL}, #{dataScal,jdbcType=DECIMAL}, #{infotpLnm,jdbcType=VARCHAR}, 
      #{uppDmnId,jdbcType=VARCHAR}, #{uppDmnLnm,jdbcType=VARCHAR}, #{mdlLnm,jdbcType=VARCHAR}, 
      #{uppSubjLnm,jdbcType=VARCHAR}, #{subjId,jdbcType=VARCHAR}, #{subjLnm,jdbcType=VARCHAR}, 
      #{lstEntyId,jdbcType=VARCHAR}, #{lstEntyPnm,jdbcType=VARCHAR}, #{lstEntyLnm,jdbcType=VARCHAR}, 
      #{cdValTypCd,jdbcType=VARCHAR}, #{cdValIvwCd,jdbcType=VARCHAR}, #{dataFrm,jdbcType=VARCHAR}, 
      #{sditmAutoCrtYn,jdbcType=VARCHAR}, #{crgUserId,jdbcType=VARCHAR}, #{crgUserNm,jdbcType=VARCHAR}, 
      #{dmnOrgDs,jdbcType=VARCHAR}, #{objDescn,jdbcType=VARCHAR}, #{objVers,jdbcType=DECIMAL}, 
      #{regTypCd,jdbcType=VARCHAR}, #{frsRqstDtm,jdbcType=TIMESTAMP}, #{frsRqstUserId,jdbcType=VARCHAR}, 
      #{rqstDtm,jdbcType=TIMESTAMP}, #{rqstUserId,jdbcType=VARCHAR}, #{aprvDtm,jdbcType=TIMESTAMP}, 
      #{aprvUserId,jdbcType=VARCHAR},#{encYn,jdbcType=VARCHAR},#{dmnDscd,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="kr.wise.dq.stnd.service.WaqDmn" >
  	<selectKey keyProperty="rqstSno" resultType="int" statementType="PREPARED" order="BEFORE">
<!--    		<include refid="kr.wise.commons.cmm.service.CommonMapper.getNextrqstSno"/> -->
  		SELECT IFNULL(MAX(RQST_SNO), 0) + 1 FROM WAQ_DMN WHERE RQST_NO = #{rqstNo}
  	</selectKey>
    insert into WAQ_DMN
    <trim prefix="(" suffix=")" suffixOverrides="," >
        RQST_NO,
        RQST_SNO,
      <if test="dmnId != null" >
        DMN_ID,
      </if>
      <if test="dmnLnm != null" >
        DMN_LNM,
      </if>
      <if test="dmnPnm != null" >
        DMN_PNM,
      </if>
      <if test="lnmCriDs != null" >
        LNM_CRI_DS,
      </if>
      <if test="pnmCriDs != null" >
        PNM_CRI_DS,
      </if>
      <if test="rqstDcd != null" >
        RQST_DCD,
      </if>
      <if test="rvwStsCd != null" >
        RVW_STS_CD,
      </if>
      <if test="rvwConts != null" >
        RVW_CONTS,
      </if>
      <if test="vrfCd != null" >
        VRF_CD,
      </if>
      <if test="vrfRmk != null" >
        VRF_RMK,
      </if>
      <if test="dmngId != null" >
        DMNG_ID,
      </if>
      <if test="dmngLnm != null" >
        DMNG_LNM,
      </if>
      <if test="infotpId != null" >
        INFOTP_ID,
      </if>
      <if test="dataType != null" >
        DATA_TYPE,
      </if>
      <if test="dataLen != null" >
        DATA_LEN,
      </if>
      <if test="dataScal != null" >
        DATA_SCAL,
      </if>
      <if test="infotpLnm != null" >
        INFOTP_LNM,
      </if>
      <if test="uppDmnId != null" >
        UPP_DMN_ID,
      </if>
      <if test="uppDmnLnm != null" >
        UPP_DMN_LNM,
      </if>
      <if test="mdlLnm != null" >
        MDL_LNM,
      </if>
      <if test="uppSubjLnm != null" >
        UPP_SUBJ_LNM,
      </if>
      <if test="subjId != null" >
        SUBJ_ID,
      </if>
      <if test="subjLnm != null" >
        SUBJ_LNM,
      </if>
      <if test="lstEntyId != null" >
        LST_ENTY_ID,
      </if>
      <if test="lstEntyPnm != null" >
        LST_ENTY_PNM,
      </if>
      <if test="lstEntyLnm != null" >
        LST_ENTY_LNM,
      </if>
      <if test="lstAttrId != null" >
        LST_ATTR_ID,
      </if>
      <if test="lstAttrPnm != null" >
        LST_ATTR_PNM,
      </if>
      <if test="lstAttrLnm != null" >
        LST_ATTR_LNM,
      </if>
      <if test="cdValTypCd != null" >
        CD_VAL_TYP_CD,
      </if>
      <if test="cdValIvwCd != null" >
        CD_VAL_IVW_CD,
      </if>
      <if test="dataFrm != null" >
        DATA_FRM,
      </if>
      <if test="sditmAutoCrtYn != null" >
        SDITM_AUTO_CRT_YN,
      </if>
      <if test="crgUserId != null" >
        CRG_USER_ID,
      </if>
      <if test="crgUserNm != null" >
        CRG_USER_NM,
      </if>
      <if test="dmnOrgDs != null" >
        DMN_ORG_DS,
      </if>
      <if test="objDescn != null" >
        OBJ_DESCN,
      </if>
        OBJ_VERS,
      <if test="regTypCd != null" >
        REG_TYP_CD,
      </if>
        FRS_RQST_DTM,
      <if test="frsRqstUserId != null" >
        FRS_RQST_USER_ID,
      </if>
        RQST_DTM,
      <if test="rqstUserId != null" >
        RQST_USER_ID,
      </if>
      <if test="fullPath != null" >
        FULL_PATH,
      </if>
      <if test="encYn != null" >
        ENC_YN,
      </if>
      <if test="dmnDscd != null" >
        DMN_DSCD,
      </if>
      <if test="dmnMaxVal != null" >
        DMN_MAX_VAL,
      </if>
      <if test="dmnMinVal != null" >
        DMN_MIN_VAL,
      </if>
      <if test="saveFrm != null" >
        SAVE_FRM,
      </if>
      <if test="exprsnFrm != null" >
        EXPRSN_FRM,
      </if>
      <if test="unit != null" >
        UNIT,
      </if>
      <if test="cdVal != null" >
        CD_VAL,
      </if>
      <if test="admnStndCd != null" >
        ADMN_STND_CD,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
        #{rqstNo,jdbcType=VARCHAR} ,
        #{rqstSno,jdbcType=DECIMAL} ,
<!--          (SELECT IFNULL(MAX(RQST_SNO), 0) + 1 FROM WAQ_DMN WHERE RQST_NO = #{rqstNo}) , -->
      <if test="dmnId != null" >
        #{dmnId,jdbcType=VARCHAR},
      </if>
      <if test="dmnLnm != null" >
        #{dmnLnm,jdbcType=VARCHAR},
      </if>
      <if test="dmnPnm != null" >
        UPPER(#{dmnPnm,jdbcType=VARCHAR}),
      </if>
      <if test="lnmCriDs != null" >
        #{lnmCriDs,jdbcType=VARCHAR},
      </if>
      <if test="pnmCriDs != null" >
        UPPER(#{pnmCriDs,jdbcType=VARCHAR}),
      </if>
      <if test="rqstDcd != null" >
        #{rqstDcd,jdbcType=VARCHAR},
      </if>
      <if test="rvwStsCd != null" >
        #{rvwStsCd,jdbcType=VARCHAR},
      </if>
      <if test="rvwConts != null" >
        #{rvwConts,jdbcType=VARCHAR},
      </if>
      <if test="vrfCd != null" >
        #{vrfCd,jdbcType=VARCHAR},
      </if>
      <if test="vrfRmk != null" >
        #{vrfRmk,jdbcType=VARCHAR},
      </if>
      <if test="dmngId != null" >
        #{dmngId,jdbcType=VARCHAR},
      </if>
      <if test="dmngLnm != null" >
        #{dmngLnm,jdbcType=VARCHAR},
      </if>
      <if test="infotpId != null" >
        #{infotpId,jdbcType=VARCHAR},
      </if>
      <if test="dataType != null" >
        UPPER(#{dataType,jdbcType=VARCHAR}),
      </if>
      <if test="dataLen != null" >
        #{dataLen,jdbcType=DECIMAL},
      </if>
      <if test="dataScal != null" >
        #{dataScal,jdbcType=DECIMAL},
      </if>
      <if test="infotpLnm != null" >
        #{infotpLnm,jdbcType=VARCHAR},
      </if>
      <if test="uppDmnId != null" >
        #{uppDmnId,jdbcType=VARCHAR},
      </if>
      <if test="uppDmnLnm != null" >
        #{uppDmnLnm,jdbcType=VARCHAR},
      </if>
      <if test="mdlLnm != null" >
        #{mdlLnm,jdbcType=VARCHAR},
      </if>
      <if test="uppSubjLnm != null" >
        #{uppSubjLnm,jdbcType=VARCHAR},
      </if>
      <if test="subjId != null" >
        #{subjId,jdbcType=VARCHAR},
      </if>
      <if test="subjLnm != null" >
        #{subjLnm,jdbcType=VARCHAR},
      </if>
      <if test="lstEntyId != null" >
        #{lstEntyId,jdbcType=VARCHAR},
      </if>
      <if test="lstEntyPnm != null" >
        #{lstEntyPnm,jdbcType=VARCHAR},
      </if>
      <if test="lstEntyLnm != null" >
        #{lstEntyLnm,jdbcType=VARCHAR},
      </if>
      <if test="lstAttrId != null" >
        #{lstAttrId,jdbcType=VARCHAR},
      </if>
      <if test="lstAttrPnm != null" >
        #{lstAttrPnm,jdbcType=VARCHAR},
      </if>
      <if test="lstAttrLnm != null" >
        #{lstAttrLnm,jdbcType=VARCHAR},
      </if>
      <if test="cdValTypCd != null" >
        #{cdValTypCd,jdbcType=VARCHAR},
      </if>
      <if test="cdValIvwCd != null" >
        #{cdValIvwCd,jdbcType=VARCHAR},
      </if>
      <if test="dataFrm != null" >
        #{dataFrm,jdbcType=VARCHAR},
      </if>
      <if test="sditmAutoCrtYn != null" >
        #{sditmAutoCrtYn,jdbcType=VARCHAR},
      </if>
      <if test="crgUserId != null" >
        #{crgUserId,jdbcType=VARCHAR},
      </if>
      <if test="crgUserNm != null" >
        #{crgUserNm,jdbcType=VARCHAR},
      </if>
      <if test="dmnOrgDs != null" >
        #{dmnOrgDs,jdbcType=VARCHAR},
      </if>
      <if test="objDescn != null" >
        #{objDescn,jdbcType=VARCHAR},
      </if>
       1 , 
      <if test="regTypCd != null" >
        #{regTypCd,jdbcType=VARCHAR},
      </if>
        now() , 
      <if test="frsRqstUserId != null" >
        #{frsRqstUserId,jdbcType=VARCHAR},
      </if>
       now(), 
      <if test="rqstUserId != null" >
        #{rqstUserId,jdbcType=VARCHAR},
      </if>
      <if test="fullPath != null" >
        #{fullPath,jdbcType=VARCHAR},
      </if>
      <if test="encYn != null" >
        #{encYn,jdbcType=VARCHAR},
      </if>
      <if test="dmnDscd != null" >
        #{dmnDscd,jdbcType=VARCHAR},
      </if>
      <if test="dmnMaxVal != null" >
        #{dmnMaxVal,jdbcType=VARCHAR},
      </if>
      <if test="dmnMinVal != null" >
        #{dmnMinVal,jdbcType=VARCHAR},
      </if>
      <if test="saveFrm != null" >
        #{saveFrm,jdbcType=VARCHAR},
      </if>
      <if test="exprsnFrm != null" >
        #{exprsnFrm,jdbcType=VARCHAR},
      </if>
      <if test="unit != null" >
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="cdVal != null" >
        #{cdVal,jdbcType=VARCHAR},
      </if>
      <if test="admnStndCd != null" >
        #{admnStndCd,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="kr.wise.dq.stnd.service.WaqDmn" >
    UPDATE WAQ_DMN
    <set >
      <if test="dmnId != null" >
        DMN_ID = #{dmnId,jdbcType=VARCHAR},
      </if>
      <if test="dmnLnm != null" >
        DMN_LNM = #{dmnLnm,jdbcType=VARCHAR},
      </if>
      <if test="dmnPnm != null" >
        DMN_PNM = UPPER(#{dmnPnm,jdbcType=VARCHAR}),
      </if>
      <if test="lnmCriDs != null" >
        LNM_CRI_DS = #{lnmCriDs,jdbcType=VARCHAR},
      </if>
      <if test="pnmCriDs != null" >
        PNM_CRI_DS = UPPER(#{pnmCriDs,jdbcType=VARCHAR}),
      </if>
      <if test="rqstDcd != null" >
        RQST_DCD = #{rqstDcd,jdbcType=VARCHAR},
      </if>
      <if test="dmngId != null" >
        DMNG_ID = #{dmngId,jdbcType=VARCHAR},
      </if>
      <if test="dmngLnm != null" >
        DMNG_LNM = #{dmngLnm,jdbcType=VARCHAR},
      </if>
      <if test="infotpId != null" >
        INFOTP_ID = #{infotpId,jdbcType=VARCHAR},
      </if>
      <if test="dataType != null" >
        DATA_TYPE = UPPER(#{dataType,jdbcType=VARCHAR}),
      </if>
      <if test="dataLen != null" >
        DATA_LEN = #{dataLen,jdbcType=DECIMAL},
      </if>
      <if test="dataScal != null" >
        DATA_SCAL = #{dataScal,jdbcType=DECIMAL},
      </if>
      <if test="infotpLnm != null" >
        INFOTP_LNM = #{infotpLnm,jdbcType=VARCHAR},
      </if>
      <if test="uppDmnId != null" >
        UPP_DMN_ID = #{uppDmnId,jdbcType=VARCHAR},
      </if>
      <if test="uppDmnLnm != null" >
        UPP_DMN_LNM = #{uppDmnLnm,jdbcType=VARCHAR},
      </if>
      <if test="mdlLnm != null" >
        MDL_LNM = #{mdlLnm,jdbcType=VARCHAR},
      </if>
      <if test="uppSubjLnm != null" >
        UPP_SUBJ_LNM = #{uppSubjLnm,jdbcType=VARCHAR},
      </if>
      <if test="subjId != null" >
        SUBJ_ID = #{subjId,jdbcType=VARCHAR},
      </if>
      <if test="subjLnm != null" >
        SUBJ_LNM = #{subjLnm,jdbcType=VARCHAR},
      </if>
      <if test="lstEntyId != null" >
        LST_ENTY_ID = #{lstEntyId,jdbcType=VARCHAR},
      </if>
      <if test="lstEntyPnm != null" >
        LST_ENTY_PNM = #{lstEntyPnm,jdbcType=VARCHAR},
      </if>
      <if test="lstEntyLnm != null" >
        LST_ENTY_LNM = #{lstEntyLnm,jdbcType=VARCHAR},
      </if>
      <if test="lstAttrId != null" >
        LST_ATTR_ID = #{lstAttrId,jdbcType=VARCHAR},
      </if>
      <if test="lstAttrPnm != null" >
        LST_ATTR_PNM = #{lstAttrPnm,jdbcType=VARCHAR},
      </if>
      <if test="lstAttrLnm != null" >
        LST_ATTR_LNM = #{lstAttrLnm,jdbcType=VARCHAR},
      </if>
      <if test="cdValTypCd != null" >
        CD_VAL_TYP_CD = #{cdValTypCd,jdbcType=VARCHAR},
      </if>
      <if test="cdValIvwCd != null" >
        CD_VAL_IVW_CD = #{cdValIvwCd,jdbcType=VARCHAR},
      </if>
      <if test="dataFrm != null" >
        DATA_FRM = #{dataFrm,jdbcType=VARCHAR},
      </if>
        SDITM_AUTO_CRT_YN = #{sditmAutoCrtYn,jdbcType=VARCHAR},
      <if test="crgUserId != null" >
        CRG_USER_ID = #{crgUserId,jdbcType=VARCHAR},
      </if>
      <if test="crgUserNm != null" >
        CRG_USER_NM = #{crgUserNm,jdbcType=VARCHAR},
      </if>
      <if test="dmnOrgDs != null" >
        DMN_ORG_DS = #{dmnOrgDs,jdbcType=VARCHAR},
      </if>
      <if test="objDescn != null" >
        OBJ_DESCN = #{objDescn,jdbcType=VARCHAR},
      </if>
        RQST_DTM = now(),
      <if test="rqstUserId != null" >
        RQST_USER_ID = #{rqstUserId,jdbcType=VARCHAR},
      </if>
      <if test="fullPath != null">
      	FULL_PATH = #{fullPath,jdbcType=VARCHAR}, 
      </if>
       <if test="encYn != null" >
        ENC_YN = #{encYn,jdbcType=VARCHAR},
      </if>
       <if test="dmnDscd != null" >
        DMN_DSCD = #{dmnDscd,jdbcType=VARCHAR},
      </if>
      <if test="dmnMaxVal != null" >
        DMN_MAX_VAL = #{dmnMaxVal,jdbcType=VARCHAR},
      </if>
      <if test="dmnMinVal != null" >
        DMN_MIN_VAL = #{dmnMinVal,jdbcType=VARCHAR},
      </if>
      <if test="saveFrm != null" >
        SAVE_FRM = #{saveFrm,jdbcType=VARCHAR},
      </if>
      <if test="exprsnFrm != null" >
        EXPRSN_FRM = #{exprsnFrm,jdbcType=VARCHAR},
      </if>
      <if test="unit != null" >
        UNIT = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="cdVal != null" >
        CD_VAL = #{cdVal,jdbcType=VARCHAR},
      </if>
      <if test="admnStndCd != null" >
        ADMN_STND_CD = #{admnStndCd,jdbcType=VARCHAR},
      </if>
    </set>
    where RQST_NO = #{rqstNo,jdbcType=VARCHAR}
      and RQST_SNO = #{rqstSno,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="kr.wise.dq.stnd.service.WaqDmn" >
    update WAQ_DMN
    set DMN_ID = #{dmnId,jdbcType=VARCHAR},
      DMN_LNM = #{dmnLnm,jdbcType=VARCHAR},
      DMN_PNM = UPPER(#{dmnPnm,jdbcType=VARCHAR}),
      LNM_CRI_DS = #{lnmCriDs,jdbcType=VARCHAR},
      PNM_CRI_DS = UPPER(#{pnmCriDs,jdbcType=VARCHAR}),
      RQST_DCD = #{rqstDcd,jdbcType=VARCHAR},
<!--        RVW_STS_CD = #{rvwStsCd,jdbcType=VARCHAR}, -->
<!--        RVW_CONTS = #{rvwConts,jdbcType=VARCHAR}, -->
<!--        VRF_CD = #{vrfCd,jdbcType=VARCHAR}, -->
<!--        VRF_RMK = #{vrfRmk,jdbcType=VARCHAR}, -->
      DMNG_ID = #{dmngId,jdbcType=VARCHAR},
      DMNG_LNM = #{dmngLnm,jdbcType=VARCHAR},
      INFOTP_ID = #{infotpId,jdbcType=VARCHAR},
      DATA_TYPE = UPPER(#{dataType,jdbcType=VARCHAR}),
      DATA_LEN = #{dataLen,jdbcType=DECIMAL},
      DATA_SCAL = #{dataScal,jdbcType=DECIMAL},
      INFOTP_LNM = #{infotpLnm,jdbcType=VARCHAR},
      UPP_DMN_ID = #{uppDmnId,jdbcType=VARCHAR},
      UPP_DMN_LNM = #{uppDmnLnm,jdbcType=VARCHAR},
      MDL_LNM = #{mdlLnm,jdbcType=VARCHAR},
      UPP_SUBJ_LNM = #{uppSubjLnm,jdbcType=VARCHAR},
      SUBJ_ID = #{subjId,jdbcType=VARCHAR},
      SUBJ_LNM = #{subjLnm,jdbcType=VARCHAR},
      LST_ENTY_ID = #{lstEntyId,jdbcType=VARCHAR},
      LST_ENTY_PNM = #{lstEntyPnm,jdbcType=VARCHAR},
      LST_ENTY_LNM = #{lstEntyLnm,jdbcType=VARCHAR},
      CD_VAL_TYP_CD = #{cdValTypCd,jdbcType=VARCHAR},
      CD_VAL_IVW_CD = #{cdValIvwCd,jdbcType=VARCHAR},
      DATA_FRM = #{dataFrm,jdbcType=VARCHAR},
      SDITM_AUTO_CRT_YN = #{sditmAutoCrtYn,jdbcType=VARCHAR},
      CRG_USER_ID = #{crgUserId,jdbcType=VARCHAR},
      CRG_USER_NM = #{crgUserNm,jdbcType=VARCHAR},
      DMN_ORG_DS = #{dmnOrgDs,jdbcType=VARCHAR},
      OBJ_DESCN = #{objDescn,jdbcType=VARCHAR},
<!--        OBJ_VERS = #{objVers,jdbcType=DECIMAL}, -->
<!--        REG_TYP_CD = #{regTypCd,jdbcType=VARCHAR}, -->
<!--        FRS_RQST_DTM = #{frsRqstDtm,jdbcType=TIMESTAMP}, -->
<!--        FRS_RQST_USER_ID = #{frsRqstUserId,jdbcType=VARCHAR}, -->
      RQST_DTM = #{rqstDtm,jdbcType=TIMESTAMP},
      RQST_USER_ID = #{rqstUserId,jdbcType=VARCHAR},
<!--        APRV_DTM = #{aprvDtm,jdbcType=TIMESTAMP}, -->
<!--        APRV_USER_ID = #{aprvUserId,jdbcType=VARCHAR} -->
      ENC_YN = #{encYn,jdbcType=VARCHAR},
      DMN_DSCD = #{dmnDscd,jdbcType=VARCHAR}
    where RQST_NO = #{rqstNo,jdbcType=VARCHAR}
      and RQST_SNO = #{rqstSno,jdbcType=DECIMAL}
  </update>
  
  <delete id="deleteByrqstSno" parameterType="kr.wise.dq.stnd.service.WaqDmn">
  	DELETE FROM WAQ_DMN
  	 WHERE RQST_NO  = #{rqstNo}
  	   AND RQST_SNO = #{rqstSno}
  </delete>
  
  
  <!--  검증로직 -->
  <update id="updateCheckInit" parameterType="java.lang.String" >
 <!-- 오라클 버전 
    UPDATE WAQ_DMN A
    SET (A.REG_TYP_CD, A.DMN_ID) = 
                       (SELECT CASE WHEN A.RQST_DCD = 'DD' THEN 'D' ELSE CASE WHEN MAX(B.DMN_ID ) IS NULL THEN 'C' ELSE 'U' END END  
                             , MAX(B.DMN_ID) AS DMN_ID
                          FROM WAM_DMN B
                         WHERE B.REG_TYP_CD IN ('C','U')
                           AND B.DMN_LNM = A.DMN_LNM
                           /* AND B.DMN_PNM = A.DMN_PNM */
                           )
       ,A.VRF_CD = '4'
    WHERE A.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
-->
UPDATE WAQ_DMN A 
   SET A.REG_TYP_CD = (
   				SELECT CASE WHEN A.RQST_DCD = 'DD' THEN 'D' ELSE CASE WHEN MAX(B.DMN_ID ) IS NULL THEN 'C' ELSE 'U' END END
   				FROM WAM_DMN B
   				WHERE B.REG_TYP_CD IN ('C','U')
                  AND B.DMN_LNM = A.DMN_LNM
<!--                   AND B.DMN_PNM = A.DMN_PNM -->
   				) 
   	 , A.DMN_ID = (
                    SELECT DMN_ID
                     FROM WAM_DMN B
                         WHERE B.REG_TYP_CD IN ('C','U')
                           AND B.DMN_LNM = A.DMN_LNM
<!--                            AND B.DMN_PNM = A.DMN_PNM -->
                   ) 
     , A.VRF_CD = '4'
    WHERE A.RQST_NO = #{rqstNo,jdbcType=VARCHAR}

  </update>
  
  <insert id="checkRequestDmn" parameterType="map">
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
	-- 검증쿼리 : 등록요청 중인 표준도메인 존재....(DM021)
	AND EXISTS (
    		SELECT 1 FROM WAQ_MSTR E
             INNER JOIN WAQ_DMN D
             	ON E.RQST_NO = D.RQST_NO
             WHERE E.RQST_NO != #{rqstNo}
               AND E.RQST_STEP_CD = 'Q'
               AND A.DMN_LNM = D.DMN_LNM
               --  AND A.DMN_PNM = D.DMN_PNM
			   AND IFNULL(D.RVW_STS_CD, 0) != '2'
               ) 
  </insert>
  
  <insert id="checkDupDmn" parameterType="map">
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
  	-- 검증쿼리
    AND EXISTS (SELECT 1
             FROM WAQ_DMN D
             WHERE A.RQST_NO = D.RQST_NO
               AND A.DMN_LNM = D.DMN_LNM
               --  AND A.DMN_PNM = D.DMN_PNM
               AND A.RQST_SNO != D.RQST_SNO)
  </insert>
  
  <insert id="checkNotExistDmn" parameterType="map">
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
      -- 검증쿼리
      AND A.RQST_DCD = 'DD'
      AND NOT EXISTS (SELECT 1
                  FROM WAM_DMN D
                  WHERE A.DMN_LNM = D.DMN_LNM
                  --   AND A.DMN_PNM = D.DMN_PNM
                    AND D.REG_TYP_CD IN ('C', 'U'))  
  </insert>
  
  <insert id="checkLnmSymn" parameterType="map">
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
      -- 검증쿼리
      AND A.RQST_DCD = 'CU'
      AND EXISTS (SELECT 1
                    FROM WAM_SYMN D
                   WHERE A.DMN_LNM = IFNULL(D.SYMN_LNM,'_')
<!--                      AND A.DMN_PNM = IFNULL(D.SYMN_PNM,'_') -->
                     AND D.REG_TYP_CD IN ('C','U')  
                 )
  </insert>



  <insert id="checkEngUseItem" parameterType="map">
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
      -- 검증쿼리
      AND A.REG_TYP_CD = 'U'
      AND EXISTS (SELECT 1
                    FROM WAM_DMN D
                   WHERE A.DMN_LNM  = D.DMN_LNM
<!--                      AND A.DMN_PNM != D.DMN_PNM -->
                     AND D.REG_TYP_CD IN ('C','U')
                 )
      AND EXISTS (SELECT 1
                    FROM WAM_DMN D
                         INNER JOIN WAM_SDITM E
                            ON D.DMN_ID = E.DMN_ID
                           AND E.REG_TYP_CD IN ('C','U')
                  WHERE D.DMN_LNM = A.DMN_LNM  
                    AND D.REG_TYP_CD IN ('C','U')
                    AND NOT EXISTS (SELECT 1 
                                      FROM WAQ_SDITM F
                                     WHERE F.SDITM_LNM = E.SDITM_LNM 
                                       AND F.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
                                    )
                 )
  </insert>


  <insert id="checkUseDmn" parameterType="map">
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
      -- 검증쿼리
      AND A.RQST_DCD = 'DD'
      AND EXISTS (SELECT 1
                  FROM WAM_DMN D
                  INNER JOIN WAM_SDITM E
                     ON D.DMN_ID = E.DMN_ID
                    AND E.REG_TYP_CD IN ('C','U')
                  WHERE A.DMN_LNM = D.DMN_LNM
                    AND D.REG_TYP_CD IN ('C','U')
                    AND NOT EXISTS (SELECT 1 FROM WAQ_SDITM F
                                    WHERE E.SDITM_LNM = F.SDITM_LNM
                                      AND F.RQST_NO = #{rqstNo,jdbcType=VARCHAR})
                  UNION ALL
                  SELECT 1
                  FROM WAQ_SDITM D
                  WHERE A.DMN_LNM = D.DMN_LNM
                    AND D.RQST_DCD = 'CU'
                    AND D.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
                  )
  </insert>
  <insert id="ckeckCdDmnInfo" parameterType="map">
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
      -- 검증쿼리
      AND A.RQST_DCD = 'CU'
      AND EXISTS (SELECT 1
		          FROM WAA_DMNG D
		          WHERE A.DMNG_LNM = D.DMNG_LNM
		            AND D.EXP_DTM = DATE_FORMAT( '9999-12-31', '%Y-%m-%d')
				    AND D.CD_DMN_YN = 'Y')
      AND (A.CD_VAL_TYP_CD IS NULL
        OR A.CD_VAL_IVW_CD IS NULL)
  </insert>
  
  <insert id="ckeckCdDmng" parameterType="map">
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
      -- 검증쿼리
      AND A.RQST_DCD = 'CU'
            AND NOT EXISTS (SELECT 1
		          FROM WAA_DMNG D
		          WHERE A.DMNG_LNM = D.DMNG_LNM
                    AND D.EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d')              
				    AND D.FULL_PATH LIKE '코드%')
      AND A.DMN_LNM LIKE '%코드'
  </insert>
  
  <insert id="ckeckLstCdDmnInfo" parameterType="map">
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
      -- 검증쿼리
      AND A.RQST_DCD = 'CU'
      AND A.CD_VAL_TYP_CD = 'L'
      AND (A.LST_ENTY_PNM IS NULL
       AND A.LST_ENTY_LNM IS NULL
        )
  </insert>
  <insert id="checkExistLstEnty" parameterType="map">
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
      -- 검증쿼리
      AND A.RQST_DCD = 'CU'
      AND A.LST_ENTY_PNM IS NOT NULL
      AND A.LST_ENTY_LNM IS NOT NULL
      AND NOT EXISTS (SELECT 1 FROM WAM_PDM_TBL D
                      WHERE A.LST_ENTY_PNM = D.PDM_TBL_PNM
                        AND A.LST_ENTY_PNM = D.PDM_TBL_PNM
                        AND D.REG_TYP_CD IN ('C', 'U') )
  </insert>
  <insert id="checkExistLstAttr" parameterType="map">
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
      -- 검증쿼리
      AND A.RQST_DCD = 'CU'
      AND A.LST_ENTY_PNM IS NOT NULL
      AND A.LST_ENTY_LNM IS NOT NULL
      AND A.LST_ATTR_PNM IS NOT NULL
      AND A.LST_ATTR_LNM IS NOT NULL
      AND NOT EXISTS (SELECT 1 FROM WAM_PDM_COL E
      				   INNER JOIN WAM_PDM_TBL D
      				      ON E.PDM_TBL_ID = D.PDM_TBL_ID
      				     AND D.REG_TYP_CD IN ('C', 'U')
                      WHERE A.LST_ENTY_PNM = D.PDM_TBL_PNM
                        AND A.LST_ENTY_LNM = D.PDM_TBL_LNM
                        AND A.LST_ATTR_PNM = E.PDM_COL_PNM
                        AND A.LST_ATTR_LNM = E.PDM_COL_LNM
                        AND D.REG_TYP_CD IN ('C', 'U') )
  </insert>
  <insert id="checkHasCdValNotCdDmn" parameterType="map">
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
      -- 검증쿼리
      AND A.RQST_DCD = 'CU'
      AND EXISTS (SELECT 1
		          FROM WAA_DMNG D
		          WHERE A.DMNG_LNM = D.DMNG_LNM
		            AND D.EXP_DTM = DATE_FORMAT( '9999-12-31', '%Y-%m-%d')
				    AND D.CD_DMN_YN = 'N')
      AND EXISTS (SELECT 1
                  FROM WAQ_CD_VAL D
                  WHERE A.RQST_NO = D.RQST_NO
                    AND A.RQST_SNO = D.RQST_SNO
                    AND D.RQST_DCD = 'CU'
                  UNION ALL
                  SELECT 1
                  FROM WAM_DMN D
                  INNER JOIN WAM_CD_VAL E
                     ON E.DMN_ID = D.DMN_ID
                    AND E.REG_TYP_CD IN ('C', 'U')
                  WHERE A.DMN_LNM = D.DMN_LNM
                    AND D.REG_TYP_CD IN ('C', 'U')
                    AND NOT EXISTS (SELECT 1 FROM WAQ_CD_VAL F
                                    WHERE F.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
                                      AND D.DMN_LNM = F.DMN_LNM
                                      AND E.CD_VAL = F.CD_VAL
                                   )
                  )
  </insert>
  <insert id="checkCdValDmnInfoLeng" parameterType="map">
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
      -- 검증쿼리
      <![CDATA[ 
      AND A.RQST_DCD = 'CU'
      AND EXISTS (SELECT 1
                  FROM WAQ_CD_VAL D
                  WHERE A.RQST_NO = D.RQST_NO
                    AND A.RQST_SNO = D.RQST_SNO
                    AND D.RQST_DCD = 'CU'
                    AND A.DATA_LEN < LENGTH(D.CD_VAL)
                  UNION ALL
                  SELECT 1
                  FROM WAM_DMN D
                  INNER JOIN WAM_CD_VAL E
                     ON E.DMN_ID = D.DMN_ID
                    AND E.REG_TYP_CD IN ('C', 'U')
                  WHERE A.DMN_LNM = D.DMN_LNM
                    AND D.REG_TYP_CD IN ('C', 'U')
                    AND A.DATA_LEN < LENGTH(E.CD_VAL) 
                    AND NOT EXISTS (SELECT 1 FROM WAQ_CD_VAL F
                                    WHERE F.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
                                      AND D.DMN_LNM = F.DMN_LNM
                                      AND E.CD_VAL = F.CD_VAL
                                   )
                  )
      ]]>
  </insert>
  <insert id="checkSubj" parameterType="map">
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
      -- 검증쿼리
      AND A.RQST_DCD = 'CU'
      AND NOT EXISTS (SELECT 1
		          FROM WAA_SUBJ D
		          WHERE A.FULL_PATH = D.FULL_PATH
		            AND D.EXP_DTM = DATE_FORMAT( '9999-12-31', '%Y-%m-%d')
				    AND D.REG_TYP_CD IN ('C', 'U'))
      AND A.FULL_PATH IS NOT NULL
  </insert>
  <insert id="checkExistStwd" parameterType="map">
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
      -- 검증쿼리
      AND A.RQST_DCD = 'CU'
      AND EXISTS (SELECT 1
		          FROM WAQ_STWD_CNFG D
		          WHERE D.BIZ_DTL_CD = #{bizDtlCd}
		            AND A.RQST_NO = D.RQST_NO
		            AND A.RQST_SNO = D.RQST_SNO
		            AND NOT EXISTS (SELECT 1 FROM WAQ_STWD E
		                            WHERE D.STWD_LNM = E.STWD_LNM
		                              AND D.STWD_PNM = E.STWD_PNM
		                              AND E.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
		                              AND E.RQST_DCD = 'CU'
		                              AND E.VRF_CD = '1'
		                            UNION ALL
		                            SELECT 1 FROM WAM_STWD E
		                            WHERE D.STWD_LNM = E.STWD_LNM
		                              AND D.STWD_PNM = E.STWD_PNM
		                              AND E.REG_TYP_CD IN ('C', 'U')
		                              AND NOT EXISTS (SELECT 1 FROM WAQ_STWD F
		                                              WHERE E.STWD_LNM = F.STWD_LNM
		                                                AND E.STWD_PNM = F.STWD_PNM
		                                                AND F.VRF_CD = '1'
		                                                AND F.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
		                                              )
		                            )
		         )
  </insert>
  <insert id="checkInfoType" parameterType="map">
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
      -- 검증쿼리
      AND A.RQST_DCD = 'CU'
      AND NOT EXISTS (SELECT 1
		              FROM WAA_DMNG D
		              INNER JOIN WAA_DMNG_INFOTP_MAP E
		                 ON D.DMNG_ID = E.DMNG_ID
				        AND E.EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d')
				      INNER JOIN WAA_INFO_TYPE F
				         ON E.INFOTP_ID = F.INFOTP_ID
				        AND F.EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d')
				      WHERE A.DMNG_LNM = D.DMNG_LNM
				        AND D.EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d')
				        AND A.INFOTP_LNM = F.INFOTP_LNM
		             )
  </insert>
  <insert id="checkNotExistPrntDmn" parameterType="map">
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
      -- 검증쿼리
      AND A.RQST_DCD = 'CU'
      AND A.UPP_DMN_LNM IS NOT NULL
      AND NOT EXISTS (SELECT 1 FROM WAQ_DMN D
                      WHERE A.UPP_DMN_LNM = D.DMN_LNM
                        AND D.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
                        AND D.RQST_DCD = 'CU'
                      UNION ALL
                      SELECT 1 FROM WAM_DMN D
                        -- INNER JOIN WAM_DMN E
                        --    ON D.DMN_ID = E.UPP_DMN_ID
                        --   AND E.REG_TYP_CD IN ('C', 'U')
                      WHERE A.UPP_DMN_LNM = D.DMN_LNM
                        AND D.REG_TYP_CD IN ('C', 'U')
                        AND NOT EXISTS (SELECT 1 FROM WAQ_DMN F
                                        WHERE D.DMN_LNM = F.DMN_LNM
                                          AND F.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
                                        )
                     )
  </insert>
  <insert id="checkChldDmnExist" parameterType="map">
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
      -- 검증쿼리
      AND A.RQST_DCD = 'DD'
      AND EXISTS (SELECT 1 FROM WAQ_DMN D
                  WHERE A.DMN_LNM = D.UPP_DMN_LNM
                    AND D.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
                    AND D.RQST_DCD = 'CU'
                  UNION ALL
                  SELECT 1 FROM WAM_DMN D
                    INNER JOIN WAM_DMN E
                       ON D.DMN_ID = E.UPP_DMN_ID
                      AND E.REG_TYP_CD IN ('C', 'U')
                  WHERE A.DMN_LNM = D.DMN_LNM
                    AND D.REG_TYP_CD IN ('C', 'U')
                    AND NOT EXISTS (SELECT 1 FROM WAQ_DMN F
                                    WHERE E.DMN_LNM = F.DMN_LNM
                                      AND F.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
                                    )
                 )
  </insert>
  <insert id="checkDmnStwdAsm" parameterType="map">
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
      -- 검증쿼리
      AND A.RQST_DCD = 'CU'
      AND A.DMN_LNM != REPLACE(A.LNM_CRI_DS,';','') 
  </insert>
  <insert id="checkDupDmnPnm" parameterType="map">
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
      -- 검증쿼리
      AND A.RQST_DCD = 'CU'
      AND EXISTS (SELECT 1
		          FROM WAA_DMNG D
		          WHERE A.DMNG_LNM = D.DMNG_LNM
		            AND D.EXP_DTM = DATE_FORMAT( '9999-12-31', '%Y-%m-%d')
				    AND D.CD_DMN_YN = 'Y')
      AND EXISTS (SELECT 1
                  FROM WAQ_DMN D
                  WHERE A.RQST_NO = D.RQST_NO
                    AND A.DMN_LNM != D.DMN_LNM
<!--                     AND A.DMN_PNM = D.DMN_PNM -->
                    AND D.RQST_DCD = 'CU'
                  UNION ALL
                  SELECT 1 FROM WAM_DMN D
                  WHERE A.DMN_LNM != D.DMN_LNM
                    AND A.DMN_PNM = D.DMN_PNM
                    AND D.REG_TYP_CD IN ('C', 'U')
                    AND NOT EXISTS (SELECT 1 FROM WAQ_DMN F
                                    WHERE D.DMN_LNM = F.DMN_LNM
                                      AND F.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
                                   )
                 )
  </insert>
  <insert id="checkDmnPnmMaxLen" parameterType="map">
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
      -- 검증쿼리
      <![CDATA[
      AND A.RQST_DCD = 'CU'
      AND CHARACTER_LENGTH(A.DMN_PNM) > 30
      ]]>
  </insert>
  <insert id="checkDmnLnmMaxLen" parameterType="map">
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
      <![CDATA[
      -- 검증쿼리
      AND A.RQST_DCD = 'CU'
      AND LENGTH(A.DMN_LNM) > 30
      ]]>
  </insert>
  <insert id="checkDmnPnmStrNum" parameterType="map">
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
  	  -- 검증쿼리
      AND A.RQST_DCD = 'CU'
      AND CASE WHEN SUBSTR(IFNULL(A.DMN_PNM,'N'),1,1) BETWEEN '0' AND '9' THEN 'N' ELSE 'C' END = 'N'
  </insert>
   <insert id="checkCodeLen" parameterType="map">
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
  	  -- 검증쿼리
      AND A.RQST_DCD = 'CU'
      AND EXISTS (SELECT 1 FROM WAQ_DMN Z
                  WHERE Z.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
                  AND Z.DATA_LEN != 15
                  AND Z.CD_VAL_TYP_CD ='O'
                  UNION ALL
                  SELECT 1 FROM WAQ_DMN Z
                  WHERE Z.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
                  AND Z.DATA_LEN != 25
                  AND Z.CD_VAL_TYP_CD ='C'
      )
      
  </insert>
     <insert id="checkExistsDscd" parameterType="map">
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
  	  -- 검증쿼리 (DM032) 단순, 복잡코드일 경우 대분류코드 필수
      AND A.RQST_DCD = 'CU'
      AND A.CD_VAL_TYP_CD IN ('O','C')
      AND A.DMN_DSCD IS NULL
      
  </insert>
  
    <insert id="checkExistsDscdAlready" parameterType="map">
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
  	  -- 검증쿼리 (DM033) 대분류코드가 기존재할 경우 입력할 수 없음
      AND A.RQST_DCD = 'CU'
      AND A.REG_TYP_CD = 'C'
      AND A.CD_VAL_TYP_CD IN ('O','C')
      AND EXISTS (SELECT DMN_DSCD 
                  FROM WAM_DMN D
                  WHERE D.DMN_DSCD IN (A.DMN_DSCD)
                  AND D.REG_TYP_CD IN ('C', 'U')
                  AND D.DMN_PNM !=A.DMN_PNM
                  UNION ALL
                  SELECT DMN_DSCD 
                  FROM WAQ_DMN D
                  WHERE D.RQST_NO = #{rqstNo,jdbcType=VARCHAR} 
                  AND D.DMN_DSCD IN (A.DMN_DSCD)
                  AND D.REG_TYP_CD IN ('C', 'U')
                  AND D.DMN_PNM !=A.DMN_PNM
                  ) 
  </insert>
      <insert id="checkExistsWaqDscdAlready" parameterType="map">
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
  	  -- 검증쿼리 (DM036) 대분류코드가 등록요청중일 경우 체크
      AND A.RQST_DCD = 'CU'
      AND A.CD_VAL_TYP_CD IN ('O','C')
      AND EXISTS (  SELECT DMN_DSCD 
                  FROM WAQ_DMN D
                  INNER JOIN WAQ_MSTR F
                  ON D.RQST_NO = F.RQST_NO
                  AND F.RQST_STEP_CD = 'Q'
                  WHERE D.DMN_DSCD IN A.DMN_DSCD
                  AND F.RQST_STEP_CD = 'Q'
                  AND D.REG_TYP_CD IN ('C', 'U')
                  ) 
  </insert>
  <insert id="checkDscdLength" parameterType="map">
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
  	  -- 검증쿼리 (DM034) 대분류코드의 길이는 4
      AND A.RQST_DCD = 'CU'
      AND A.CD_VAL_TYP_CD IN ('O','C')
      AND LENGTH(A.DMN_DSCD) != 4
  </insert>
  
   <insert id="checkDscdSubjMapping" parameterType="map">
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
  	  -- 검증쿼리 (DM035) 대분류코드(주제영역 물리명 + 2자리)
      AND A.RQST_DCD = 'CU'
      AND A.CD_VAL_TYP_CD IN ('O','C')
      AND SUBSTR(A.DMN_DSCD,1,2) != 'EL'
      AND SUBSTR(A.DMN_DSCD,1,2) NOT IN (SELECT SUBJ_PNM
                                         FROM WAA_SUBJ
                                         WHERE REG_TYP_CD IN ('C', 'U')
                                         AND EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d')
      )
  </insert>
  <!--  승인/반려 업데이트 -->
  <update id="updatervwStsCd" parameterType="kr.wise.dq.stnd.service.WaqDmn" >
  	UPDATE WAQ_DMN
  	<set>
  	    RVW_STS_CD 	= 1 , 
  		RVW_CONTS 	= #{rvwConts} , 
  		APRV_DTM	= now() ,
  		APRV_USER_ID = #{aprvUserId} ,
  	</set>
    WHERE RQST_NO = #{rqstNo,jdbcType=VARCHAR}
      AND RQST_SNO = #{rqstSno,jdbcType=DECIMAL}
      AND VRF_CD = '1'
      AND IFNULL(RVW_STS_CD, '_') != '2'
  </update>
  
  <update id="updatervwStsCdRejectSwtd" parameterType="string" >
  	UPDATE WAQ_DMN A
  	<set>
  	    A.RVW_STS_CD 	= '2' 
  	    ,A.RVW_CONTS	= '포함표준단어반려'
  	</set>
    WHERE A.rqst_no = #{rqstNo}
      AND IFNULL(RVW_STS_CD,99) != '2'
		AND EXISTS (SELECT 1 FROM WAQ_STWD S
		              INNER JOIN WAQ_STWD_CNFG C
		               on C.STWD_LNM = S.STWD_LNM 
		               and C.BIZ_DTL_CD = 'DMN'
		             WHERE S.RQST_NO = A.RQST_NO
		               AND S.RVW_STS_CD = '2'
		               and A.RQST_NO = C.RQST_NO
		               AND A.RQST_SNO = C.RQST_SNO
		               )
  </update>
  <!--  적재 SQL -->
  <!--    적재쿼리 
    selectWaqC
    
	int updateWaqCUD(@Param("rqstNo") String rqstNo);
	int updateWaqC(@Param("rqstNo") String rqstNo);
	int deleteWAM(@Param("rqstNo") String rqstNo);
	int insertWAM(@Param("rqstNo") String rqstNo);
	int updateWAH(@Param("rqstNo") String rqstNo);
	int insertWAH(@Param("rqstNo") String rqstNo);
-->

   <sql id="wam_col">
	, DMN_LNM, DMN_PNM, LNM_CRI_DS, DMNG_ID, INFOTP_ID, UPP_DMN_ID, SUBJ_ID, LST_ENTY_ID, LST_ENTY_PNM, LST_ENTY_LNM, LST_ATTR_ID, LST_ATTR_PNM, LST_ATTR_LNM, CD_VAL_TYP_CD, CD_VAL_IVW_CD
	, SDITM_AUTO_CRT_YN, DATA_FRM, CRG_USER_ID, DMN_ORG_DS
	, RQST_NO , RQST_SNO, OBJ_DESCN, OBJ_VERS, REG_TYP_CD, FRS_RQST_DTM, FRS_RQST_USER_ID, RQST_DTM, RQST_USER_ID, APRV_DTM, APRV_USER_ID
	, FULL_PATH
	, PNM_CRI_DS
	, ENC_YN,DMN_DSCD,TRANS_YN
	, DMN_MAX_VAL
	, DMN_MIN_VAL
	, DATA_TYPE
	, DATA_LEN
	, DATA_SCAL
	, INFOTP_LNM
	, DMNG_LNM
   </sql>
   
  <select id="selectWaqC" parameterType="map" resultMap="BaseResultMap">
   	SELECT * FROM WAQ_DMN
   	WHERE RQST_NO = #{rqstNo}
   	  AND RVW_STS_CD = '1'  -- 승인
   	  AND REG_TYP_CD = 'C'
   </select>
   
  <update id="updateidByKey" parameterType="kr.wise.dq.stnd.service.WaqDmn" >
  	UPDATE WAQ_DMN SET DMN_ID = #{dmnId,jdbcType=VARCHAR}
  	 WHERE RQST_NO = #{rqstNo,jdbcType=VARCHAR}
       AND RQST_SNO = #{rqstSno,jdbcType=DECIMAL}
  </update>
  
  <update id="updateWaqCUD" parameterType="map">
   	-- WAQ ID, VERS 등을 업데이트...
	UPDATE WAQ_DMN A, WAM_DMN B
	SET A.DMN_ID = B.DMN_ID
	, A.OBJ_VERS = IFNULL(B.OBJ_VERS, 0) + 1
	, A.FRS_RQST_DTM = B.FRS_RQST_DTM
	, A.FRS_RQST_USER_ID = B.FRS_RQST_USER_ID
	WHERE A.RQST_NO = #{rqstNo}
		AND A.RVW_STS_CD = '1'  -- 승인
		AND EXISTS (
		SELECT 1
		  FROM WAM_DMN B
		 WHERE B.DMN_LNM = A.DMN_LNM
	      --  AND B.DMN_PNM = A.DMN_PNM
	       AND B.REG_TYP_CD IN ('C', 'U')
	)
	AND B.DMN_LNM = A.DMN_LNM
	AND B.REG_TYP_CD IN ('C', 'U')
   </update>

   <update id="updateWaqC" parameterType="map">
   	
   </update>
   
   <update id="updateWaqId" parameterType="string">
      UPDATE WAQ_DMN X , (SELECT 
         MAX(B.DMNG_ID) AS DMNG_ID , MAX(C.INFOTP_ID) AS INFOTP_ID, MAX(D.SUBJ_ID) AS SUBJ_ID
         , MAX(E.PDM_TBL_ID) AS LST_ENTY_ID, MAX(F.PDM_COL_ID) AS LST_ATTR_ID
         FROM WAQ_DMN X, WAQ_DMN A
        LEFT OUTER JOIN WAA_DMNG B
         ON A.DMNG_LNM = B.DMNG_LNM
         AND B.EXP_DTM = DATE_FORMAT( '9999-12-31', '%Y-%m-%d')
        JOIN (
                 SELECT CASE WHEN BSC_LVL IS NULL THEN 0 ELSE BSC_LVL-1 END  AS BSC_LVL
                   FROM WAA_BSC_LVL
                  WHERE  EXP_DTM = DATE_FORMAT( '9999-12-31', '%Y-%m-%d')
                    AND REG_TYP_CD IN ('C', 'U')
                    AND BSC_ID = 'DMNG'
           ) L
            ON B.DMNG_LVL = L.BSC_LVL
        LEFT OUTER JOIN WAA_INFO_TYPE C
         ON A.INFOTP_LNM = C.INFOTP_LNM
         AND C.EXP_DTM = DATE_FORMAT( '9999-12-31', '%Y-%m-%d')
        LEFT OUTER JOIN WAA_SUBJ D
         ON A.FULL_PATH = D.FULL_PATH
         AND D.EXP_DTM = DATE_FORMAT( '9999-12-31', '%Y-%m-%d')
         AND D.REG_TYP_CD IN ('C', 'U')
         LEFT OUTER JOIN WAM_PDM_TBL E
           ON A.LST_ENTY_PNM = E.PDM_TBL_PNM
          AND A.LST_ENTY_LNM = E.PDM_TBL_LNM
         LEFT OUTER JOIN WAM_PDM_COL F
           ON A.LST_ATTR_PNM = F.PDM_COL_PNM
          AND A.LST_ATTR_LNM = F.PDM_COL_LNM
      WHERE A.RQST_NO = X.RQST_NO
         AND A.RQST_SNO = X.RQST_SNO
       AND X.RQST_NO = #{rqstNo}
       AND X.RVW_STS_CD = '1'
   ) A
   SET X.DMNG_ID = A.DMNG_ID, X.INFOTP_ID = A.INFOTP_ID, X.SUBJ_ID = A.SUBJ_ID, X.LST_ENTY_ID = A.LST_ENTY_ID, X.LST_ATTR_ID = A.LST_ATTR_ID
   WHERE X.RQST_NO = #{rqstNo}
     AND X.RVW_STS_CD = '1'
   </update>
   
   <update id="updateUppDmnId" parameterType="string">
   	UPDATE WAQ_DMN X SET UPP_DMN_ID = (
		SELECT MAX(DMN_ID) from (
			SELECT DMN_ID, DMN_LNM FROM WAM_DMN A
			 WHERE 1=1
		       AND NOT EXISTS ( SELECT 1 FROM WAQ_DMN B 
								WHERE A.DMN_LNM = B.DMN_LNM 
								  --  AND A.DMN_PNM = B.DMN_PNM 
								  AND B.RVW_STS_CD = '1'
								  AND B.REG_TYP_CD IN ('C', 'U')
							      AND B.RQST_NO = #{rqstNo})
		    UNION ALL
			SELECT DMN_ID, DMN_LNM FROM WAQ_DMN A
		     WHERE 1=1 
		       AND A.RVW_STS_CD = '1'
			   AND A.REG_TYP_CD IN ('C', 'U')
			   AND A.RQST_NO = #{rqstNo}
		) A
		WHERE A.DMN_LNM = X.UPP_DMN_LNM
	)
	WHERE RQST_NO = #{rqstNo}
	  AND UPP_DMN_LNM IS NOT NULL
	  AND RVW_STS_CD = '1'
   </update>

   <update id="checkNotChgData" parameterType="map">
   <!--  <include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>  -->
   
   <include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.updateVrfNotChg"/>
-- 검증쿼리
      AND A.REG_TYP_CD = 'U'
      AND EXISTS (SELECT 1
            FROM WAM_DMN D
<!--                  INNER JOIN WAA_DMNG E
                    ON D.DMNG_ID = E.DMNG_ID
                   AND E.EXP_DTM = DATE_FORMAT( '9999-12-31', '%Y-%m-%d')
                 INNER JOIN WAA_INFO_TYPE F
                    ON D.INFOTP_ID = F.INFOTP_ID
                   AND F.EXP_DTM = DATE_FORMAT( '9999-12-31', '%Y-%m-%d')
                 LEFT JOIN WAM_DMN G
                   ON D.UPP_DMN_ID = G.DMN_ID
                  AND G.REG_TYP_CD IN ('C', 'U')
                 LEFT JOIN WAA_SUBJ H
                    ON D.SUBJ_ID = H.SUBJ_ID
                   AND H.EXP_DTM = DATE_FORMAT( '9999-12-31', '%Y-%m-%d')
                   AND H.REG_TYP_CD IN ('C', 'U') -->
            WHERE A.DMN_LNM = D.DMN_LNM
<!-- 			  AND IFNULL(A.DMN_PNM      , '_') = IFNULL(D.DMN_PNM      , '_') -->
<!-- 			  AND IFNULL(A.DMNG_LNM     , '_') = IFNULL(E.DMNG_LNM     , '_') -->
<!-- 			  AND IFNULL(A.INFOTP_LNM   , '_') = IFNULL(F.INFOTP_LNM   , '_') -->
			  AND IFNULL(A.DATA_TYPE    , '_') = IFNULL(D.DATA_TYPE    , '_')
			  AND IFNULL(A.DATA_LEN     , 99999) = IFNULL(D.DATA_LEN     , 99999)
			  AND IFNULL(A.DATA_SCAL    , 99999) = IFNULL(D.DATA_SCAL    , 99999)
			  AND IFNULL(A.LNM_CRI_DS   , '_') = IFNULL(D.LNM_CRI_DS   , '_')
			  AND IFNULL(A.PNM_CRI_DS   , '_') = IFNULL(D.PNM_CRI_DS   , '_')
<!-- 			  AND IFNULL(A.UPP_DMN_LNM  , '_') = IFNULL(G.DMN_LNM  , '_') -->
			  AND IFNULL(A.LST_ENTY_PNM , '_') = IFNULL(D.LST_ENTY_PNM , '_')
			  AND IFNULL(A.LST_ENTY_LNM , '_') = IFNULL(D.LST_ENTY_LNM , '_')
			  AND IFNULL(A.LST_ATTR_PNM , '_') = IFNULL(D.LST_ATTR_PNM , '_')
			  AND IFNULL(A.LST_ATTR_LNM , '_') = IFNULL(D.LST_ATTR_LNM , '_')
			  AND IFNULL(A.CD_VAL_TYP_CD, '_') = IFNULL(D.CD_VAL_TYP_CD, '_')
			  AND IFNULL(A.CD_VAL_IVW_CD, '_') = IFNULL(D.CD_VAL_IVW_CD, '_')			  
			  AND IFNULL(A.DATA_FRM     , '_') = IFNULL(D.DATA_FRM     , '_')
			  AND IFNULL(A.CRG_USER_ID  , '_') = IFNULL(D.CRG_USER_ID  , '_')
			  AND IFNULL(A.DMN_ORG_DS   , '_') = IFNULL(D.DMN_ORG_DS   , '_')
			  AND IFNULL(A.OBJ_DESCN    , '_') = IFNULL(D.OBJ_DESCN    , '_')
			  AND IFNULL(A.ENC_YN    , '_')      = IFNULL(D.ENC_YN    , '_')
			  AND IFNULL(A.DMN_DSCD    , '_')    = IFNULL(D.DMN_DSCD    , '_')
			  <!-- AND IFNULL(A.DMN_MIN_VAL    , '_') = IFNULL(D.DMN_MIN_VAL    , '_')
			  AND IFNULL(A.DMN_MAX_VAL    , '_') = IFNULL(D.DMN_MAX_VAL    , '_') -->
              AND D.REG_TYP_CD IN ('C','U')
                  )
<!--       AND NOT EXISTS (SELECT 1 
                        FROM WAQ_CD_VAL D
                       WHERE D.RQST_NO  = A.RQST_NO
                         AND D.RQST_SNO = A.RQST_SNO
                         AND D.VRF_CD = '1'
                     )  -->
   </update>
   

   <delete id="deleteWAM" parameterType="map">
    -- WAM 삭제 (등록유형코드가REG_TYP_CD 변경, 삭제일 경우)
	DELETE FROM WAM_DMN USING WAM_DMN
	WHERE EXISTS (
	    SELECT 1 FROM WAQ_DMN B
	     WHERE B.RQST_NO = #{rqstNo}
	       AND B.RVW_STS_CD = '1'
	       AND B.DMN_LNM = WAM_DMN.DMN_LNM
<!-- 	       AND B.DMN_PNM = WAM_DMN.DMN_PNM -->
	       AND B.VRF_CD ='1'
	)
   </delete>
   
   <insert id="insertWAM" parameterType="map">
   	--  WAM 추가 (WAQ 내용을 추가, REG_TYP_CD 가 신규,변경일 경우)
	INSERT INTO WAM_DMN 
	(
	  DMN_ID 	
	  <include refid="wam_col"/>	
	)
	SELECT DMN_ID 	
	       <include refid="wam_col"/>	
	  FROM WAQ_DMN A
	 WHERE A.RQST_NO = #{rqstNo}
	   AND A.RVW_STS_CD = '1'
	   AND A.REG_TYP_CD IN ('C', 'U')
	   AND A.VRF_CD ='1'
   </insert>
   
   <update id="updateWAH"  parameterType="map">
   	-- WAH 이력 만료...
   UPDATE WAH_DMN A
	  SET EXP_DTM = now()
	WHERE A.EXP_DTM = DATE_FORMAT( '9999-12-31', '%Y-%m-%d')
	  AND A.REG_TYP_CD IN ('C','U')
	  AND  EXISTS (SELECT 1 
	                 FROM WAQ_DMN B
	                WHERE B.RQST_NO = #{rqstNo}
	                  AND B.RVW_STS_CD = '1'	
	                  AND B.DMN_LNM = A.DMN_LNM 	     
	                  AND B.VRF_CD ='1'          
	               )
	
   </update>
   
   <insert id="insertWAH"  parameterType="map">
   	-- WAH이력 적재...
	INSERT INTO WAH_DMN
	(
	    DMN_ID
	  , EXP_DTM
	  , STR_DTM 	
	  <include refid="wam_col"/>   
	)
	SELECT A.DMN_ID AS DMN_ID
	     , DATE_FORMAT( '9999-12-31', '%Y-%m-%d') AS EXP_DTM
	     , now() AS STR_DTM 	
	     <include refid="wam_col"/>   
	 FROM WAQ_DMN A
	WHERE A.RQST_NO = #{rqstNo}
	  AND A.RVW_STS_CD = '1'
	  AND A.VRF_CD ='1'
   </insert>
   
   <insert id="checkDmnPnmExists" parameterType="map">
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
  	  -- 검증쿼리
      AND A.RQST_DCD = 'CU'
      AND EXISTS (SELECT 1
			            FROM WAQ_DMN D
			            WHERE D.RQST_NO = #{rqstNo}
			              AND A.DMN_LNM = D.DMN_LNM
			              AND D.DMN_PNM IS NULL
			             <if test="rqstSno != null" >
						  AND D.RQST_SNO = #{rqstSno,jdbcType=DECIMAL}
						 </if>
			           )
  </insert>
  
    <insert id="checkCodeErr" parameterType="map">
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
  	  -- 검증쿼리(DM031) 등록불가능한 코드값 존재
      AND A.RQST_DCD = 'CU'
      AND EXISTS (SELECT 1
			            FROM WAQ_CD_VAL D
			            WHERE D.RQST_NO = #{rqstNo}
			              AND A.DMN_LNM = D.DMN_LNM
						  AND D.VRF_CD = '2'
				          AND EXISTS ( SELECT 1 FROM WAQ_RQST_VRF_DTLS E
	  			   			     WHERE D.RQST_NO 	  = E.RQST_NO
	  			   			       AND D.RQST_SNO 	  = E.RQST_SNO
	  			   			       AND D.RQST_DTL_SNO = E.RQST_DTL_SNO
	  			   			       AND E.VRF_DTL_CD NOT IN ('CV000'))
			           )
      AND A.CD_VAL_TYP_CD IN ('O', 'C')
  </insert>
  
  <insert id="checkLNmCriDsExists" parameterType="map">
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
  	  -- 검증쿼리
      AND A.RQST_DCD = 'CU'
       AND EXISTS (SELECT 1
			            FROM WAQ_DMN D
			            WHERE D.RQST_NO = #{rqstNo}
			              AND A.DMN_LNM = D.DMN_LNM
			              AND D.LNM_CRI_DS IS NULL
			             <if test="rqstSno != null" >
						  AND D.RQST_SNO = #{rqstSno,jdbcType=DECIMAL}
						 </if>
			           )
  </insert>
  
  <insert id="checkPNmCriDsExists" parameterType="map">
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
  	  -- 검증쿼리
      AND A.RQST_DCD = 'CU'
      AND EXISTS (SELECT 1
			            FROM WAQ_DMN D
			            WHERE D.RQST_NO = #{rqstNo}
			              AND A.DMN_LNM = D.DMN_LNM
			              AND D.PNM_CRI_DS IS NULL
			             <if test="rqstSno != null" >
						  AND D.RQST_SNO = #{rqstSno,jdbcType=DECIMAL}
						 </if>
			           )
  </insert> 
   <insert id="checkSimpleCodeLevelCheck" parameterType="map">
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
  	  -- 검증쿼리
      AND A.RQST_DCD = 'CU'
      AND A.CD_VAL_TYP_CD = 'O'
      AND EXISTS (SELECT 1
			            FROM WAM_DMN D
			            WHERE D.CD_VAL_TYP_CD = 'O'
						 AND D.DMN_ID = A.UPP_DMN_ID
                         AND LEVEL >= 3
                         AND D.REG_TYP_CD IN ('C', 'U')
			            START WITH D.UPP_DMN_ID IS NULL      
                        CONNECT BY PRIOR D.DMN_ID = D.UPP_DMN_ID 
			           )
  </insert> 
  <insert id="checkCdValExists" parameterType="map">
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
  	  -- 검증쿼리
      AND A.RQST_DCD = 'CU'
      AND EXISTS (SELECT 1 FROM WAQ_DMN D
                  INNER JOIN WAA_DMNG G
                  ON D.RQST_NO = #{rqstNo}
                  <if test="rqstSno != null" >
				     AND D.RQST_SNO = #{rqstSno,jdbcType=DECIMAL}
			      </if>
                  AND D.DMNG_ID = G.DMNG_ID
                  AND D.CD_VAL_TYP_CD IN ('O', 'C')
                  AND G.EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d')
                  AND G.CD_DMN_YN ='Y'
                  
                  LEFT OUTER JOIN WAQ_CD_VAL V
                  ON D.RQST_NO = V.RQST_NO
                  AND D.RQST_SNO = V.RQST_SNO
                  AND V.DMN_LNM = D.DMN_LNM
                  WHERE V.DMN_LNM IS NULL
			    )
  </insert> 
   <insert id="checkEncYn" parameterType="map">
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
  	  -- 검증쿼리
      AND A.RQST_DCD = 'CU'
      AND EXISTS (SELECT 1 FROM WAQ_DMN D
                  WHERE D.RQST_NO = #{rqstNo}
                  <if test="rqstSno != null" >
				     AND D.RQST_SNO = #{rqstSno,jdbcType=DECIMAL}
			      </if>
                  AND DATA_LEN IN  (64,128,256)
                  AND ENC_YN = 'N'
			    )
  </insert> 
  
      <insert id="insertWaqRejected" parameterType="map" >
  	       INSERT INTO WAQ_DMN(
                     	       RQST_NO
                              ,RQST_SNO
                              ,DMN_ID
                              ,DMN_LNM
                              ,DMN_PNM
                              ,LNM_CRI_DS
                              ,RQST_DCD
                              ,RVW_STS_CD
                              ,RVW_CONTS
                              ,VRF_CD
                              ,VRF_RMK
                              ,DMNG_ID
                              ,DMNG_LNM
                              ,INFOTP_ID
                              ,DATA_TYPE
                              ,DATA_LEN
                              ,DATA_SCAL
                              ,INFOTP_LNM
                              ,UPP_DMN_ID
                              ,UPP_DMN_LNM
                              ,MDL_LNM
                              ,UPP_SUBJ_LNM
                              ,SUBJ_ID
                              ,SUBJ_LNM
                              ,LST_ENTY_ID
                              ,LST_ENTY_PNM
                              ,LST_ENTY_LNM
                              ,LST_ATTR_ID
                              ,LST_ATTR_PNM
                              ,LST_ATTR_LNM
                              ,CD_VAL_TYP_CD
                              ,CD_VAL_IVW_CD
                              ,DATA_FRM
                              ,SDITM_AUTO_CRT_YN
                              ,CRG_USER_ID
                              ,CRG_USER_NM
                              ,DMN_ORG_DS
                              ,OBJ_DESCN
                              ,OBJ_VERS
                              ,REG_TYP_CD
                              ,FRS_RQST_DTM
                              ,FRS_RQST_USER_ID
                              ,RQST_DTM
                              ,RQST_USER_ID
                              ,APRV_DTM
                              ,APRV_USER_ID
                              ,FULL_PATH
                              ,PNM_CRI_DS
                              ,ENC_YN
                              ,DMN_DSCD
                              ,DATA_LEN
                              ,DATA_TYPE
                              ,DATA_SCAL
  	       )
  	       SELECT 
  	              #{reqmst.rqstNo,jdbcType=VARCHAR}
                  ,RQST_SNO
                  ,DMN_ID
                  ,DMN_LNM
                  ,DMN_PNM
                  ,LNM_CRI_DS
                  ,RQST_DCD
                  ,'0'
                  ,NULL
                  ,NULL
                  ,NULL
                  ,DMNG_ID
                  ,DMNG_LNM
                  ,INFOTP_ID
                  ,DATA_TYPE
                  ,DATA_LEN
                  ,DATA_SCAL
                  ,INFOTP_LNM
                  ,UPP_DMN_ID
                  ,UPP_DMN_LNM
                  ,MDL_LNM
                  ,UPP_SUBJ_LNM
                  ,SUBJ_ID
                  ,SUBJ_LNM
                  ,LST_ENTY_ID
                  ,LST_ENTY_PNM
                  ,LST_ENTY_LNM
                  ,LST_ATTR_ID
                  ,LST_ATTR_PNM
                  ,LST_ATTR_LNM
                  ,CD_VAL_TYP_CD
                  ,CD_VAL_IVW_CD
                  ,DATA_FRM
                  ,SDITM_AUTO_CRT_YN
                  ,CRG_USER_ID
                  ,CRG_USER_NM
                  ,DMN_ORG_DS
                  ,OBJ_DESCN
                  ,OBJ_VERS
                  ,REG_TYP_CD
                  ,FRS_RQST_DTM
                  ,FRS_RQST_USER_ID
                  ,RQST_DTM
                  ,RQST_USER_ID
                  ,NULL
                  ,NULL
                  ,FULL_PATH
                  ,PNM_CRI_DS
                  ,ENC_YN
                  ,DMN_DSCD
                  ,DATA_LEN
                  ,DATA_TYPE
                  ,DATA_SCAL
  	          FROM WAQ_DMN A
  	          WHERE A.RQST_NO = #{oldRqstNo,jdbcType=VARCHAR}
  	          AND A.RVW_STS_CD = '2'
       </insert>
       
       <update id="updateSditmInfoTp" parameterType="java.lang.String" >
       UPDATE WAM_SDITM Z
          SET Z.INFOTP_ID = (SELECT A.INFOTP_ID 
                               FROM WAQ_DMN A
                                    INNER JOIN WAM_DMN B
                                       ON A.DMN_ID = B.DMN_ID
                                      AND A.INFOTP_ID != B.INFOTP_ID
                                    INNER JOIN V_WAA_DMNG C
                                       ON C.DMNG_ID = B.DMNG_ID  
                              WHERE A.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
                                AND C.DMNG_LNM = '코드' 
                                AND B.DMN_ID = Z.DMN_ID   
                            )
        WHERE EXISTS (SELECT A.INFOTP_ID 
                        FROM WAQ_DMN A
                             INNER JOIN WAM_DMN B
                                ON A.DMN_ID = B.DMN_ID
                               AND A.INFOTP_ID != B.INFOTP_ID
                             INNER JOIN V_WAA_DMNG C
                                ON C.DMNG_ID = B.DMNG_ID  
                       WHERE A.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
                         AND C.DMNG_LNM = '코드' 
                         AND B.DMN_ID = Z.DMN_ID   
                     )
       </update>
       
       <update id="updateSditmInfoTpWah" parameterType="java.lang.String" >
       UPDATE WAH_SDITM Z
       SET Z.INFOTP_ID = (SELECT A.INFOTP_ID from waq_dmn A
                         inner join wam_dmn B
                         on A.dmn_id = B.dmn_id
                         and A.INFOTP_ID != B.INFOTP_ID
                         where A.rqst_no = #{rqstNo,jdbcType=VARCHAR}
                         AND Z.DMN_ID = B.DMN_ID
                         )
       WHERE EXISTS (SELECT A.INFOTP_ID from waq_dmn A
                         inner join wam_dmn B
                         on A.dmn_id = B.dmn_id
                         and a.INFOTP_ID != b.INFOTP_ID
                         where A.rqst_no = #{rqstNo,jdbcType=VARCHAR}
                         AND Z.DMN_ID = B.DMN_ID
                         AND Z.INFOTP_ID = B.INFOTP_ID
                    )
        AND Z.EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d')
        AND Z.REG_TYP_CD IN ('C', 'U')            
       </update>
  
  
    <update id="checkExistsSditm" parameterType="map">
   <include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
-- 검증쿼리(도메인 신규 신청시 용어 자동신청이 체크되면 동일한 이름의 용어가 존재하는지 체크)
      and A.REG_TYP_CD = 'C'
      AND A.SDITM_AUTO_CRT_YN ='Y'
      AND A.DMN_PNM IN (SELECT SDITM_PNM
                        FROM WAM_SDITM
                        )
  
   </update>
   
   <update id="updateWahTransYn" parameterType="java.lang.String" >
   UPDATE WAH_DMN A
   SET A.TRANS_YN = (SELECT IFNULL(B.TRANS_YN, 'N') 
                     FROM WAH_DMN B
                     WHERE A.DMN_ID = B.DMN_ID
                     AND (A.OBJ_VERS-1) = B.OBJ_VERS
                     AND B.REG_TYP_CD IN ('C', 'U') 
                     )
   WHERE A.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
   AND A.EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d')
   </update>
   
   <update id="updateRejItemByDmn" parameterType="kr.wise.dq.stnd.service.WaqDmn" >
  	UPDATE WAQ_SDITM A
  	   SET RVW_STS_CD = '2'
  	 WHERE RQST_NO = #{rqstNo,jdbcType=VARCHAR}
       AND EXISTS (SELECT 1
                     FROM WAQ_DMN B
                    WHERE B.RQST_NO = A.RQST_NO
                      AND B.DMN_LNM = A.DMN_LNM
                      AND B.REG_TYP_CD = 'C'
                      AND B.RVW_STS_CD = '2'  
                  )
       
  </update>
  
   <update id="updateRejDmnByWrd" parameterType="kr.wise.commons.rqstmst.service.WaqMstr" >
  	UPDATE WAQ_DMN A
  	   SET RVW_STS_CD = '2'
  	 WHERE RQST_NO = #{rqstNo,jdbcType=VARCHAR}
       AND EXISTS (SELECT 1
                     FROM WAQ_STWD_CNFG B
                          INNER JOIN WAQ_STWD C
                             ON C.RQST_NO  = B.RQST_NO
                            AND C.STWD_LNM = B.STWD_LNM
                            AND C.REG_TYP_CD = 'C'
                            AND C.RVW_STS_CD = '2'  
                    WHERE B.BIZ_DTL_CD = 'DMN'
                      AND B.RQST_NO  = A.RQST_NO
                      AND B.RQST_SNO = A.RQST_SNO                      
                  )
  </update>
  
  <update id="updateDmnDelInfo" parameterType="kr.wise.commons.rqstmst.service.WaqMstr" >
  <!-- 오라클 원본 
  	UPDATE WAQ_DMN A
  	   SET (  DMN_PNM, LNM_CRI_DS, DMNG_ID, DMNG_LNM, INFOTP_ID, INFOTP_LNM, DATA_TYPE, DATA_LEN, DATA_SCAL
  	        , UPP_DMN_ID, SUBJ_ID, LST_ENTY_ID, LST_ENTY_PNM, LST_ENTY_LNM, LST_ATTR_ID, LST_ATTR_PNM, LST_ATTR_LNM
  	        , CD_VAL_TYP_CD, CD_VAL_IVW_CD, SDITM_AUTO_CRT_YN, DATA_FRM, CRG_USER_ID, DMN_ORG_DS
	        , OBJ_DESCN, FRS_RQST_DTM, FRS_RQST_USER_ID
	        , FULL_PATH, PNM_CRI_DS, ENC_YN, DMN_DSCD, TRANS_YN) =
  	           (SELECT B.DMN_PNM, B.LNM_CRI_DS, B.DMNG_ID, D.DMNG_LNM, B.INFOTP_ID
  	                 , C.INFOTP_LNM, C.DATA_TYPE, C.DATA_LEN, C.DATA_SCAL
  	                 , B.UPP_DMN_ID, B.SUBJ_ID, B.LST_ENTY_ID, B.LST_ENTY_PNM, B.LST_ENTY_LNM, B.LST_ATTR_ID, B.LST_ATTR_PNM, B.LST_ATTR_LNM
  	                 , B.CD_VAL_TYP_CD, B.CD_VAL_IVW_CD, B.SDITM_AUTO_CRT_YN, B.DATA_FRM, B.CRG_USER_ID, B.DMN_ORG_DS
	                 , B.OBJ_DESCN
	                 , B.FRS_RQST_DTM
	                 , B.FRS_RQST_USER_ID
	                 , B.FULL_PATH, B.PNM_CRI_DS, ENC_YN, B.DMN_DSCD, B.TRANS_YN
  	              FROM WAM_DMN B
  	                   INNER JOIN WAA_INFO_TYPE C
  	                      ON C.EXP_DTM = DATE_FORMAT( '9999-12-31', '%Y-%m-%d') 
  	                     AND C.INFOTP_ID = B.INFOTP_ID
  	                   INNER JOIN V_WAA_DMNG D
  	                      ON D.DMNG_ID = B.DMNG_ID  
  	             WHERE B.DMN_LNM = A.DMN_LNM 
  	            )
  	 WHERE A.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
  	   AND A.REG_TYP_CD = 'D'
       AND EXISTS (SELECT 1
  	                 FROM WAM_DMN B
  	                WHERE B.DMN_LNM = A.DMN_LNM                 
                  )
      -->
      
      UPDATE WAQ_DMN A ,
				   (SELECT B.DMN_PNM AS Y1, B.LNM_CRI_DS AS Y2, B.DMNG_ID AS Y3, D.DMNG_LNM AS Y4, B.INFOTP_ID AS Y5
						 , C.INFOTP_LNM AS Y6, C.DATA_TYPE AS Y7, C.DATA_LEN AS Y8, C.DATA_SCAL AS Y9, B.UPP_DMN_ID AS Y10
						 , B.SUBJ_ID AS Y11, B.LST_ENTY_ID AS Y12, B.LST_ENTY_PNM AS Y13, B.LST_ENTY_LNM AS Y14, B.LST_ATTR_ID AS Y15
						 , B.LST_ATTR_PNM AS Y16, B.LST_ATTR_LNM AS Y17, B.CD_VAL_TYP_CD AS Y18, B.CD_VAL_IVW_CD AS Y19, B.SDITM_AUTO_CRT_YN AS Y20
						 , B.DATA_FRM AS Y21, B.CRG_USER_ID AS Y22, B.DMN_ORG_DS AS Y23, B.OBJ_DESCN AS Y24, B.FRS_RQST_DTM AS Y25
						 , B.FRS_RQST_USER_ID AS Y26, B.FULL_PATH AS Y27, B.PNM_CRI_DS AS Y28, B.ENC_YN AS Y29, B.DMN_DSCD AS Y30, B.TRANS_YN AS Y31
			  	    FROM WAQ_DMN A ,WAM_DMN B
			  	        INNER JOIN WAA_INFO_TYPE C
			  	            ON C.EXP_DTM = DATE_FORMAT( '9999-12-31', '%Y-%m-%d') 
			  	            AND C.INFOTP_ID = B.INFOTP_ID
			  	        INNER JOIN V_WAA_DMNG D
			  	            ON D.DMNG_ID = B.DMNG_ID  
			  	    WHERE B.DMN_LNM = A.DMN_LNM 
  	            ) A2
	SET   A.DMN_PNM = A2.Y1 , A.LNM_CRI_DS = A2.Y2 , A.DMNG_ID = A2.Y3 , A.DMNG_LNM = A2.Y4 , A.INFOTP_ID = A2.Y5 
		, A.INFOTP_LNM = A2.Y6 , A.DATA_TYPE = A2.Y7 , A.DATA_LEN = A2.Y8 , A.DATA_SCAL = A2.Y9 , A.UPP_DMN_ID = A2.Y10 
		, A.SUBJ_ID = A2.Y11 , A.LST_ENTY_ID = A2.Y12, A.LST_ENTY_PNM = A2.Y13 , A.LST_ENTY_LNM = A2.Y14 , A.LST_ATTR_ID = A2.Y15 
		, A.LST_ATTR_PNM = A2.Y16 , A.LST_ATTR_LNM = A2.Y17 , A.CD_VAL_TYP_CD = A2.Y18, A.CD_VAL_IVW_CD = A2.Y19 , A.SDITM_AUTO_CRT_YN = A2.Y20 
		, A.DATA_FRM = A2.Y21 , A.CRG_USER_ID = A2.Y22 , A.DMN_ORG_DS = A2.Y23 , A.OBJ_DESCN = A2.Y24, A.FRS_RQST_DTM = A2.Y25 
		, A.FRS_RQST_USER_ID = A2.Y26 , A.FULL_PATH = A2.Y27 , A.PNM_CRI_DS = A2.Y28 , A.ENC_YN = A2.Y29 , A.DMN_DSCD = A2.Y30 , A.TRANS_YN = A2.Y31
  	 WHERE A.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
  	   AND A.REG_TYP_CD = 'D'
       AND EXISTS (SELECT 1
  	                 FROM WAM_DMN B
  	                WHERE B.DMN_LNM = A.DMN_LNM
					)
  </update>
  
  <insert id="insertWaqDmnByCdVal" parameterType="kr.wise.dq.stnd.service.WaqCdVal" >
 <!-- 오라클 원본 
    INSERT INTO WAQ_DMN 
    (  RQST_NO, RQST_SNO, DMN_ID, DMN_LNM, DMN_PNM
     , LNM_CRI_DS
     , PNM_CRI_DS
     , RQST_DCD, DMNG_ID, DMNG_LNM
	 , INFOTP_ID, DATA_TYPE, DATA_LEN, DATA_SCAL, INFOTP_LNM, UPP_DMN_ID, UPP_DMN_LNM
	 , SUBJ_ID, LST_ENTY_ID, LST_ENTY_PNM, LST_ENTY_LNM, CD_VAL_TYP_CD, CD_VAL_IVW_CD
 	 , DATA_FRM, SDITM_AUTO_CRT_YN, CRG_USER_ID, DMN_ORG_DS, OBJ_DESCN, OBJ_VERS,ENC_YN,DMN_DSCD
	)
	SELECT #{rqstNo, jdbcType=VARCHAR} 
		  , (SELECT IFNULL(MAX(RQST_SNO), 0) 
		       FROM WAQ_DMN 
		      WHERE RQST_NO = #{rqstNo, jdbcType=VARCHAR} 
		     ) + ROWNUM
		  , A.DMN_ID, A.DMN_LNM, A.DMN_PNM
		  , A.LNM_CRI_DS
		  , A.PNM_CRI_DS
		  , 'CU', A.DMNG_ID, B.DMNG_LNM
		  , A.INFOTP_ID, C.DATA_TYPE, C.DATA_LEN, C.DATA_SCAL, C.INFOTP_LNM, A.UPP_DMN_ID, D.DMN_LNM
		  , A.SUBJ_ID, A.LST_ENTY_ID, A.LST_ENTY_PNM, A.LST_ENTY_LNM, A.CD_VAL_TYP_CD, A.CD_VAL_IVW_CD
		  , A.DATA_FRM, A.SDITM_AUTO_CRT_YN, A.CRG_USER_ID, A.DMN_ORG_DS, A.OBJ_DESCN, A.OBJ_VERS,A.ENC_YN,A.DMN_DSCD
	  FROM WAM_DMN A
	       LEFT JOIN WAA_DMNG B
	         ON B.EXP_DTM = DATE_FORMAT( '9999-12-31', '%Y-%m-%d')
	        AND B.DMNG_ID = A.DMNG_ID   	   
	        LEFT JOIN WAA_INFO_TYPE C
	          ON C.EXP_DTM = DATE_FORMAT( '9999-12-31', '%Y-%m-%d')
	         AND C.INFOTP_ID = A.INFOTP_ID   
	        LEFT JOIN WAM_DMN D
	          ON D.DMN_ID = A.UPP_DMN_ID 	   
	  WHERE 1 = 1
	    AND A.DMN_LNM = #{dmnLnm, jdbcType=VARCHAR} 
	    AND NOT EXISTS (SELECT 1
	                      FROM WAQ_DMN X 
	                     WHERE X.RQST_NO = #{rqstNo, jdbcType=VARCHAR} 
	                       AND X.DMN_LNM = #{dmnLnm, jdbcType=VARCHAR}  	                       
	                    )
-->

INSERT INTO WAQ_DMN 
    (  RQST_NO, RQST_SNO, DMN_ID, DMN_LNM, DMN_PNM
     , LNM_CRI_DS
     , PNM_CRI_DS
     , RQST_DCD, DMNG_ID, DMNG_LNM
	 , INFOTP_ID, DATA_TYPE, DATA_LEN, DATA_SCAL, INFOTP_LNM, UPP_DMN_ID, UPP_DMN_LNM
	 , SUBJ_ID, LST_ENTY_ID, LST_ENTY_PNM, LST_ENTY_LNM, CD_VAL_TYP_CD, CD_VAL_IVW_CD
 	 , DATA_FRM, SDITM_AUTO_CRT_YN, CRG_USER_ID, DMN_ORG_DS, OBJ_DESCN, OBJ_VERS,ENC_YN,DMN_DSCD
	)
	SELECT #{rqstNo, jdbcType=VARCHAR} 
		  , (SELECT IFNULL(MAX(RQST_SNO), 0) 
		       FROM WAQ_DMN 
		      WHERE RQST_NO = #{rqstNo, jdbcType=VARCHAR} 
		     ) + @rownum:=@rownum+1
		  , A.DMN_ID, A.DMN_LNM, A.DMN_PNM
		  , A.LNM_CRI_DS
		  , A.PNM_CRI_DS
		  , 'CU', A.DMNG_ID, B.DMNG_LNM
		  , A.INFOTP_ID, C.DATA_TYPE, C.DATA_LEN, C.DATA_SCAL, C.INFOTP_LNM, A.UPP_DMN_ID, D.DMN_LNM
		  , A.SUBJ_ID, A.LST_ENTY_ID, A.LST_ENTY_PNM, A.LST_ENTY_LNM, A.CD_VAL_TYP_CD, A.CD_VAL_IVW_CD
		  , A.DATA_FRM, A.SDITM_AUTO_CRT_YN, A.CRG_USER_ID, A.DMN_ORG_DS, A.OBJ_DESCN, A.OBJ_VERS,A.ENC_YN,A.DMN_DSCD
	  FROM (SELECT @rownum:=0) TMP , WAM_DMN A
	       LEFT JOIN WAA_DMNG B
	         ON B.EXP_DTM = DATE_FORMAT( '9999-12-31', '%Y-%m-%d')
	        AND B.DMNG_ID = A.DMNG_ID   	   
	        LEFT JOIN WAA_INFO_TYPE C
	          ON C.EXP_DTM = DATE_FORMAT( '9999-12-31', '%Y-%m-%d')
	         AND C.INFOTP_ID = A.INFOTP_ID   
	        LEFT JOIN WAM_DMN D
	          ON D.DMN_ID = A.UPP_DMN_ID 	   
	  WHERE 1 = 1
	    AND A.DMN_LNM = #{dmnLnm, jdbcType=VARCHAR} 
	    AND NOT EXISTS (SELECT 1
	                      FROM WAQ_DMN X 
	                     WHERE X.RQST_NO = #{rqstNo, jdbcType=VARCHAR} 
	                       AND X.DMN_LNM = #{dmnLnm, jdbcType=VARCHAR}  	                       
	                    )
  </insert>
	<select id="selectDmnId" parameterType="kr.wise.dq.stnd.service.WaqDmn" resultType="java.lang.String">
		SELECT DMN_ID
		FROM WAM_DMN
		WHERE DMN_LNM = UPPER(#{dmnLnm, jdbcType=VARCHAR})  
<!-- 		AND DMN_PNM = UPPER(#{dmnPnm, jdbcType=VARCHAR}  ) -->
	</select>
</mapper>








