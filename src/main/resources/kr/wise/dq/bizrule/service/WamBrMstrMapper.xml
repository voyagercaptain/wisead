<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.wise.dq.bizrule.service.WamBrMstrMapper" >
  <resultMap id="BaseResultMap" type="kr.wise.dq.bizrule.service.WamBrMstr" extends="kr.wise.dq.bizrule.service.WamBrResultMapper.BaseResultMap">
    <id column="BR_ID" property="brId" jdbcType="VARCHAR" />
    <result column="BR_NM" property="brNm" jdbcType="VARCHAR" />
    <result column="DB_CONN_TRG_ID" property="dbConnTrgId" jdbcType="VARCHAR" />
    <result column="DB_SCH_ID" property="dbSchId" jdbcType="VARCHAR" />
    <result column="DB_SCH_LNM" property="dbSchLnm" jdbcType="VARCHAR" />
    <result column="DB_SCH_PNM" property="dbSchPnm" jdbcType="VARCHAR" />
    <result column="DBC_TBL_NM" property="dbcTblNm" jdbcType="VARCHAR" />
    <result column="DBC_COL_NM" property="dbcColNm" jdbcType="VARCHAR" />

    <result column="BR_CRGP_USER_ID" property="brCrgpUserId" jdbcType="VARCHAR" />
    <result column="BR_CRGP_USER_NM" property="brCrgpUserNm" jdbcType="VARCHAR" />
    <result column="AGR_NV" property="agrNv" jdbcType="DECIMAL" />
    <result column="GL_NV" property="glNv" jdbcType="DECIMAL" />
    <result column="USE_YN" property="useYn" jdbcType="VARCHAR" />
    
    <result column="DB_CONN_TRG_PNM" property="dbConnTrgPnm" jdbcType="VARCHAR" />
    <result column="DB_CONN_TRG_LNM" property="dbConnTrgLnm" jdbcType="VARCHAR" />
    <result column="DQI_ID" property="dqiId" jdbcType="VARCHAR" />
    <result column="DQI_LNM" property="dqiLnm" jdbcType="VARCHAR" />
    <result column="CTQ_ID" property="ctqId" jdbcType="VARCHAR" />
    <result column="CTQ_LNM" property="ctqLnm" jdbcType="VARCHAR" />
    <result column="BASE_DTTM" property="baseDttm" jdbcType="VARCHAR" />
    <result column="ANA_DGR_DISP" property="anaDgrDisp" jdbcType="VARCHAR" />
    <result column="ER_RATE" property="erRate" jdbcType="VARCHAR" />
    <result column="DPMO" property="dpmo" jdbcType="VARCHAR" />
    <result column="SIGMA" property="sigma" jdbcType="VARCHAR" />
    <result column="ER_YN" property="erYn" jdbcType="VARCHAR" />
    
    <result column="ANA_JOB_ID" property="anaJobId" jdbcType="VARCHAR" />
    <result column="ANA_JOB_NM" property="anaJobNm" jdbcType="VARCHAR" />
    <result column="ANA_KND_CD" property="anaKndCd" jdbcType="VARCHAR" />
    
    <result column="SHD_JOB_ID" property="shdJobId" jdbcType="VARCHAR" />
    <result column="ETC_JOB_NM" property="etcJobNm" jdbcType="VARCHAR" />
    
    <!-- <result column="OBJ_DESCN" property="objDescn" jdbcType="VARCHAR" /> -->
    
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="kr.wise.dq.bizrule.service.WamBrMstr" extends="BaseResultMap" >
    <result column="CNT_SQL" property="cntSql" jdbcType="CLOB" />
    <result column="ER_CNT_SQL" property="erCntSql" jdbcType="CLOB" />
    <result column="ANA_SQL" property="anaSql" jdbcType="CLOB" />
    <result column="TGT_CNT_SQL" property="tgtCntSql" jdbcType="CLOB" />
    <result column="TGT_ER_CNT_SQL" property="tgtErCntSql" jdbcType="CLOB" />
    <result column="TGT_ANA_SQL" property="tgtAnaSql" jdbcType="CLOB" />
    
    <result column="SHD_KND_CD" property="shdKndCd" jdbcType="VARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    BR_ID, BR_NM, DB_CONN_TRG_ID, DB_SCH_ID, DBC_TBL_NM, DBC_COL_NM, BIZ_AREA_ID, BR_CRGP_USER_ID, 
    AGR_NV, GL_NV, USE_YN, RQST_NO, RQST_SNO, OBJ_DESCN, OBJ_VERS, 
    REG_TYP_CD, FRS_RQST_DTM, FRS_RQST_USER_ID, RQST_DTM, RQST_USER_ID, APRV_DTM, APRV_USER_ID
  </sql>
  <sql id="Blob_Column_List" >
    CNT_SQL, ER_CNT_SQL, ANA_SQL, TGT_CNT_SQL, TGT_ER_CNT_SQL, TGT_ANA_SQL
  </sql>
  
  <select id="selectBizrule" resultMap = "ResultMapWithBLOBs" parameterType="kr.wise.dq.bizrule.service.WamBrMstr">
 SELECT  A.BR_NM AS BR_NM    --  업무규칙명
        ,A.BR_ID AS BR_ID     -- 업무규칙ID
        ,B.BIZ_AREA_ID    -- 업무영역ID
        ,B.FULL_PATH AS BIZ_AREA_LNM    -- 업무영역명
<!--          ,B.BIZ_AREA_LNM     -->  
        ,DB.DB_CONN_TRG_LNM AS DB_CONN_TRG_LNM     -- 진단대상명
        ,DB.DB_CONN_TRG_PNM AS DB_CONN_TRG_PNM     -- 진단대상물리명
        ,DB.DB_CONN_TRG_ID AS DB_CONN_TRG_ID     -- 진단대상ID
        ,A.DBC_TBL_NM AS DBC_TBL_NM  -- 테이블명
        ,A.DBC_COL_NM AS DBC_COL_NM  -- 컬럼명
        ,D.DQI_ID AS DQI_ID     -- 데이터품질지표ID
        ,D.FULL_PATH AS DQI_LNM  -- 데이터품질지표명
<!--          ,DM.DQI_LNM AS DQI_LNM   -->
        ,C.CTQ_ID AS CTQ_ID   -- 중요정보항목ID
        ,CM.FULL_PATH AS CTQ_LNM    -- 중요정보항목명
<!--          ,CM.CTQ_LNM AS CTQ_LNM    -->  
        ,R.ANA_STR_DTM AS BASE_DTTM    -- 최근측정일자
        ,R.ANA_CNT AS ANA_CNT  -- 분석건수
        ,R.ER_CNT AS ER_CNT   -- 오류건수
        ,TRIM( TRAILING '.' FROM ROUND(R.ERR_RATE, 1)) AS ER_RATE -- 오류율
        ,A.CNT_SQL AS CNT_SQL       -- 건수SQL
        ,A.ER_CNT_SQL AS ER_CNT_SQL     -- 오류건수SQL
        ,A.ANA_SQL AS ANA_SQL       -- 분석SQL
        ,R.ANA_DGR    -- 분석차수
        ,CASE WHEN R.ANA_DGR IS NULL THEN '' ELSE CONCAT(R.ANA_DGR,' 차') END AS ANA_DGR_DISP -- 최근실행차수
        ,A.BR_CRGP_USER_ID AS BR_CRGP_USER_ID   -- 업무규칙담당자ID
        ,U.USER_NM AS BR_CRGP_USER_NM
        ,A.GL_NV AS GL_NV   -- 목표치
        ,A.AGR_NV       -- 가중치
        ,A.USE_YN    -- 사용여부
        ,A.OBJ_DESCN -- 설명
<!--          ,TO_CHAR(ROUND(WDQ_FC_DPMO(R.ER_CNT,R.ANA_CNT), 2)) AS DPMO                  -->
       ,CONVERT(ROUND(WDQ_FC_SIGMA(WDQ_FC_DPMO(R.ER_CNT,R.ANA_CNT)), 2), CHAR) AS SIGMA
<!--         ,S.DB_SCH_LNM -->
       ,A.TGT_VRF_JOIN_CD
       ,A.FRS_RQST_DTM   -- 최초요청일시
       ,A.FRS_RQST_USER_ID  -- 최초요청사용자ID
       ,GET_USER_NM(A.FRS_RQST_USER_ID) AS FRS_RQST_USER_NM   -- 최초요청사용자명
       ,A.RQST_DTM   -- 요청일시
       ,A.RQST_USER_ID  -- 요청사용자ID
       ,GET_USER_NM(A.RQST_USER_ID) AS RQST_USER_NM  -- 요청사용자명
       ,A.APRV_DTM   -- 승인일시
       ,A.APRV_USER_ID  -- 승인사용자ID
       ,GET_USER_NM(A.APRV_USER_ID) AS APRV_USER_NM  -- 승인사용자명
       <!--  분석실행 사용 컬럼 -->
       ,A.BR_NM AS ETC_JOB_NM   
        ,A.BR_ID AS SHD_JOB_ID         
       ,(CASE WHEN R.ER_CNT IS NULL THEN NULL
                      ELSE (CASE WHEN R.ER_CNT = '0' THEN  NULL
                                     ELSE '#FF0000'
                                     END  )
                       END  ) AS FontColor
       ,S.DB_SCH_ID
       ,S.DB_SCH_PNM
       , 'QB'        AS SHD_KND_CD
FROM  WAA_DB_CONN_TRG DB     
       INNER JOIN WAM_BR_MSTR  A                                              
         ON DB.DB_CONN_TRG_ID = A.DB_CONN_TRG_ID 
         AND A.REG_TYP_CD IN ('C','U')                     
        INNER JOIN (SELECT A.BR_ID
                           ,GROUP_CONCAT(B.FULL_PATH ORDER BY A.DQI_ID SEPARATOR ',') AS FULL_PATH
                           ,GROUP_CONCAT(B.DQI_ID ORDER BY A.DQI_ID SEPARATOR ',') AS DQI_ID
                      FROM WAM_BR_DQI_MAP A
                           INNER JOIN WAM_DQI B
                              ON A.DQI_ID = B.DQI_ID
                             AND B.REG_TYP_CD IN ('C','U') 
                     GROUP BY A.BR_ID) D
           ON A.BR_ID = D.BR_ID
        LEFT OUTER JOIN WAM_BIZ_AREA  B 
                    ON A.BIZ_AREA_ID = B.BIZ_AREA_ID
           AND B.REG_TYP_CD IN ('C','U')
         INNER JOIN WAA_DB_SCH S
          ON DB.DB_CONN_TRG_ID = S.DB_CONN_TRG_ID
         AND S.EXP_DTM = DATE_FORMAT('99991231','%Y%m%d')
         AND S.REG_TYP_CD IN ('C','U')
          LEFT OUTER JOIN WAM_BR_CTQ_MAP C
                    ON A.BR_ID = C.BR_ID
        AND C.REG_TYP_CD IN ('C','U')
          LEFT OUTER JOIN WAM_CTQ CM
                    ON C.CTQ_ID = CM.CTQ_ID
          AND CM.REG_TYP_CD IN ('C','U')
         LEFT OUTER JOIN WAA_USER U
           ON A.BR_CRGP_USER_ID = U.USER_ID
          AND U.REG_TYP_CD IN ('C','U')
          AND U.EXP_DTM = DATE_FORMAT('99991231','%Y%m%d')
         LEFT OUTER JOIN WAA_DB_CONN_TRG TGT_DB
          ON A.TGT_DB_CONN_TRG_ID = TGT_DB.DB_CONN_TRG_ID
         AND TGT_DB.EXP_DTM = DATE_FORMAT('99991231','%Y%m%d')  
         AND TGT_DB.REG_TYP_CD IN ('C','U')      
          <!--  최근실행일자 -->
         LEFT OUTER JOIN (<include refid="kr.wise.dq.bizrule.service.WamBrResultMapper.getBrResultMaxAnaStrDtm"/> ) R
           ON A.BR_ID = R.BR_ID 
  WHERE DB.EXP_DTM = DATE_FORMAT('99991231','%Y%m%d')  
     AND DB.REG_TYP_CD IN ('C','U')
  <if test="brId != null" >
        AND A.BR_ID = #{brId,jdbcType=VARCHAR}
  </if>
  <if test="dbConnTrgId != null and dbConnTrgId !='' ">
  AND DB.DB_CONN_TRG_ID = #{dbConnTrgId,jdbcType=VARCHAR}
  </if>
  <if test="dbSchId != null and dbSchId !='' ">
  AND A.DB_SCH_ID = #{dbSchId,jdbcType=VARCHAR}
  </if>
  <if test="dbcTblLnm != null and dbcTblLnm !='' ">
  AND A.DBC_TBL_NM LIKE CONCAT( '%' , #{dbcTblLnm,jdbcType=VARCHAR} , '%')
  </if>
  <if test="dbcColLnm != null and dbcColLnm !='' ">
  AND A.DBC_COL_NM LIKE CONCAT( '%' , #{dbcColLnm,jdbcType=VARCHAR} , '%')
  </if>
  <if test="bizAreaLnm != null and bizAreaLnm !='' ">
  AND B.FULL_PATH LIKE CONCAT( '%' , #{bizAreaLnm,jdbcType=VARCHAR} , '%')
<!--    AND B.BIZ_AREA_LNM LIKE '%' || #{bizAreaLnm,jdbcType=VARCHAR} || '%' -->
  </if>
  <if test="bizAreaId != null and bizAreaId !='' ">
  AND B.BIZ_AREA_ID = #{bizAreaLnm,jdbcType=VARCHAR}
  </if>
  <if test="dqiLnm != null and dqiLnm !='' ">
  AND D.FULL_PATH LIKE CONCAT( '%' , #{dqiLnm,jdbcType=VARCHAR} , '%')
<!--    AND DM.DQI_LNM LIKE '%' || #{dqiLnm,jdbcType=VARCHAR} || '%' -->
  </if>
  <if test="ctqLnm != null and ctqLnm !='' ">
  AND CM.FULL_PATH LIKE CONCAT( '%' , #{ctqLnm,jdbcType=VARCHAR}, '%')
<!--    AND DM.DQI_LNM LIKE '%' || #{CTQLNM,JDBCTYPE=VARCHAR} || '%' -->
  </if>
  <if test="brNm != null and brNm !='' ">
  AND A.BR_NM LIKE CONCAT( '%' , #{brNm,jdbcType=VARCHAR} , '%')
  </if>
  <if test="anaDgr != null and anaDgr !='' ">
  AND R.ANA_DGR = #{anaDgr,jdbcType=VARCHAR}
  </if>
  <if test='erYn == "N"  '>
  AND R.ER_CNT = 0
  </if>
    <if test='erYn == "Y"  '>
 <![CDATA[ AND R.ER_CNT <> 0 ]]>
  </if>
  
  <if test='tgtVrfJoinCd == "N"  '>
  AND A.TGT_VRF_JOIN_CD IS NULL
  </if>
  <if test='tgtVrfJoinCd == "Y"  '>
  AND A.TGT_VRF_JOIN_CD IS NOT NULL
  </if>
  
  </select>
  
  <select id="selectBrList" resultMap = "ResultMapWithBLOBs" parameterType="kr.wise.dq.bizrule.service.WamBrMstr">
 SELECT  A.BR_NM AS BR_NM    --  업무규칙명
        ,A.BR_ID AS BR_ID     -- 업무규칙ID
        ,DB.DB_CONN_TRG_LNM AS DB_CONN_TRG_LNM     -- 진단대상명
        ,DB.DB_CONN_TRG_PNM AS DB_CONN_TRG_PNM     -- 진단대상물리명
        ,DB.DB_CONN_TRG_ID AS DB_CONN_TRG_ID     -- 진단대상ID
        ,A.DBC_TBL_NM AS DBC_TBL_NM  -- 테이블명
        ,A.DBC_COL_NM AS DBC_COL_NM  -- 컬럼명
        ,D.DQI_ID AS DQI_ID     -- 데이터품질지표ID
        ,D.FULL_PATH AS DQI_LNM  -- 데이터품질지표명
        ,A.CNT_SQL AS CNT_SQL       -- 건수SQL
        ,A.ER_CNT_SQL AS ER_CNT_SQL     -- 오류건수SQL
        ,A.ANA_SQL AS ANA_SQL       -- 분석SQL
        ,A.BR_CRGP_USER_ID AS BR_CRGP_USER_ID   -- 업무규칙담당자ID
        ,U.USER_NM AS BR_CRGP_USER_NM
        ,A.GL_NV AS GL_NV   -- 목표치
        ,A.AGR_NV       -- 가중치
        ,A.USE_YN    -- 사용여부
        ,A.OBJ_DESCN -- 설명
       ,A.TGT_VRF_JOIN_CD
       ,A.FRS_RQST_DTM   -- 최초요청일시
       ,A.FRS_RQST_USER_ID  -- 최초요청사용자ID
       ,GET_USER_NM(A.FRS_RQST_USER_ID) AS FRS_RQST_USER_NM   -- 최초요청사용자명
       ,A.RQST_DTM   -- 요청일시
       ,A.RQST_USER_ID  -- 요청사용자ID
       ,GET_USER_NM(A.RQST_USER_ID) AS RQST_USER_NM  -- 요청사용자명
       ,A.APRV_DTM   -- 승인일시
       ,A.APRV_USER_ID  -- 승인사용자ID
       ,GET_USER_NM(A.APRV_USER_ID) AS APRV_USER_NM  -- 승인사용자명
       , A.BR_NM AS ETC_JOB_NM   
       , A.BR_ID AS SHD_JOB_ID
       , S.DB_SCH_ID
       , S.DB_SCH_PNM
       , 'QB'    AS SHD_KND_CD  
FROM  WAA_DB_CONN_TRG DB     
       INNER JOIN WAM_BR_MSTR  A                                              
         ON DB.DB_CONN_TRG_ID = A.DB_CONN_TRG_ID 
         AND A.REG_TYP_CD IN ('C','U')                     
        INNER JOIN (SELECT A.BR_ID
                           ,GROUP_CONCAT(B.FULL_PATH ORDER BY A.DQI_ID SEPARATOR ',') AS FULL_PATH
                           ,GROUP_CONCAT(B.DQI_ID ORDER BY A.DQI_ID SEPARATOR ',') AS DQI_ID
                      FROM WAM_BR_DQI_MAP A
                           INNER JOIN WAM_DQI B
                              ON A.DQI_ID = B.DQI_ID
                             AND B.REG_TYP_CD IN ('C','U') 
                     GROUP BY A.BR_ID) D
           ON A.BR_ID = D.BR_ID
         INNER JOIN WAA_DB_SCH S
          ON DB.DB_CONN_TRG_ID = S.DB_CONN_TRG_ID
         AND S.DB_SCH_ID = A.DB_SCH_ID
         AND S.EXP_DTM = DATE_FORMAT('99991231','%Y%m%d')
         AND S.REG_TYP_CD IN ('C','U')
         LEFT OUTER JOIN WAA_USER U
           ON A.BR_CRGP_USER_ID = U.USER_ID
          AND U.REG_TYP_CD IN ('C','U')
          AND U.EXP_DTM = DATE_FORMAT('99991231','%Y%m%d')
          <!--  최근실행일자 -->
         <!-- LEFT OUTER JOIN (<include refid="kr.wise.dq.bizrule.service.WamBrResultMapper.getBrResultMaxAnaStrDtm"/> ) R
           ON A.BR_ID = R.BR_ID  -->
  WHERE DB.EXP_DTM = DATE_FORMAT('99991231','%Y%m%d')  
     AND DB.REG_TYP_CD IN ('C','U')
  <if test="brId != null" >
        AND A.BR_ID = #{brId,jdbcType=VARCHAR}
  </if>
  <if test="dbConnTrgLnm != null and dbConnTrgLnm !='' ">
  AND DB.DB_CONN_TRG_ID = #{dbConnTrgLnm,jdbcType=VARCHAR}
  </if>
  <if test="dbSchLnm != null and dbSchLnm !='' ">
  AND A.DB_SCH_ID = #{dbSchLnm,jdbcType=VARCHAR}
  </if>
  <if test="dbcTblNm != null and dbcTblNm !='' ">
  AND A.DBC_TBL_NM LIKE CONCAT( '%' , #{dbcTblNm,jdbcType=VARCHAR} , '%')
  </if>
  <if test="dbcColNm != null and dbcColNm !='' ">
  AND A.DBC_COL_NM LIKE CONCAT( '%' , #{dbcColNm,jdbcType=VARCHAR} , '%')
  </if>
  <if test="dqiLnm != null and dqiLnm !='' ">
  AND D.FULL_PATH LIKE CONCAT( '%' , #{dqiLnm,jdbcType=VARCHAR} , '%')
  </if>
  <if test="brNm != null and brNm !='' ">
  AND A.BR_NM LIKE CONCAT( '%' , #{brNm,jdbcType=VARCHAR} , '%')
  </if>
  <if test="anaDgr != null and anaDgr !='' ">
  AND R.ANA_DGR = #{anaDgr,jdbcType=VARCHAR}
  </if>
  <if test='erYn == "N"  '>
  AND R.ER_CNT = 0
  </if>
  <if test="mngUserId != null and mngUserId !='' ">
    AND A.MNG_USER_ID = #{mngUserId,jdbcType=VARCHAR}
  </if>
    <if test='erYn == "Y"  '>
 <![CDATA[ AND R.ER_CNT <> 0 ]]>
  </if>
  
  </select>
  
  <select id="selectVrtDbList" resultMap="ResultMapWithBLOBs" parameterType="kr.wise.dq.bizrule.service.WamBrMstr">
     SELECT M.BR_NM --   업무규칙명
                , S.DB_SCH_LNM --   DB스키마명
                , A.BIZ_AREA_LNM --   업무영역명
                , M.TGT_DB_CONN_TRG_ID --   검증대상명
                , M.TGT_DB_SCH_ID --   검증DB 스키마
                , M.OBJ_DESCN --   설명
                , M.OBJ_VERS --   버전       
   FROM WAM_BR_MSTR M
        LEFT OUTER JOIN WAM_BIZ_AREA A
            ON M.BIZ_AREA_ID = A.BIZ_AREA_ID
            AND A.REG_TYP_CD IN ('C', 'U')
        LEFT OUTER JOIN WAA_DB_SCH S
            ON M.DB_SCH_ID = S.DB_SCH_ID
            AND S.REG_TYP_CD IN ('C', 'U')
            AND EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d')
   WHERE M.REG_TYP_CD IN ('C','U')                    
   <if test="tgtDbConnTrgId != null and tgtDbConnTrgId != '' ">
      AND M.TGT_DB_SCH_ID LIKE CONCAT('%',#{tgtDbConnTrgId, jdbcType=VARCHAR},'%')
   </if>
   ORDER BY M.OBJ_VERS
  </select>

  <select id="selectVrtTblList" resultMap="ResultMapWithBLOBs" parameterType="kr.wise.dq.bizrule.service.WamBrMstr">
   SELECT M.DB_CONN_TRG_ID --   검증대상명
               , S.DB_SCH_LNM AS TGT_DB_SCH_LNM --   검증스키마명
               , M.TGT_DBC_TBL_NM --   검증테이블명
   FROM WAM_BR_MSTR M
             LEFT OUTER JOIN WAA_DB_SCH S
                    ON M.TGT_DB_SCH_ID = S.DB_SCH_ID
                    AND S.REG_TYP_CD IN ('C', 'U')
                    AND EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d')
   WHERE M.REG_TYP_CD IN ('C', 'U')
   <if test="tgtDbConnTrgId != null and tgtDbConnTrgId != '' ">
      AND M.TGT_DB_CONN_TRG_ID LIKE CONCAT('%',#{tgtDbConnTrgId, jdbcType=VARCHAR},'%')
   </if>
   <if test="tgtDbSchNm != null and tgtDbSchNm != '' ">
      AND M.DB_SCH_LNM LIKE CONCAT('%',#{tgtDbSchNm, jdbcType=VARCHAR},'%')
   </if>
   <if test="tgtDbcTblNm != null and tgtDbcTblNm != '' ">
      AND M.TGT_DBC_TBL_NM LIKE CONCAT('%',#{tgtDbcTblNm, jdbcType=VARCHAR},'%')
   </if>
   <if test="tgtDbcColNm != null and tgtDbcColNm != '' ">
      AND M.TGT_KEY_DBC_COL_NM LIKE CONCAT('%',#{tgtDbcColNm, jdbcType=VARCHAR},'%')
   </if>
   GROUP BY M.DB_CONN_TRG_ID, M.TGT_DBC_TBL_NM, S.DB_SCH_LNM
  </select>

  <select id="selectVrtColList" resultMap="ResultMapWithBLOBs" parameterType="kr.wise.dq.bizrule.service.WamBrMstr">
   SELECT M.DB_CONN_TRG_ID --   검증대상명
               , S.DB_SCH_LNM AS TGT_DB_SCH_LNM   --   검증스키마명
               , M.TGT_DBC_COL_NM   --   검증컬럼명
               , M.TGT_KEY_DBC_COL_NM   --   검증키컬럼명
               , M.TGT_KEY_DBC_COL_VAL  --   검증키컬럼값
   FROM WAM_BR_MSTR M
            LEFT OUTER JOIN WAA_DB_SCH S
                   ON M.TGT_DB_SCH_ID = S.DB_SCH_ID
                   AND S.REG_TYP_CD IN ('C', 'U')
                   AND EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d')
   WHERE M.REG_TYP_CD IN ('C', 'U')   
   <if test="tgtDbConnTrgId != null and tgtDbConnTrgId != '' ">
      AND M.TGT_DB_CONN_TRG_ID LIKE CONCAT('%',#{tgtDbConnTrgId, jdbcType=VARCHAR},'%')
   </if>
   <if test="tgtDbSchNm != null and tgtDbSchNm != '' ">
      AND S.DB_SCH_LNM LIKE CONCAT('%',#{tgtDbSchNm, jdbcType=VARCHAR},'%')
   </if>
      AND M.TGT_DBC_TBL_NM LIKE CONCAT('%',#{tgtDbcTblNm, jdbcType=VARCHAR},'%')
   <if test="tgtDbcColNm != null and tgtDbcColNm != '' ">
      AND M.TGT_DBC_COL_NM LIKE CONCAT('%',#{tgtDbcColNm, jdbcType=VARCHAR},'%')
   </if>
   GROUP BY M.DB_CONN_TRG_ID, S.DB_SCH_LNM, M.TGT_DBC_COL_NM, M.TGT_KEY_DBC_COL_NM, M.TGT_KEY_DBC_COL_VAL
  </select>

  <select id="selectBizruleDtl" resultMap = "ResultMapWithBLOBs" parameterType="kr.wise.dq.bizrule.service.WamBrMstr">
  SELECT  A.BR_NM AS BR_NM    --   업무규칙명
        ,A.BR_ID AS BR_ID     --  업무규칙ID
        ,B.FULL_PATH AS BIZ_AREA_LNM    --  업무영역명
<!--           ,B.BIZ_AREA_LNM  -->
        ,DB.DB_CONN_TRG_LNM AS DB_CONN_TRG_LNM     --  진단대상명
        ,DB.DB_CONN_TRG_PNM AS DB_CONN_TRG_PNM     --  진단대상명
        ,DB.DB_CONN_TRG_ID AS DB_CONN_TRG_ID     --  진단대상ID
        ,A.DBC_TBL_NM AS DBC_TBL_NM  --  테이블명
        ,A.DBC_COL_NM AS DBC_COL_NM  --  컬럼명
        ,D.DQI_ID AS DQI_ID     --  데이터품질지표ID
        ,DM.FULL_PATH AS DQI_LNM  --  데이터품질지표명
<!--           ,DM.DQI_LNM AS DQI_LNM   -->
        ,C.CTQ_ID AS CTQ_ID   --  중요정보항목ID
        ,CM.FULL_PATH AS CTQ_LNM    --  중요정보항목명
<!--           ,CM.CTQ_LNM AS CTQ_LNM   -->
        ,R.ANA_STR_DTM AS BASE_DTTM    --  최근측정일자
        ,R.ANA_CNT AS ANA_CNT  --  분석건수
        ,R.ER_CNT AS ER_CNT   --  오류건수
        ,R.ERR_RATE AS ER_RATE --  오류율
        ,A.CNT_SQL AS CNT_SQL       --  건수SQL
        ,A.ER_CNT_SQL AS ER_CNT_SQL     --  오류건수SQL
        ,A.ANA_SQL AS ANA_SQL       --  분석SQL
        ,R.ANA_DGR    --  분석차수
        ,CASE WHEN R.ANA_DGR IS NULL THEN '' ELSE CONCAT(R.ANA_DGR,' 차') END AS ANA_DGR_DISP --  최근실행차수
        ,A.BR_CRGP_USER_ID AS BR_CRGP_USER_ID   --  업무규칙담당자ID
        ,A.GL_NV AS GL_NV   --  목표치
        ,A.AGR_NV       --  가중치
        ,A.USE_YN    --  사용여부
        ,A.OBJ_DESCN --  설명
        ,A.TGT_DB_CONN_TRG_ID   --  검증대상명
        ,A.TGT_DBC_TBL_NM       --  검증테이블명
        ,A.TGT_DBC_COL_NM       --  검증컬럼명
        ,A.TGT_KEY_DBC_COL_NM       --  검증비교KEY컬럼
        ,A.TGT_KEY_DBC_COL_VAL      --  검증비교값컬럼
        ,A.TGT_CNT_SQL      --  건수SQL(검증)
        ,A.TGT_ANA_SQL      --  분석SQL(검증)
        ,A.TGT_VRF_JOIN_CD
        ,A.FRS_RQST_DTM   --  최초요청일시
       ,A.FRS_RQST_USER_ID  --  최초요청사용자ID
       ,GET_USER_NM(A.FRS_RQST_USER_ID) AS FRS_RQST_USER_NM   --  최초요청사용자명
       ,A.RQST_DTM   --  요청일시
       ,A.RQST_USER_ID  --  요청사용자ID
       ,GET_USER_NM(A.RQST_USER_ID) AS RQST_USER_NM  --  요청사용자명
       ,A.APRV_DTM   --  승인일시
       ,A.APRV_USER_ID  --  승인사용자ID
       ,GET_USER_NM(A.APRV_USER_ID) AS APRV_USER_NM  --  승인사용자명
<!--           ,TO_CHAR(ROUND(WDQ_FC_DPMO(R.ER_CNT,R.ANA_CNT), 2)) AS DPMO                  -->
       ,CAST(ROUND(WDQ_FC_SIGMA(WDQ_FC_DPMO(R.ER_CNT,R.ANA_CNT)), 2)AS CHAR) AS SIGMA
 FROM WAM_BR_MSTR A    
        INNER JOIN WAM_BR_DQI_MAP D
            ON A.BR_ID = D.BR_ID
           AND D.REG_TYP_CD IN ('C', 'U')
        INNER JOIN WAM_DQI DM
            ON D.DQI_ID = DM.DQI_ID  
           AND DM.REG_TYP_CD IN ('C', 'U')
        INNER JOIN WAM_BIZ_AREA B 
            ON A.BIZ_AREA_ID = B.BIZ_AREA_ID
           AND B.REG_TYP_CD IN ('C', 'U')
          LEFT OUTER JOIN WAM_BR_CTQ_MAP C
            ON A.BR_ID = C.BR_ID
           AND C.REG_TYP_CD IN ('C', 'U')
           LEFT OUTER JOIN WAM_CTQ CM
            ON C.CTQ_ID = CM.CTQ_ID
           AND CM.REG_TYP_CD IN ('C', 'U')
           LEFT OUTER JOIN ( <include refid="kr.wise.dq.bizrule.service.WamBrResultMapper.getBrResultMaxAnaStrDtm"/>  ) R
            ON A.BR_ID = R.BR_ID 
           LEFT OUTER JOIN (<include refid="kr.wise.dq.criinfo.anatrg.service.AnaTrgMapper.AnaTrg" /> ) DB
            ON A.DB_CONN_TRG_ID = DB.DB_CONN_TRG_ID
           AND A.DB_SCH_ID = DB.DB_SCH_ID
           AND A.DBC_TBL_NM = DB.DBC_TBL_NM
           AND A.DBC_COL_NM = DB.DBC_COL_NM
  WHERE 1 = 1
     AND A.REG_TYP_CD IN ('C','U')
  <if test="brNm != null and brNm !='' ">
  AND A.BR_NM LIKE CONCAT('%' , #{brNm,jdbcType=VARCHAR} , '%')
  </if>
  <if test="brId != null and brId !='' ">
  AND A.BR_ID = #{brId,jdbcType=VARCHAR}
  </if>
  </select>
  
  
  
  <select id="selectBizrulePop" resultMap = "BaseResultMap" parameterType="kr.wise.dq.bizrule.service.WamBrMstr">
    SELECT A.BR_ID
         ,A.BR_NM
         ,BD.DQI_LNM
         ,C.CTQ_LNM
         ,A.OBJ_DESCN
         ,A.OBJ_VERS
         ,A.REG_TYP_CD
         ,A.RQST_DTM
         ,A.RQST_USER_ID
         ,GET_USER_NM(A.RQST_USER_ID) AS RQST_USER_NM
    FROM WAM_BR_MSTR A 
        INNER JOIN (SELECT A.BR_ID
                           ,GROUP_CONCAT(B.FULL_PATH ORDER BY A.DQI_ID SEPARATOR ',') AS DQI_LNM
                           ,GROUP_CONCAT(B.DQI_ID ORDER BY A.DQI_ID SEPARATOR ',') AS DQI_ID
                      FROM WAM_BR_DQI_MAP A
                           INNER JOIN WAM_DQI B
                              ON A.DQI_ID = B.DQI_ID
                             AND B.REG_TYP_CD IN ('C','U') 
                     GROUP BY A.BR_ID) BD
          ON A.BR_ID = BD.BR_ID
       LEFT OUTER JOIN WAM_BR_CTQ_MAP BC
          ON A.BR_ID = BC.BR_ID
       LEFT OUTER JOIN WAM_CTQ C
          ON BC.CTQ_ID = C.CTQ_ID
    <where>
    <if test="brNm != null">
     AND A.BR_NM LIKE CONCAT('%' , #{brNm,jdbcType=VARCHAR} , '%')
     </if>
     </where>
    
    
  </select>
  
  <select id="selectBizRuleHstLst" resultMap="BaseResultMap" parameterType="kr.wise.dq.bizrule.service.WamBrMstr">
     --  이력조회
     SELECT  M.*
                 ,DB.DB_CONN_TRG_LNM AS DB_CONN_TRG_LNM     --  진단대상명
                 ,DB.DB_CONN_TRG_PNM AS DB_CONN_TRG_PNM     --  진단대상물리명
                 ,DB.DB_CONN_TRG_ID AS DB_CONN_TRG_ID     --  진단대상ID
                 ,BA.BIZ_AREA_ID    --  업무영역ID
                 ,BA.BIZ_AREA_LNM    --  업무영역명
                 ,DMAP.DQI_ID AS DQI_ID     --  데이터품질지표ID
                 ,DM.FULL_PATH AS DQI_LNM  --  데이터품질지표명
                 ,CMAP.CTQ_ID AS CTQ_ID   --  중요정보항목ID
                 ,CM.FULL_PATH AS CTQ_LNM    --  중요정보항목명
                 ,B.USER_NM AS RQST_USER_NM --  요청자명
                 ,C.USER_NM AS FRS_RQST_USER_NM --  최초요청자명
                 ,D.USER_NM AS APRV_USER_NM --   승인자명
     FROM (SELECT A.DB_CONN_TRG_ID ,A.DB_CONN_TRG_LNM, A.DB_CONN_TRG_PNM
                FROM WAA_DB_CONN_TRG A  
                WHERE A.EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d')  
                AND A.REG_TYP_CD IN ('C','U')                     
                GROUP BY A.DB_CONN_TRG_ID, A.DB_CONN_TRG_LNM, A.DB_CONN_TRG_PNM 
              ) DB 
                 INNER JOIN WAH_BR_MSTR M
                      ON DB.DB_CONN_TRG_ID = M.DB_CONN_TRG_ID 
                 INNER JOIN WAM_BIZ_AREA BA 
                          ON M.BIZ_AREA_ID = BA.BIZ_AREA_ID
                   INNER JOIN WAM_BR_DQI_MAP DMAP
                     ON M.BR_ID = DMAP.BR_ID
               INNER JOIN WAM_DQI DM
                       ON DMAP.DQI_ID = DM.DQI_ID  
               LEFT OUTER JOIN WAM_BR_CTQ_MAP CMAP
                        ON M.BR_ID = CMAP.BR_ID
               LEFT OUTER JOIN WAM_CTQ CM
                        ON CMAP.CTQ_ID = CM.CTQ_ID
               LEFT OUTER JOIN WAA_USER  B
                    ON M.RQST_USER_ID = B.USER_ID
                   AND B.EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d')
                   AND B.REG_TYP_CD IN ('C','U')
               LEFT OUTER JOIN WAA_USER  C
                    ON M.FRS_RQST_USER_ID = C.USER_ID
                   AND C.EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d')
                   AND C.REG_TYP_CD IN ('C','U')   
               LEFT OUTER JOIN WAA_USER  D
                    ON M.APRV_USER_ID = D.USER_ID
                   AND D.EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d')
                   AND D.REG_TYP_CD IN ('C','U')  
    WHERE  M.BR_ID = #{brId, jdbcType=VARCHAR}
  </select>
  
  <select id="selectBizruleProgQuality" resultMap="BaseResultMap" parameterType="kr.wise.dq.bizrule.service.WamBrMstr">
SELECT A.*
<!--         ,TO_CHAR(ROUND(WDQ_FC_DPMO(A.ER_CNT, A.ANA_CNT ), 2)) AS DPMO  -->
      ,CONVERT(ROUND(WDQ_FC_SIGMA(WDQ_FC_DPMO(A.ER_CNT, A.ANA_CNT )),2), CHAR) AS SIGMA  
      ,CASE WHEN A.ANA_CNT=0 THEN 0 ELSE CASE WHEN A.ER_CNT = 0 THEN 100 ELSE ROUND(((A.ANA_CNT-A.ER_CNT)/A.ANA_CNT*100),2) END END ER_RATE
  FROM (
        SELECT BM.DB_CONN_TRG_ID
             ,DBC.DB_CONN_TRG_LNM
              ,BR.ANA_DGR
              ,CONCAT( BR.ANA_DGR , ' 차') AS ANA_DGR_DISP
              ,MAX(BR.ANA_STR_DTM) AS ANA_STR_DTM
              ,SUM(BR.ANA_CNT) AS ANA_CNT
              ,SUM(BR.ER_CNT) AS ER_CNT
              
          FROM WAM_BR_MSTR BM
         INNER JOIN WAM_BR_RESULT BR
            ON BR.BR_ID = BM.BR_ID
           AND BM.REG_TYP_CD IN ('C', 'U')             
       INNER JOIN WAM_BIZ_AREA BIZ
          ON BM.BIZ_AREA_ID = BIZ.BIZ_AREA_ID
           AND BIZ.REG_TYP_CD IN ('C', 'U')
         INNER JOIN WAM_BR_DQI_MAP DQIMAP
            ON BM.BR_ID = DQIMAP.BR_ID
           AND DQIMAP.REG_TYP_CD IN ('C', 'U')
         INNER JOIN WAM_DQI DQI
            ON DQIMAP.DQI_ID = DQI.DQI_ID
           AND DQI.REG_TYP_CD IN ('C', 'U')
         LEFT OUTER JOIN WAM_BR_CTQ_MAP CTQMAP
            ON BM.BR_ID = CTQMAP.BR_ID
           AND CTQMAP.REG_TYP_CD IN ('C', 'U')
         LEFT OUTER JOIN WAM_CTQ CTQ
            ON CTQMAP.CTQ_ID = CTQ.CTQ_ID
           AND CTQ.REG_TYP_CD IN ('C', 'U')
         LEFT OUTER JOIN (<include refid="kr.wise.dq.criinfo.anatrg.service.AnaTrgMapper.AnaTrg" /> ) DBC              
            ON BM.DB_CONN_TRG_ID = DBC.DB_CONN_TRG_ID
           AND BM.DBC_TBL_NM = DBC.DBC_TBL_NM
           AND BM.DBC_COL_NM = DBC.DBC_COL_NM
           
         WHERE BR.ANA_DGR IS NOT NULL
         <if test="dbConnTrgId != null">
         AND BM.DB_CONN_TRG_ID = #{dbConnTrgId,jdbcType=VARCHAR}
         </if>
         <if test="dbcTblNm != null">
        AND (DBC.DBC_TBL_NM LIKE CONCAT('%' , #{dbcTblNm,jdbcType=VARCHAR} , '%' ) OR DBC.DBC_TBL_KOR_NM LIKE CONCAT('%' , #{dbcTblNm,jdbcType=VARCHAR} , '%')
          OR DBC.DBC_TBL_NM LIKE CONCAT('%' , UPPER(#{dbcTblNm,jdbcType=VARCHAR}) , '%') OR DBC.DBC_TBL_KOR_NM LIKE CONCAT( '%' , UPPER(#{dbcTblNm,jdbcType=VARCHAR}) , '%'))
        </if>
        <if test="dbcColNm != null">
        AND (DBC.DBC_COL_NM LIKE CONCAT('%' , #{dbcColNm,jdbcType=VARCHAR} , '%' )OR DBC.DBC_COL_KOR_NM LIKE CONCAT('%' , #{dbcColNm,jdbcType=VARCHAR} , '%')
          OR DBC.DBC_COL_NM LIKE CONCAT('%' , UPPER(#{dbcColNm,jdbcType=VARCHAR}) , '%') OR DBC.DBC_COL_KOR_NM LIKE CONCAT('%' , UPPER(#{dbcColNm,jdbcType=VARCHAR}) , '%'))
        </if>
         <if test="bizAreaLnm != null">
          AND BIZ.FULL_PATH LIKE CONCAT('%' , #{bizAreaLnm,jdbcType=VARCHAR} , '%')
         </if>
         <if test="dqiLnm != null">
          AND DQI.FULL_PATH LIKE CONCAT('%', #{dqiLnm,jdbcType=VARCHAR} , '%')
         </if>
         <if test="ctqLnm != null">
          AND CTQ.FULL_PATH LIKE CONCAT('%' , #{ctqLnm,jdbcType=VARCHAR} , '%')
         </if>
         <if test="brNm != null">
          AND BM.BR_NM LIKE CONCAT('%', #{brNm,jdbcType=VARCHAR}, '%')
         </if>
         <if test="anaDgr != null">
         AND BR.ANA_DGR = #{anaDgr,jdbcType=VARCHAR}
         </if>
         <if test='tgtVrfJoinCd == "N"  '>
       AND BM.TGT_VRF_JOIN_CD IS NULL
       </if>
       <if test='tgtVrfJoinCd == "Y"  '>
       AND BM.TGT_VRF_JOIN_CD IS NOT NULL
       </if>
         GROUP BY BR.ANA_DGR, BM.DB_CONN_TRG_ID, DBC.DB_CONN_TRG_LNM ) A
         ORDER BY A.DB_CONN_TRG_LNM is null 
				 ,A.DB_CONN_TRG_LNM  
  </select>
  
  <select id="selectBizareaProgQuality" resultMap="BaseResultMap" parameterType="kr.wise.dq.bizrule.service.WamBrMstr">
  SELECT A.*
<!--         ,TO_CHAR(ROUND(WDQ_FC_DPMO(A.ER_CNT, A.ANA_CNT ), 2)) AS DPMO  -->
      ,CONVERT(ROUND(WDQ_FC_SIGMA(WDQ_FC_DPMO(A.ER_CNT, A.ANA_CNT )),2), CHAR) AS SIGMA  
      ,CASE WHEN A.ANA_CNT = 0 THEN 0 ELSE 
			CASE WHEN A.ER_CNT = 0 THEN 100 ELSE ROUND(((A.ANA_CNT-A.ER_CNT)/A.ANA_CNT*100),2) END 
	   END ER_RATE
   FROM
       (SELECT DBC.DB_CONN_TRG_ID
             ,DBC.DB_CONN_TRG_LNM
             ,BIZ.BIZ_AREA_ID
             ,BIZ.BIZ_AREA_LNM
             ,BIZ.FULL_PATH
             ,IFNULL(SUM(BR.ANA_CNT),0) AS ANA_CNT
             ,IFNULL(SUM(BR.ER_CNT), 0) AS ER_CNT
             ,IFNULL(COUNT(BM.BR_ID),0) AS BR_CNT
           FROM WAM_BR_MSTR BM        
           INNER JOIN WAM_BIZ_AREA BIZ
              ON BM.BIZ_AREA_ID = BIZ.BIZ_AREA_ID
             AND BIZ.REG_TYP_CD IN ('C', 'U')
           INNER JOIN WAM_BR_DQI_MAP DQIMAP
              ON BM.BR_ID = DQIMAP.BR_ID
             AND DQIMAP.REG_TYP_CD IN ('C', 'U')
           INNER JOIN WAM_DQI DQI
              ON DQI.DQI_ID = DQIMAP.DQI_ID
             AND DQI.REG_TYP_CD IN ('C', 'U')
           LEFT OUTER JOIN WAM_BR_CTQ_MAP CTQMAP
              ON BM.BR_ID = CTQMAP.BR_ID
             AND CTQMAP.REG_TYP_CD IN ('C', 'U')
           LEFT OUTER JOIN WAM_CTQ CTQ
              ON CTQ.CTQ_ID = CTQMAP.CTQ_ID
             AND CTQ.REG_TYP_CD IN ('C', 'U')
           LEFT OUTER JOIN ( <include refid="kr.wise.dq.bizrule.service.WamBrResultMapper.getBrResultMaxAnaStrDtm"/>  ) BR
                ON BM.BR_ID = BR.BR_ID 
           LEFT OUTER JOIN (<include refid="kr.wise.dq.criinfo.anatrg.service.AnaTrgMapper.AnaTrg" /> ) DBC              
             ON BM.DB_CONN_TRG_ID = DBC.DB_CONN_TRG_ID
            AND BM.DBC_TBL_NM = DBC.DBC_TBL_NM
            AND BM.DBC_COL_NM = DBC.DBC_COL_NM
         WHERE BM.REG_TYP_CD IN ('C', 'U')
          <![CDATA[ AND ANA_CNT > 0 ]]>
            
            <if test="dbConnTrgId != null">
           AND BM.DB_CONN_TRG_ID = #{dbConnTrgId,jdbcType=VARCHAR}
           </if>
           <if test="dbcTblNm != null">
          AND (DBC.DBC_TBL_NM LIKE CONCAT('%' , #{dbcTblNm,jdbcType=VARCHAR} , '%') OR DBC.DBC_TBL_KOR_NM LIKE CONCAT('%' , #{dbcTblNm,jdbcType=VARCHAR} , '%')
            OR DBC.DBC_TBL_NM LIKE CONCAT('%' , UPPER(#{dbcTblNm,jdbcType=VARCHAR}) , '%') OR DBC.DBC_TBL_KOR_NM LIKE CONCAT('%' , UPPER(#{dbcTblNm,jdbcType=VARCHAR}), '%'))
         </if>
         <if test="dbcColNm != null">
          AND (DBC.DBC_COL_NM LIKE CONCAT('%' , #{dbcColNm,jdbcType=VARCHAR} , '%' ) OR DBC.DBC_COL_KOR_NM LIKE CONCAT('%', #{dbcColNm,jdbcType=VARCHAR} , '%')
            OR DBC.DBC_COL_NM LIKE CONCAT('%' , UPPER(#{dbcColNm,jdbcType=VARCHAR}) , '%') OR DBC.DBC_COL_KOR_NM LIKE CONCAT('%' , UPPER(#{dbcColNm,jdbcType=VARCHAR}) ,'%'))
         </if>
           <if test="bizAreaLnm != null">
           AND BIZ.FULL_PATH LIKE CONCAT('%' , #{bizAreaLnm,jdbcType=VARCHAR} , '%')
           </if>
           <if test="dqiLnm != null">
           AND DQI.FULL_PATH LIKE CONCAT('%' , #{dqiLnm,jdbcType=VARCHAR} , '%')
           </if>
           <if test="ctqLnm != null">
           AND CTQ.FULL_PATH LIKE CONCAT('%' , #{ctqLnm,jdbcType=VARCHAR} , '%')
           </if>
           <if test="brNm != null">
           AND BM.BR_NM LIKE CONCAT('%' , #{brNm,jdbcType=VARCHAR} , '%')
           </if>
           <if test="anaDgr != null">
           AND BR.ANA_DGR = #{anaDgr,jdbcType=VARCHAR}
           </if>
          <if test='tgtVrfJoinCd == "N"  '>
         AND BM.TGT_VRF_JOIN_CD IS NULL
         </if>
         <if test='tgtVrfJoinCd == "Y"  '>
         AND BM.TGT_VRF_JOIN_CD IS NOT NULL
          </if>
         GROUP BY DBC.DB_CONN_TRG_ID, DBC.DB_CONN_TRG_LNM, BIZ.BIZ_AREA_ID, BIZ.BIZ_AREA_LNM, BIZ.FULL_PATH
             ) A
       
         ORDER BY DB_CONN_TRG_LNM IS NULL, DB_CONN_TRG_LNM, FULL_PATH
  
  </select>
  <select id="selectDqiProgQuality" resultMap="BaseResultMap" parameterType="kr.wise.dq.bizrule.service.WamBrMstr">
  SELECT A.*
<!--         ,TO_CHAR(ROUND(WDQ_FC_DPMO(A.ER_CNT, A.ANA_CNT ), 2)) AS DPMO  -->
      ,CAST(ROUND(WDQ_FC_SIGMA(WDQ_FC_DPMO(A.ER_CNT, A.ANA_CNT )),2) AS CHAR) AS SIGMA  
      ,CASE WHEN A.ANA_CNT = 0 THEN 0 ELSE CASE WHEN A.ER_CNT = 0 THEN 100 ELSE ROUND(((A.ANA_CNT-A.ER_CNT)/A.ANA_CNT*100),2) END END ER_RATE
   FROM
       (SELECT DBC.DB_CONN_TRG_ID
             ,DBC.DB_CONN_TRG_LNM
             ,DQI.DQI_ID
             ,DQI.DQI_LNM
             ,DQI.FULL_PATH
             ,IFNULL(SUM(BR.ANA_CNT),0) AS ANA_CNT
             ,IFNULL(SUM(BR.ER_CNT), 0) AS ER_CNT
             ,IFNULL(COUNT(BM.BR_ID),0) AS BR_CNT
           FROM WAM_BR_MSTR BM        
           INNER JOIN WAM_BIZ_AREA BIZ
              ON BM.BIZ_AREA_ID = BIZ.BIZ_AREA_ID
             AND BIZ.REG_TYP_CD IN ('C', 'U')
           INNER JOIN WAM_BR_DQI_MAP DQIMAP
              ON BM.BR_ID = DQIMAP.BR_ID
             AND DQIMAP.REG_TYP_CD IN ('C', 'U')
           INNER JOIN WAM_DQI DQI
              ON DQI.DQI_ID = DQIMAP.DQI_ID
             AND DQI.REG_TYP_CD IN ('C', 'U')
           LEFT OUTER JOIN WAM_BR_CTQ_MAP CTQMAP
              ON BM.BR_ID = CTQMAP.BR_ID
             AND CTQMAP.REG_TYP_CD IN ('C', 'U')
           LEFT OUTER JOIN WAM_CTQ CTQ
              ON CTQ.CTQ_ID = CTQMAP.CTQ_ID
             AND CTQ.REG_TYP_CD IN ('C', 'U')
           LEFT OUTER JOIN ( <include refid="kr.wise.dq.bizrule.service.WamBrResultMapper.getBrResultMaxAnaStrDtm"/>  ) BR
                ON BM.BR_ID = BR.BR_ID 
           LEFT OUTER JOIN (<include refid="kr.wise.dq.criinfo.anatrg.service.AnaTrgMapper.AnaTrg" /> ) DBC              
             ON BM.DB_CONN_TRG_ID = DBC.DB_CONN_TRG_ID
            AND BM.DBC_TBL_NM = DBC.DBC_TBL_NM
            AND BM.DBC_COL_NM = DBC.DBC_COL_NM
         WHERE BM.REG_TYP_CD IN ('C', 'U') 
         <![CDATA[ AND ANA_CNT > 0 ]]>
            <if test="dbConnTrgId != null">
           AND BM.DB_CONN_TRG_ID = #{dbConnTrgId,jdbcType=VARCHAR}
           </if>
           <if test="dbcTblNm != null">
          AND (DBC.DBC_TBL_NM LIKE CONCAT( '%' , #{dbcTblNm,jdbcType=VARCHAR} , '%') OR DBC.DBC_TBL_KOR_NM LIKE CONCAT( '%' , #{dbcTblNm,jdbcType=VARCHAR} , '%' )
            OR DBC.DBC_TBL_NM LIKE CONCAT( '%' , UPPER(#{dbcTblNm,jdbcType=VARCHAR}) , '%' )OR DBC.DBC_TBL_KOR_NM LIKE CONCAT(  '%' , UPPER(#{dbcTblNm,jdbcType=VARCHAR}) , '%'))
         </if>
         <if test="dbcColNm != null">
          AND (DBC.DBC_COL_NM LIKE CONCAT(  '%' , #{dbcColNm,jdbcType=VARCHAR} , '%') OR DBC.DBC_COL_KOR_NM LIKE CONCAT( '%' , #{dbcColNm,jdbcType=VARCHAR} , '%')
            OR DBC.DBC_COL_NM LIKE CONCAT( '%' , UPPER(#{dbcColNm,jdbcType=VARCHAR}) , '%' ) OR DBC.DBC_COL_KOR_NM LIKE CONCAT( '%' , UPPER(#{dbcColNm,jdbcType=VARCHAR}) , '%'))
         </if>
           <if test="bizAreaLnm != null">
           AND BIZ.FULL_PATH LIKE CONCAT( '%' , #{bizAreaLnm,jdbcType=VARCHAR} , '%')
           </if>
           <if test="dqiLnm != null">
           AND DQI.FULL_PATH LIKE CONCAT( '%' , #{dqiLnm,jdbcType=VARCHAR} , '%')
           </if>
           <if test="ctqLnm != null">
           AND CTQ.FULL_PATH LIKE CONCAT( '%' , #{ctqLnm,jdbcType=VARCHAR} , '%')
           </if>
           <if test="brNm != null">
           AND BM.BR_NM LIKE CONCAT( '%' , #{brNm,jdbcType=VARCHAR} , '%')
           </if>
           <if test="anaDgr != null">
           AND BR.ANA_DGR = #{anaDgr,jdbcType=VARCHAR}
           </if>
          <if test='tgtVrfJoinCd == "N"  '>
         AND BM.TGT_VRF_JOIN_CD IS NULL
         </if>
         <if test='tgtVrfJoinCd == "Y"  '>
         AND BM.TGT_VRF_JOIN_CD IS NOT NULL
          </if>
         GROUP BY DBC.DB_CONN_TRG_ID, DBC.DB_CONN_TRG_LNM, DQI.DQI_ID, DQI.DQI_LNM, DQI.FULL_PATH
             ) A
       
         ORDER BY DB_CONN_TRG_LNM IS NULL,DB_CONN_TRG_LNM, FULL_PATH
  
  </select>
  <select id="selectCtqProgQuality" resultMap="BaseResultMap" parameterType="kr.wise.dq.bizrule.service.WamBrMstr">
  SELECT A.*
<!--         ,TO_CHAR(ROUND(WDQ_FC_DPMO(A.ER_CNT, A.ANA_CNT ), 2)) AS DPMO  -->
      ,CAST(ROUND(WDQ_FC_SIGMA(WDQ_FC_DPMO(A.ER_CNT, A.ANA_CNT )),2) AS CHAR) AS SIGMA  
      ,CASE WHEN A.ANA_CNT = 0 THEN 0 ELSE CASE WHEN A.ER_CNT=0 THEN 100 ELSE ROUND(((A.ANA_CNT-A.ER_CNT)/A.ANA_CNT*100),2)END END ER_RATE
   FROM
       (SELECT DBC.DB_CONN_TRG_ID
             ,DBC.DB_CONN_TRG_LNM
             ,CTQ.CTQ_ID
             ,CTQ.CTQ_LNM
             ,CTQ.FULL_PATH
             ,IFNULL(SUM(BR.ANA_CNT),0) AS ANA_CNT
             ,IFNULL(SUM(BR.ER_CNT), 0) AS ER_CNT
             ,IFNULL(COUNT(BM.BR_ID),0) AS BR_CNT
           FROM WAM_BR_MSTR BM        
           INNER JOIN WAM_BIZ_AREA BIZ
              ON BM.BIZ_AREA_ID = BIZ.BIZ_AREA_ID
             AND BIZ.REG_TYP_CD IN ('C', 'U')
           INNER JOIN WAM_BR_DQI_MAP DQIMAP
              ON BM.BR_ID = DQIMAP.BR_ID
             AND DQIMAP.REG_TYP_CD IN ('C', 'U')
           INNER JOIN WAM_DQI DQI
              ON DQI.DQI_ID = DQIMAP.DQI_ID
             AND DQI.REG_TYP_CD IN ('C', 'U')
           INNER JOIN WAM_BR_CTQ_MAP CTQMAP
              ON BM.BR_ID = CTQMAP.BR_ID
             AND CTQMAP.REG_TYP_CD IN ('C', 'U')
           INNER JOIN WAM_CTQ CTQ
              ON CTQ.CTQ_ID = CTQMAP.CTQ_ID
             AND CTQ.REG_TYP_CD IN ('C', 'U')
           LEFT OUTER JOIN ( <include refid="kr.wise.dq.bizrule.service.WamBrResultMapper.getBrResultMaxAnaStrDtm"/>  ) BR
                ON BM.BR_ID = BR.BR_ID 
           LEFT OUTER JOIN (<include refid="kr.wise.dq.criinfo.anatrg.service.AnaTrgMapper.AnaTrg" /> ) DBC              
             ON BM.DB_CONN_TRG_ID = DBC.DB_CONN_TRG_ID
            AND BM.DBC_TBL_NM = DBC.DBC_TBL_NM
            AND BM.DBC_COL_NM = DBC.DBC_COL_NM
         WHERE BM.REG_TYP_CD IN ('C', 'U') 
         <![CDATA[ AND ANA_CNT > 0 ]]>
            <if test="dbConnTrgId != null">
           AND BM.DB_CONN_TRG_ID = #{dbConnTrgId,jdbcType=VARCHAR}
           </if>
           <if test="dbcTblNm != null">
          AND (DBC.DBC_TBL_NM LIKE CONCAT( '%' , #{dbcTblNm,jdbcType=VARCHAR} , '%' )OR DBC.DBC_TBL_KOR_NM LIKE CONCAT(  '%' , #{dbcTblNm,jdbcType=VARCHAR} , '%')
            OR DBC.DBC_TBL_NM LIKE CONCAT( '%' , UPPER(#{dbcTblNm,jdbcType=VARCHAR}) , '%' )OR DBC.DBC_TBL_KOR_NM LIKE CONCAT(  '%' , UPPER(#{dbcTblNm,jdbcType=VARCHAR}), '%'))
         </if>
         <if test="dbcColNm != null">
          AND (DBC.DBC_COL_NM LIKE CONCAT( '%' , #{dbcColNm,jdbcType=VARCHAR} , '%') OR DBC.DBC_COL_KOR_NM LIKE CONCAT( '%' , #{dbcColNm,jdbcType=VARCHAR} , '%')
            OR DBC.DBC_COL_NM LIKE CONCAT( '%' , UPPER(#{dbcColNm,jdbcType=VARCHAR}) , '%') OR DBC.DBC_COL_KOR_NM LIKE CONCAT( '%' , UPPER(#{dbcColNm,jdbcType=VARCHAR}) , '%'))
         </if>
           <if test="bizAreaLnm != null">
           AND BIZ.FULL_PATH LIKE CONCAT( '%' , #{bizAreaLnm,jdbcType=VARCHAR} , '%')
           </if>
           <if test="dqiLnm != null">
           AND DQI.FULL_PATH LIKE CONCAT( '%' , #{dqiLnm,jdbcType=VARCHAR}, '%')
           </if>
           <if test="ctqLnm != null">
           AND CTQ.FULL_PATH LIKE CONCAT( '%' , #{ctqLnm,jdbcType=VARCHAR} , '%')
           </if>
           <if test="brNm != null">
           AND BM.BR_NM LIKE CONCAT( '%' , #{brNm,jdbcType=VARCHAR} , '%')
           </if>
           <if test="anaDgr != null">
           AND BR.ANA_DGR = #{anaDgr,jdbcType=VARCHAR}
           </if>
          <if test='tgtVrfJoinCd == "N"  '>
         AND BM.TGT_VRF_JOIN_CD IS NULL
         </if>
         <if test='tgtVrfJoinCd == "Y"  '>
         AND BM.TGT_VRF_JOIN_CD IS NOT NULL
         </if>
          
         GROUP BY DBC.DB_CONN_TRG_ID, DBC.DB_CONN_TRG_LNM, CTQ.CTQ_ID, CTQ.CTQ_LNM, CTQ.FULL_PATH
             ) A
       
         ORDER BY DB_CONN_TRG_LNM IS NULL,DB_CONN_TRG_LNM, FULL_PATH
  
  </select>
  
  <select id="selectBizruleXlsxList"  parameterType="map" resultMap="ResultMapWithBLOBs" >
     
      SELECT  A.BR_NM AS BR_NM    --   업무규칙명
        ,A.BR_ID AS BR_ID     --  업무규칙ID
        ,B.BIZ_AREA_ID    --  업무영역ID
        ,B.FULL_PATH AS BIZ_AREA_LNM    --  업무영역명
        ,DB.DB_CONN_TRG_LNM AS DB_CONN_TRG_LNM     --  진단대상명
        ,DB.DB_CONN_TRG_PNM AS DB_CONN_TRG_PNM     --  진단대상물리명
        ,DB.DB_CONN_TRG_ID AS DB_CONN_TRG_ID     --  진단대상ID
        ,A.DBC_TBL_NM AS DBC_TBL_NM  --  테이블명
        ,A.DBC_COL_NM AS DBC_COL_NM  --  컬럼명
        ,D.DQI_ID AS DQI_ID     --  데이터품질지표ID
        ,DM.FULL_PATH AS DQI_LNM  --  데이터품질지표명
<!--           ,DM.DQI_LNM AS DQI_LNM   -->
        ,C.CTQ_ID AS CTQ_ID   --  중요정보항목ID
        ,CM.FULL_PATH AS CTQ_LNM    --  중요정보항목명
<!--           ,CM.CTQ_LNM AS CTQ_LNM    -->  
        ,R.ANA_STR_DTM AS BASE_DTTM    --  최근측정일자
        ,R.ANA_CNT AS ANA_CNT  --  분석건수
        ,R.ER_CNT AS ER_CNT   --  오류건수
        ,TRIM( TRAILING '.' FROM ROUND(R.ERR_RATE, 1)) AS ER_RATE --  오류율
        ,A.CNT_SQL AS CNT_SQL       --  건수SQL
        ,A.ER_CNT_SQL AS ER_CNT_SQL     --  오류건수SQL
        ,A.ANA_SQL AS ANA_SQL       --  분석SQL
        ,R.ANA_DGR    --  분석차수
        ,CASE WHEN R.ANA_DGR IS NULL THEN '' ELSE CONCAT(R.ANA_DGR,' 차') END AS ANA_DGR_DISP --  최근실행차수
        ,A.BR_CRGP_USER_ID AS BR_CRGP_USER_ID   --  업무규칙담당자ID
        ,U.USER_NM AS BR_CRGP_USER_NM
        ,A.GL_NV AS GL_NV   --  목표치
        ,A.AGR_NV       --  가중치
        ,A.USE_YN    --  사용여부
        ,A.OBJ_DESCN --  설명
        ,A.TGT_DB_CONN_TRG_ID   --  검증대상명
        ,TGT_DB.DB_CONN_TRG_PNM AS TGT_DB_CONN_TRG_PNM --  검증대상DB명
        ,A.TGT_DBC_TBL_NM       --  검증테이블명
        ,A.TGT_DBC_COL_NM       --  검증컬럼명
        ,A.TGT_KEY_DBC_COL_NM       --  검증비교KEY컬럼
        ,A.TGT_KEY_DBC_COL_VAL      --  검증비교값컬럼
        ,A.TGT_CNT_SQL      --  건수SQL(검증)
        ,A.TGT_ANA_SQL      --  분석SQL(검증)
<!--           ,TO_CHAR(ROUND(WDQ_FC_DPMO(R.ER_CNT,R.ANA_CNT), 2)) AS DPMO                  -->
       ,CAST(ROUND(WDQ_FC_SIGMA(WDQ_FC_DPMO(R.ER_CNT,R.ANA_CNT)), 2) AS CHAR) AS SIGMA
<!--          ,S.DB_SCH_LNM -->
       ,A.TGT_VRF_JOIN_CD
       ,A.FRS_RQST_DTM   --  최초요청일시
       ,A.FRS_RQST_USER_ID  --  최초요청사용자ID
       ,GET_USER_NM(A.FRS_RQST_USER_ID) AS FRS_RQST_USER_NM   --  최초요청사용자명
       ,A.RQST_DTM   --  요청일시
       ,A.RQST_USER_ID  --  요청사용자ID
       ,GET_USER_NM(A.RQST_USER_ID) AS RQST_USER_NM  --  요청사용자명
       ,A.APRV_DTM   --  승인일시
       ,A.APRV_USER_ID  --  승인사용자ID
       ,GET_USER_NM(A.APRV_USER_ID) AS APRV_USER_NM  --  승인사용자명
       <!--   분석실행 사용 컬럼 -->
       ,A.BR_NM AS ETC_JOB_NM   
        ,A.BR_ID AS SHD_JOB_ID         
       ,(CASE WHEN R.ER_CNT IS NULL THEN NULL
                      ELSE (CASE WHEN R.ER_CNT = '0' THEN  NULL
                                     ELSE '#FF0000'
                                     END  )
                       END  ) AS FontColor
FROM  WAA_DB_CONN_TRG DB     
       INNER JOIN WAM_BR_MSTR  A                                              
         ON DB.DB_CONN_TRG_ID = A.DB_CONN_TRG_ID 
         AND A.REG_TYP_CD IN ('C','U')                     
        INNER JOIN WAM_BR_DQI_MAP D
                    ON A.BR_ID = D.BR_ID
           AND D.REG_TYP_CD IN ('C','U')
        INNER JOIN  WAM_DQI DM
                    ON D.DQI_ID = DM.DQI_ID  
        AND DM.REG_TYP_CD IN ('C','U')
        INNER JOIN WAM_BIZ_AREA  B 
                    ON A.BIZ_AREA_ID = B.BIZ_AREA_ID
           AND B.REG_TYP_CD IN ('C','U')
        LEFT OUTER JOIN WAM_BR_CTQ_MAP C
                    ON A.BR_ID = C.BR_ID
        AND C.REG_TYP_CD IN ('C','U')
          LEFT OUTER JOIN WAM_CTQ CM
                    ON C.CTQ_ID = CM.CTQ_ID
          AND CM.REG_TYP_CD IN ('C','U')
         LEFT OUTER JOIN WAA_USER U
           ON A.BR_CRGP_USER_ID = U.USER_ID
          AND U.REG_TYP_CD IN ('C','U')
          AND U.EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d')
         LEFT OUTER JOIN WAA_DB_CONN_TRG TGT_DB
          ON A.TGT_DB_CONN_TRG_ID = TGT_DB.DB_CONN_TRG_ID
         AND TGT_DB.EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d')  
         AND TGT_DB.REG_TYP_CD IN ('C','U')      
          <!--   최근실행일자 -->
         LEFT OUTER JOIN (
         
            SELECT R.*
                 , CASE WHEN R.ANA_CNT = 0 THEN 0 ELSE ROUND(R.ER_CNT*100/R.ANA_CNT,2) END AS ERR_RATE
              FROM WAM_BR_RESULT R
                INNER JOIN (SELECT BR_ID, MAX(ANA_STR_DTM) AS ANA_STR_DTM
                                  FROM WAM_BR_RESULT
                                
                                GROUP BY BR_ID ) R2
                    ON R.BR_ID = R2.BR_ID
                   AND R.ANA_STR_DTM = R2.ANA_STR_DTM
         ) R
           ON A.BR_ID = R.BR_ID 
   WHERE DB.EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d')  
     AND DB.REG_TYP_CD IN ('C','U')
    AND A.BR_ID IN ('${brId}')
      
  </select>
  
  <insert id="insertSelective" parameterType="kr.wise.dq.bizrule.service.WamBrMstr" >
    insert into WAM_BR_MSTR
    <trim prefix="(" suffix=")" suffixOverrides="," >
        BR_ID,
        BR_NM,
      <if test="dbConnTrgId != null" >
        DB_CONN_TRG_ID,
      </if>
      <if test="dbSchId != null" >
        DB_SCH_ID,
      </if>
      <if test="dbcTblNm != null" >
        DBC_TBL_NM,
      </if>
      <if test="dbcColNm != null" >
        DBC_COL_NM,
      </if>
      <if test="brCrgpUserId != null" >
        BR_CRGP_USER_ID,
      </if>
      <if test="agrNv != null" >
        AGR_NV,
      </if>
      <if test="glNv != null" >
        GL_NV,
      </if>
      <if test="useYn != null" >
        USE_YN,
      </if>
      <if test="objDescn != null" >
        OBJ_DESCN,
      </if>
      <if test="objVers != null" >
        OBJ_VERS,
      </if>
      <if test="regTypCd != null" >
        REG_TYP_CD,
      </if>
      <if test="frsRqstDtm != null" >
        FRS_RQST_DTM,
      </if>
      <if test="frsRqstUserId != null" >
        FRS_RQST_USER_ID,
      </if>
      <if test="rqstDtm != null" >
        RQST_DTM,
      </if>
      <if test="rqstUserId != null" >
        RQST_USER_ID,
      </if>
      <if test="aprvDtm != null" >
        APRV_DTM,
      </if>
      <if test="aprvUserId != null" >
        APRV_USER_ID,
      </if>
      <if test="cntSql != null" >
        CNT_SQL,
      </if>
      <if test="erCntSql != null" >
        ER_CNT_SQL,
      </if>
      <if test="anaSql != null" >
        ANA_SQL,
      </if>
      <if test="mngUserId != null and mngUserId !='' ">
        MNG_USER_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
        #{brId,jdbcType=VARCHAR},
        #{brNm,jdbcType=VARCHAR},
      <if test="dbConnTrgId != null" >
        #{dbConnTrgId,jdbcType=VARCHAR},
      </if>
      <if test="dbSchId != null" >
        #{dbSchId,jdbcType=VARCHAR},
      </if>
      <if test="dbcTblNm != null" >
        TRIM(UPPER(#{dbcTblNm,jdbcType=VARCHAR})),
      </if>
      <if test="dbcColNm != null" >
        TRIM(UPPER(#{dbcColNm,jdbcType=VARCHAR})),
      </if>
      <if test="brCrgpUserId != null" >
        #{brCrgpUserId,jdbcType=VARCHAR},
      </if>
      <if test="agrNv != null" >
        #{agrNv,jdbcType=DECIMAL},
      </if>
      <if test="glNv != null" >
        #{glNv,jdbcType=DECIMAL},
      </if>
      <if test="useYn != null" >
        #{useYn,jdbcType=VARCHAR},
      </if>
      <if test="objDescn != null" >
        #{objDescn,jdbcType=VARCHAR},
      </if>
      <if test="objVers != null" >
        #{objVers,jdbcType=DECIMAL},
      </if>
      <if test="regTypCd != null" >
        #{regTypCd,jdbcType=VARCHAR},
      </if>
      <if test="frsRqstDtm != null" >
        #{frsRqstDtm,jdbcType=TIMESTAMP},
      </if>
      <if test="frsRqstUserId != null" >
        #{frsRqstUserId,jdbcType=VARCHAR},
      </if>
      <if test="rqstDtm != null" >
        #{rqstDtm,jdbcType=TIMESTAMP},
      </if>
      <if test="rqstUserId != null" >
        #{rqstUserId,jdbcType=VARCHAR},
      </if>
      <if test="aprvDtm != null" >
        #{aprvDtm,jdbcType=TIMESTAMP},
      </if>
      <if test="aprvUserId != null" >
        #{aprvUserId,jdbcType=VARCHAR},
      </if>
      <if test="cntSql != null" >
        #{cntSql,jdbcType=CLOB},
      </if>
      <if test="erCntSql != null" >
        #{erCntSql,jdbcType=CLOB},
      </if>
      <if test="anaSql != null" >
        #{anaSql,jdbcType=CLOB},
      </if>
      <if test="mngUserId != null and mngUserId !='' ">
        #{mngUserId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="kr.wise.dq.bizrule.service.WamBrMstr" >
    update WAM_BR_MSTR
    <set >
      <if test="brNm != null" >
        BR_NM = #{brNm,jdbcType=VARCHAR},
      </if>
      <if test="dbConnTrgId != null" >
        DB_CONN_TRG_ID = #{dbConnTrgId,jdbcType=VARCHAR},
      </if>
      <if test="dbSchId != null">
        DB_SCH_ID =  #{dbSchId,jdbcType=VARCHAR},
     </if>
      <if test="dbcTblNm != null" >
        DBC_TBL_NM = TRIM(UPPER(#{dbcTblNm,jdbcType=VARCHAR})),
      </if>
      <if test="dbcColNm != null" >
        DBC_COL_NM = TRIM(UPPER(#{dbcColNm,jdbcType=VARCHAR})),
      </if>
      <if test="brCrgpUserId != null" >
        BR_CRGP_USER_ID = #{brCrgpUserId,jdbcType=VARCHAR},
      </if>
      <if test="agrNv != null" >
        AGR_NV = #{agrNv,jdbcType=DECIMAL},
      </if>
      <if test="glNv != null" >
        GL_NV = #{glNv,jdbcType=DECIMAL},
      </if>
      <if test="useYn != null" >
        USE_YN = #{useYn,jdbcType=VARCHAR},
      </if>
      <if test="objDescn != null" >
        OBJ_DESCN = #{objDescn,jdbcType=VARCHAR},
      </if>
      <if test="objVers != null" >
        OBJ_VERS = #{objVers,jdbcType=DECIMAL},
      </if>
      <if test="regTypCd != null" >
        REG_TYP_CD = #{regTypCd,jdbcType=VARCHAR},
      </if>
      <if test="frsRqstDtm != null" >
        FRS_RQST_DTM = #{frsRqstDtm,jdbcType=TIMESTAMP},
      </if>
      <if test="frsRqstUserId != null" >
        FRS_RQST_USER_ID = #{frsRqstUserId,jdbcType=VARCHAR},
      </if>
      <if test="rqstDtm != null" >
        RQST_DTM = #{rqstDtm,jdbcType=TIMESTAMP},
      </if>
      <if test="rqstUserId != null" >
        RQST_USER_ID = #{rqstUserId,jdbcType=VARCHAR},
      </if>
      <if test="aprvDtm != null" >
        APRV_DTM = #{aprvDtm,jdbcType=TIMESTAMP},
      </if>
      <if test="aprvUserId != null" >
        APRV_USER_ID = #{aprvUserId,jdbcType=VARCHAR},
      </if>
      <if test="cntSql != null" >
        CNT_SQL = #{cntSql,jdbcType=CLOB},
      </if>
      <if test="erCntSql != null" >
        ER_CNT_SQL = #{erCntSql,jdbcType=CLOB},
      </if>
      <if test="anaSql != null" >
        ANA_SQL = #{anaSql,jdbcType=CLOB},
      </if>
    </set>
    where BR_ID = #{brId,jdbcType=VARCHAR}
  </update>
  <delete id="deleteByPrimaryKey" parameterType="map">
  	DELETE FROM WAM_BR_MSTR
  	 WHERE BR_ID = #{brId,jdbcType=VARCHAR}
  </delete>
</mapper>