<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.wise.dq.bizrule.service.WaqBrMstrMapper" >
  <resultMap id="BaseResultMap" type="kr.wise.dq.bizrule.service.WaqBrMstr" extends="kr.wise.commons.cmm.service.CommonMapper.BaseResultMap">
<!--      <id column="RQST_NO" property="rqstNo" jdbcType="VARCHAR" /> -->
<!--      <id column="RQST_SNO" property="rqstSno" jdbcType="DECIMAL" /> -->
    <result column="BR_ID" property="brId" jdbcType="VARCHAR" />
    <result column="BR_NM" property="brNm" jdbcType="VARCHAR" />
    <result column="DB_CONN_TRG_ID" property="dbConnTrgId" jdbcType="VARCHAR" />
    <result column="DB_CONN_TRG_PNM" property="dbConnTrgPnm" jdbcType="VARCHAR" />
    <result column="DB_SCH_ID" property="dbSchId" jdbcType="VARCHAR" />
    <result column="DB_SCH_PNM" property="dbSchPnm" jdbcType="VARCHAR" />
    <result column="DBC_TBL_NM" property="dbcTblNm" jdbcType="VARCHAR" />
    <result column="DBC_COL_NM" property="dbcColNm" jdbcType="VARCHAR" />
    <result column="BIZ_AREA_ID" property="bizAreaId" jdbcType="VARCHAR" />
    <result column="BIZ_AREA_LNM" property="bizAreaLnm" jdbcType="VARCHAR" />
    <result column="BR_CRGP_USER_ID" property="brCrgpUserId" jdbcType="VARCHAR" />
    <result column="BR_CRGP_USER_NM" property="brCrgpUserNm" jdbcType="VARCHAR" />
    <result column="AGR_NV" property="agrNv" jdbcType="DECIMAL" />
    <result column="GL_NV" property="glNv" jdbcType="DECIMAL" />
    <result column="USE_YN" property="useYn" jdbcType="VARCHAR" />
    <result column="TGT_DB_CONN_TRG_ID" property="tgtDbConnTrgId" jdbcType="VARCHAR" />
    <result column="TGT_DB_CONN_TRG_PNM" property="tgtDbConnTrgPnm" jdbcType="VARCHAR" />
    <result column="TGT_DB_SCH_ID" property="tgtDbSchId" jdbcType="VARCHAR" />
    <result column="TGT_DB_SCH_PNM" property="tgtDbSchPnm" jdbcType="VARCHAR" />
    <result column="TGT_DBC_TBL_NM" property="tgtDbcTblNm" jdbcType="VARCHAR" />
    <result column="TGT_DBC_COL_NM" property="tgtDbcColNm" jdbcType="VARCHAR" />
    <result column="TGT_KEY_DBC_COL_NM" property="tgtKeyDbcColNm" jdbcType="VARCHAR" />
    <result column="TGT_KEY_DBC_COL_VAL" property="tgtKeyDbcColVal" jdbcType="VARCHAR" />
    <result column="TGT_VRF_JOIN_CD" property="tgtVrfJoinCd" jdbcType="VARCHAR" />
<!--      <result column="RQST_DCD" property="rqstDcd" jdbcType="VARCHAR" /> -->
<!--      <result column="RVW_STS_CD" property="rvwStsCd" jdbcType="VARCHAR" /> -->
<!--      <result column="RVW_CONTS" property="rvwConts" jdbcType="VARCHAR" /> -->
<!--      <result column="VRF_CD" property="vrfCd" jdbcType="VARCHAR" /> -->
<!--      <result column="VRF_RMK" property="vrfRmk" jdbcType="VARCHAR" /> -->
<!--      <result column="OBJ_DESCN" property="objDescn" jdbcType="VARCHAR" /> -->
<!--      <result column="OBJ_VERS" property="objVers" jdbcType="DECIMAL" /> -->
<!--      <result column="REG_TYP_CD" property="regTypCd" jdbcType="VARCHAR" /> -->
<!--      <result column="FRS_RQST_DTM" property="frsRqstDtm" jdbcType="TIMESTAMP" /> -->
<!--      <result column="FRS_RQST_USER_ID" property="frsRqstUserId" jdbcType="VARCHAR" /> -->
<!--      <result column="RQST_DTM" property="rqstDtm" jdbcType="TIMESTAMP" /> -->
<!--      <result column="RQST_USER_ID" property="rqstUserId" jdbcType="VARCHAR" /> -->
<!--      <result column="APRV_DTM" property="aprvDtm" jdbcType="TIMESTAMP" /> -->
<!--      <result column="APRV_USER_ID" property="aprvUserId" jdbcType="VARCHAR" /> -->
    
    
    <result column="CTQ_ID" property="ctqId" jdbcType="VARCHAR" />
    <result column="CTQ_LNM" property="ctqLnm" jdbcType="VARCHAR" />
    <result column="DQI_ID" property="dqiId" jdbcType="VARCHAR" />
    <result column="DQI_LNM" property="dqiLnm" jdbcType="VARCHAR" />
    
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="kr.wise.dq.bizrule.service.WaqBrMstr" extends="BaseResultMap" >
    <result column="CNT_SQL" property="cntSql" jdbcType="CLOB" />
    <result column="ER_CNT_SQL" property="erCntSql" jdbcType="CLOB" />
    <result column="ANA_SQL" property="anaSql" jdbcType="CLOB" />
    <result column="TGT_CNT_SQL" property="tgtCntSql" jdbcType="CLOB" />
    <result column="TGT_ER_CNT_SQL" property="tgtErCntSql" jdbcType="CLOB" />
    <result column="TGT_ANA_SQL" property="tgtAnaSql" jdbcType="CLOB" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    RQST_NO, RQST_SNO, BR_ID, BR_NM, DB_CONN_TRG_ID, DB_CONN_TRG_PNM, DB_SCH_ID, DB_SCH_PNM, 
    DBC_TBL_NM, DBC_COL_NM, BIZ_AREA_ID, BIZ_AREA_LNM, BR_CRGP_USER_ID, BR_CRGP_USER_NM, 
    AGR_NV, GL_NV, USE_YN, TGT_DB_CONN_TRG_ID, TGT_DB_CONN_TRG_PNM, TGT_DB_SCH_ID, TGT_DB_SCH_PNM, 
    TGT_DBC_TBL_NM, TGT_DBC_COL_NM, TGT_KEY_DBC_COL_NM, TGT_KEY_DBC_COL_VAL, TGT_VRF_JOIN_CD, RQST_DCD, 
    RVW_STS_CD, RVW_CONTS, VRF_CD, VRF_RMK, OBJ_DESCN, OBJ_VERS, REG_TYP_CD, FRS_RQST_DTM, 
    FRS_RQST_USER_ID, RQST_DTM, RQST_USER_ID, APRV_DTM, APRV_USER_ID
  </sql>
  
  <sql id="Blob_Column_List" >
    CNT_SQL, ER_CNT_SQL, ANA_SQL, TGT_CNT_SQL, TGT_ER_CNT_SQL, TGT_ANA_SQL
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="map" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from WAQ_BR_MSTR
    where RQST_NO = #{rqstNo,jdbcType=VARCHAR}
      and RQST_SNO = #{rqstSno,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="map" >
    delete from WAQ_BR_MSTR
    where RQST_NO = #{rqstNo,jdbcType=VARCHAR}
      and RQST_SNO = #{rqstSno,jdbcType=DECIMAL}
  </delete>

  <insert id="insertSelective" parameterType="kr.wise.dq.bizrule.service.WaqBrMstr" >
    insert into WAQ_BR_MSTR
    <trim prefix="(" suffix=")" suffixOverrides="," >
        RQST_NO,
        RQST_SNO,
      <if test="brId != null" >
        BR_ID,
      </if>
      <if test="brNm != null" >
        BR_NM,
      </if>
      <if test="dbConnTrgId != null" >
        DB_CONN_TRG_ID,
      </if>
      <if test="dbConnTrgPnm != null" >
        DB_CONN_TRG_PNM,
      </if>
      <if test="dbSchId != null" >
        DB_SCH_ID,
      </if>
      <if test="dbSchPnm != null" >
        DB_SCH_PNM,
      </if>
      <if test="dbcTblNm != null" >
        DBC_TBL_NM,
      </if>
      <if test="dbcColNm != null" >
        DBC_COL_NM,
      </if>
      <if test="bizAreaId != null" >
        BIZ_AREA_ID,
      </if>
      <if test="bizAreaLnm != null" >
        BIZ_AREA_LNM,
      </if>
      <if test="brCrgpUserId != null" >
        BR_CRGP_USER_ID,
      </if>
      <if test="brCrgpUserNm != null" >
        BR_CRGP_USER_NM,
      </if>
      <if test="agrNv != null" >
        AGR_NV,
      </if>
      <if test="glNv != null" >
        GL_NV,
      </if>
      <if test="useYn != null" >
        USE_YN,
      </if>
      <if test="tgtDbConnTrgId != null" >
        TGT_DB_CONN_TRG_ID,
      </if>
      <if test="tgtDbConnTrgPnm != null" >
        TGT_DB_CONN_TRG_PNM,
      </if>
      <if test="tgtDbSchId != null" >
        TGT_DB_SCH_ID,
      </if>
      <if test="tgtDbSchPnm != null" >
        TGT_DB_SCH_PNM,
      </if>
      <if test="tgtDbcTblNm != null" >
        TGT_DBC_TBL_NM,
      </if>
      <if test="tgtDbcColNm != null" >
        TGT_DBC_COL_NM,
      </if>
      <if test="tgtKeyDbcColNm != null" >
        TGT_KEY_DBC_COL_NM,
      </if>
      <if test="tgtKeyDbcColVal != null" >
        TGT_KEY_DBC_COL_VAL,
      </if>
      <if test="tgtVrfJoinCd != null" >
        TGT_VRF_JOIN_CD,
      </if>
      <if test="rqstDcd != null" >
        RQST_DCD,
      </if>
      <if test="rvwStsCd != null" >
        RVW_STS_CD,
      </if>
      <if test="rvwConts != null" >
        RVW_CONTS,
      </if>
      <if test="vrfCd != null" >
        VRF_CD,
      </if>
      <if test="vrfRmk != null" >
        VRF_RMK,
      </if>
      <if test="objDescn != null" >
        OBJ_DESCN,
      </if>
      <if test="objVers != null" >
        OBJ_VERS,
      </if>
      <if test="regTypCd != null" >
        REG_TYP_CD,
      </if>
      <if test="frsRqstDtm != null" >
        FRS_RQST_DTM,
      </if>
      <if test="frsRqstUserId != null" >
        FRS_RQST_USER_ID,
      </if>
      <if test="rqstDtm != null" >
        RQST_DTM,
      </if>
      <if test="rqstUserId != null" >
        RQST_USER_ID,
      </if>
      <if test="aprvDtm != null" >
        APRV_DTM,
      </if>
      <if test="aprvUserId != null" >
        APRV_USER_ID,
      </if>
      <if test="cntSql != null" >
        CNT_SQL,
      </if>
      <if test="erCntSql != null" >
        ER_CNT_SQL,
      </if>
      <if test="anaSql != null" >
        ANA_SQL,
      </if>
      <if test="tgtCntSql != null" >
        TGT_CNT_SQL,
      </if>
      <if test="tgtErCntSql != null" >
        TGT_ER_CNT_SQL,
      </if>
      <if test="tgtAnaSql != null" >
        TGT_ANA_SQL,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{rqstNo,jdbcType=VARCHAR},
        (SELECT IFNULL(MAX(RQST_SNO), 0) + 1 FROM WAQ_BR_MSTR WBM WHERE RQST_NO = #{rqstNo}) ,
      <if test="brId != null" >
        #{brId,jdbcType=VARCHAR},
      </if>
      <if test="brNm != null" >
        #{brNm,jdbcType=VARCHAR},
      </if>
      <if test="dbConnTrgId != null" >
        #{dbConnTrgId,jdbcType=VARCHAR},
      </if>
      <if test="dbConnTrgPnm != null" >
        TRIM(UPPER(#{dbConnTrgPnm,jdbcType=VARCHAR})),
      </if>
      <if test="dbSchId != null" >
        #{dbSchId,jdbcType=VARCHAR},
      </if>
      <if test="dbSchPnm != null" >
       TRIM(UPPER(#{dbSchPnm,jdbcType=VARCHAR})),
      </if>
      <if test="dbcTblNm != null" >
        TRIM(UPPER(#{dbcTblNm,jdbcType=VARCHAR})),
      </if>
      <if test="dbcColNm != null" >
        TRIM(UPPER(#{dbcColNm,jdbcType=VARCHAR})),
      </if>
      <if test="bizAreaId != null" >
        #{bizAreaId,jdbcType=VARCHAR},
      </if>
      <if test="bizAreaLnm != null" >
        TRIM(UPPER(#{bizAreaLnm,jdbcType=VARCHAR})),
      </if>
      <if test="brCrgpUserId != null" >
        #{brCrgpUserId,jdbcType=VARCHAR},
      </if>
      <if test="brCrgpUserNm != null" >
        #{brCrgpUserNm,jdbcType=VARCHAR},
      </if>
      <if test="agrNv != null" >
        #{agrNv,jdbcType=DECIMAL},
      </if>
      <if test="glNv != null" >
        #{glNv,jdbcType=DECIMAL},
      </if>
      <if test="useYn != null" >
        #{useYn,jdbcType=VARCHAR},
      </if>
      <if test="tgtDbConnTrgId != null" >
        #{tgtDbConnTrgId,jdbcType=VARCHAR},
      </if>
      <if test="tgtDbConnTrgPnm != null" >
        TRIM(UPPER(#{tgtDbConnTrgPnm,jdbcType=VARCHAR})),
      </if>
      <if test="tgtDbSchId != null" >
        #{tgtDbSchId,jdbcType=VARCHAR},
      </if>
      <if test="tgtDbSchPnm != null" >
        TRIM(UPPER(#{tgtDbSchPnm,jdbcType=VARCHAR})),
      </if>
      <if test="tgtDbcTblNm != null" >
       TRIM(UPPER(#{tgtDbcTblNm,jdbcType=VARCHAR})),
      </if>
      <if test="tgtDbcColNm != null" >
        TRIM(UPPER(#{tgtDbcColNm,jdbcType=VARCHAR})),
      </if>
      <if test="tgtKeyDbcColNm != null" >
        #{tgtKeyDbcColNm,jdbcType=VARCHAR},
      </if>
      <if test="tgtKeyDbcColVal != null" >
        #{tgtKeyDbcColVal,jdbcType=VARCHAR},
      </if>
      <if test="tgtVrfJoinCd != null" >
        #{tgtVrfJoinCd,jdbcType=VARCHAR},
      </if>
      <if test="rqstDcd != null" >
        #{rqstDcd,jdbcType=VARCHAR},
      </if>
      <if test="rvwStsCd != null" >
        #{rvwStsCd,jdbcType=VARCHAR},
      </if>
      <if test="rvwConts != null" >
        #{rvwConts,jdbcType=VARCHAR},
      </if>
      <if test="vrfCd != null" >
        #{vrfCd,jdbcType=VARCHAR},
      </if>
      <if test="vrfRmk != null" >
        #{vrfRmk,jdbcType=VARCHAR},
      </if>
      <if test="objDescn != null" >
        #{objDescn,jdbcType=VARCHAR},
      </if>
      <if test="objVers != null" >
        #{objVers,jdbcType=DECIMAL},
      </if>
      <if test="regTypCd != null" >
        #{regTypCd,jdbcType=VARCHAR},
      </if>
      <if test="frsRqstDtm != null" >
        #{frsRqstDtm,jdbcType=TIMESTAMP},
      </if>
      <if test="frsRqstUserId != null" >
        #{frsRqstUserId,jdbcType=VARCHAR},
      </if>
      <if test="rqstDtm != null" >
        #{rqstDtm,jdbcType=TIMESTAMP},
      </if>
      <if test="rqstUserId != null" >
        #{rqstUserId,jdbcType=VARCHAR},
      </if>
      <if test="aprvDtm != null" >
        #{aprvDtm,jdbcType=TIMESTAMP},
      </if>
      <if test="aprvUserId != null" >
        #{aprvUserId,jdbcType=VARCHAR},
      </if>
      <if test="cntSql != null" >
        #{cntSql,jdbcType=CLOB},
      </if>
      <if test="erCntSql != null" >
        #{erCntSql,jdbcType=CLOB},
      </if>
      <if test="anaSql != null" >
        #{anaSql,jdbcType=CLOB},
      </if>
      <if test="tgtCntSql != null" >
        #{tgtCntSql,jdbcType=CLOB},
      </if>
      <if test="tgtErCntSql != null" >
        #{tgtErCntSql,jdbcType=CLOB},
      </if>
      <if test="tgtAnaSql != null" >
        #{tgtAnaSql,jdbcType=CLOB},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="kr.wise.dq.bizrule.service.WaqBrMstr" >
    update WAQ_BR_MSTR
    <set >
      <if test="brId != null" >
        BR_ID = #{brId,jdbcType=VARCHAR},
      </if>
      <if test="brNm != null" >
        BR_NM = #{brNm,jdbcType=VARCHAR},
      </if>
      <if test="dbConnTrgId != null" >
        DB_CONN_TRG_ID = #{dbConnTrgId,jdbcType=VARCHAR},
      </if>
      <if test="dbConnTrgPnm != null" >
        DB_CONN_TRG_PNM = TRIM(UPPER(#{dbConnTrgPnm,jdbcType=VARCHAR})),
      </if>
      <if test="dbSchId != null">
        DB_SCH_ID =  #{dbSchId,jdbcType=VARCHAR},
     </if>
     <if test="dbSchPnm != null">
        DB_SCH_PNM = TRIM(UPPER(#{dbSchPnm,jdbcType=VARCHAR})),
      </if>
      <if test="dbcTblNm != null" >
        DBC_TBL_NM = TRIM(UPPER(#{dbcTblNm,jdbcType=VARCHAR})),
      </if>
      <if test="dbcColNm != null" >
        DBC_COL_NM = TRIM(UPPER(#{dbcColNm,jdbcType=VARCHAR})),
      </if>
      <if test="bizAreaId != null" >
        BIZ_AREA_ID = #{bizAreaId,jdbcType=VARCHAR},
      </if>
      <if test="bizAreaLnm != null" >
        BIZ_AREA_LNM = TRIM(UPPER(#{bizAreaLnm,jdbcType=VARCHAR})),
      </if>
      <if test="brCrgpUserId != null" >
        BR_CRGP_USER_ID = #{brCrgpUserId,jdbcType=VARCHAR},
      </if>
      <if test="brCrgpUserNm != null" >
        BR_CRGP_USER_NM = #{brCrgpUserNm,jdbcType=VARCHAR},
      </if>
      <if test="agrNv != null" >
        AGR_NV = #{agrNv,jdbcType=DECIMAL},
      </if>
      <if test="glNv != null" >
        GL_NV = #{glNv,jdbcType=DECIMAL},
      </if>
      <if test="useYn != null" >
        USE_YN = #{useYn,jdbcType=VARCHAR},
      </if>
      <if test="tgtDbConnTrgId != null" >
        TGT_DB_CONN_TRG_ID = #{tgtDbConnTrgId,jdbcType=VARCHAR},
      </if>
      <if test="tgtDbConnTrgPnm != null" >
        TGT_DB_CONN_TRG_PNM = TRIM(UPPER(#{tgtDbConnTrgPnm,jdbcType=VARCHAR})),
      </if>
      <if test="tgtDbSchId != null" >
        TGT_DB_SCH_ID = #{tgtDbSchId,jdbcType=VARCHAR},
      </if>
      <if test="tgtDbSchPnm != null" >
        TGT_DB_SCH_PNM = TRIM(UPPER(#{tgtDbSchPnm,jdbcType=VARCHAR})),
      </if>
      <if test="tgtDbcTblNm != null" >
        TGT_DBC_TBL_NM = TRIM(UPPER(#{tgtDbcTblNm,jdbcType=VARCHAR})),
      </if>
      <if test="tgtDbcColNm != null" >
        TGT_DBC_COL_NM = TRIM(UPPER(#{tgtDbcColNm,jdbcType=VARCHAR})),
      </if>
      <if test="tgtKeyDbcColNm != null" >
        TGT_KEY_DBC_COL_NM = #{tgtKeyDbcColNm,jdbcType=VARCHAR},
      </if>
      <if test="tgtKeyDbcColVal != null" >
        TGT_KEY_DBC_COL_VAL = #{tgtKeyDbcColVal,jdbcType=VARCHAR},
      </if>
      <if test="tgtVrfJoinCd != null" >
        TGT_VRF_JOIN_CD = #{tgtVrfJoinCd,jdbcType=VARCHAR},
      </if>
      <if test="rqstDcd != null" >
        RQST_DCD = #{rqstDcd,jdbcType=VARCHAR},
      </if>
      <if test="rvwStsCd != null" >
        RVW_STS_CD = #{rvwStsCd,jdbcType=VARCHAR},
      </if>
      <if test="rvwConts != null" >
        RVW_CONTS = #{rvwConts,jdbcType=VARCHAR},
      </if>
      <if test="vrfCd != null" >
        VRF_CD = #{vrfCd,jdbcType=VARCHAR},
      </if>
      <if test="vrfRmk != null" >
        VRF_RMK = #{vrfRmk,jdbcType=VARCHAR},
      </if>
      <if test="objDescn != null" >
        OBJ_DESCN = #{objDescn,jdbcType=VARCHAR},
      </if>
      <if test="objVers != null" >
        OBJ_VERS = #{objVers,jdbcType=DECIMAL},
      </if>
      <if test="regTypCd != null" >
        REG_TYP_CD = #{regTypCd,jdbcType=VARCHAR},
      </if>
      <if test="frsRqstDtm != null" >
        FRS_RQST_DTM = #{frsRqstDtm,jdbcType=TIMESTAMP},
      </if>
      <if test="frsRqstUserId != null" >
        FRS_RQST_USER_ID = #{frsRqstUserId,jdbcType=VARCHAR},
      </if>
      <if test="rqstDtm != null" >
        RQST_DTM = #{rqstDtm,jdbcType=TIMESTAMP},
      </if>
      <if test="rqstUserId != null" >
        RQST_USER_ID = #{rqstUserId,jdbcType=VARCHAR},
      </if>
      <if test="aprvDtm != null" >
        APRV_DTM = #{aprvDtm,jdbcType=TIMESTAMP},
      </if>
      <if test="aprvUserId != null" >
        APRV_USER_ID = #{aprvUserId,jdbcType=VARCHAR},
      </if>
      <if test="cntSql != null" >
        CNT_SQL = #{cntSql,jdbcType=CLOB},
      </if>
      <if test="erCntSql != null" >
        ER_CNT_SQL = #{erCntSql,jdbcType=CLOB},
      </if>
      <if test="anaSql != null" >
        ANA_SQL = #{anaSql,jdbcType=CLOB},
      </if>
      <if test="tgtCntSql != null" >
        TGT_CNT_SQL = #{tgtCntSql,jdbcType=CLOB},
      </if>
      <if test="tgtErCntSql != null" >
        TGT_ER_CNT_SQL = #{tgtErCntSql,jdbcType=CLOB},
      </if>
      <if test="tgtAnaSql != null" >
        TGT_ANA_SQL = #{tgtAnaSql,jdbcType=CLOB},
      </if>
    </set>
    where RQST_NO = #{rqstNo,jdbcType=VARCHAR}
      and RQST_SNO = #{rqstSno,jdbcType=DECIMAL}
  </update>
  
  <select id="selectrqstBizruleListbyMst" resultMap="ResultMapWithBLOBs" parameterType="kr.wise.commons.rqstmst.service.WaqMstr" >
  SELECT 
     A.RQST_NO, A.RQST_SNO, A.BR_ID, A.BR_NM, A.RQST_DCD
     <if test='rqstStepCd == "Q" '>
     , CASE WHEN A.RVW_STS_CD = '2' THEN '2' ELSE '0' END AS RVW_STS_CD
     </if>
     <if test='rqstStepCd != "Q" '>
     , A.RVW_STS_CD
     </if>
     , A.RVW_CONTS
     , A.VRF_CD, A.VRF_RMK, 
     A.DB_CONN_TRG_ID, A.DB_CONN_TRG_PNM, A.DB_SCH_ID, A.DB_SCH_PNM, A.DBC_TBL_NM, A.DBC_COL_NM, A.BIZ_AREA_ID, A.BIZ_AREA_LNM, A.BR_CRGP_USER_ID,
     A.BR_CRGP_USER_NM, A.AGR_NV, A.GL_NV, A.USE_YN, A.CNT_SQL, A.ER_CNT_SQL, A.ANA_SQL, 
     A.TGT_DB_CONN_TRG_ID, A.TGT_DB_CONN_TRG_PNM, A.TGT_DB_SCH_ID, A.TGT_DB_SCH_PNM, A.TGT_DBC_TBL_NM, A.TGT_DBC_COL_NM,
     A.TGT_KEY_DBC_COL_NM, A.TGT_KEY_DBC_COL_VAL, A.TGT_VRF_JOIN_CD, A.TGT_CNT_SQL, A.TGT_ER_CNT_SQL, A.TGT_ANA_SQL, 
    A.OBJ_DESCN, A.OBJ_VERS, A.REG_TYP_CD, A.FRS_RQST_DTM, 
    A.FRS_RQST_USER_ID, A.RQST_DTM, A.RQST_USER_ID, A.APRV_DTM, A.APRV_USER_ID,
    B.DQI_ID, B.DQI_LNM, C.CTQ_ID, C.CTQ_LNM
    , (CASE WHEN A.VRF_CD = '2' THEN '#FF0000' END  ) AS FontColor
    , U.USER_NM AS RQST_USER_NM
    FROM WAQ_BR_MSTR A 
         LEFT OUTER JOIN (SELECT RQST_NO
                            ,RQST_SNO
                            ,GROUP_CONCAT(DQI_LNM ORDER BY DQI_ID SEPARATOR ',') AS DQI_LNM
                            ,GROUP_CONCAT(DQI_ID ORDER BY DQI_ID SEPARATOR ',') AS DQI_ID
                       FROM WAQ_BR_DQI_MAP
                     WHERE RQST_NO = #{rqstNo,jdbcType=VARCHAR}
                     GROUP BY RQST_NO ,RQST_SNO ) B
         ON A.RQST_NO = B.RQST_NO
        AND A.RQST_SNO = B.RQST_SNO
       LEFT OUTER JOIN WAQ_BR_CTQ_MAP C
         ON A.RQST_NO = C.RQST_NO
        AND A.RQST_SNO = C.RQST_SNO
       LEFT OUTER JOIN WAA_USER U
         ON A.RQST_USER_ID = U.USER_ID
        AND U.EXP_DTM = DATE_FORMAT('9999-12-31', '%Y-%m-%d')
        AND U.REG_TYP_CD IN ('C', 'U')
    WHERE A.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
    <if test='rqstStepCd == "Q" '>
       AND A.VRF_CD = '1'
    </if>
    
    ORDER BY A.RQST_SNO
  </select>
  

  
  
    <!--   검증코드 UPDATE  -->
  <update id="updateCheckInit" parameterType="java.lang.String">
    update WAQ_BR_MSTR A
       set A.VRF_CD = '4' -- 검증전
            ,A.RVW_STS_CD = '0' -- 검토전
     where A.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
  </update>
  
  <!--   진단대상id update  -->
  <update id="updateDbConnId" parameterType="java.lang.String">
     update WAQ_BR_MSTR A, (select C.DB_CONN_TRG_ID, C.DB_SCH_ID ,B.DB_CONN_TRG_PNM ,C.DB_SCH_PNM   
                             from WAA_DB_CONN_TRG B
                                  INNER JOIN WAA_DB_SCH C
                                     ON B.DB_CONN_TRG_ID = C.DB_CONN_TRG_ID
                                    AND C.EXP_DTM = DATE_FORMAT('99991231', '%Y%m%d')
                                    AND C.REG_TYP_CD in ('C','U')
                            where B.EXP_DTM = DATE_FORMAT('99991231', '%Y%m%d')
                              and B.REG_TYP_CD in ('C','U')
                              
                              ) D
       set A.DB_CONN_TRG_ID = D.DB_CONN_TRG_ID
		   ,A.DB_SCH_ID = D.DB_SCH_ID
                          
     where A.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
			and UPPER(A.DB_CONN_TRG_PNM) = TRIM(UPPER(D.DB_CONN_TRG_PNM)) 
            and UPPER(A.DB_SCH_PNM) = TRIM(UPPER(D.DB_SCH_PNM)) 
  </update>
  <!--   업무영역ID update  -->
  <update id="updateBizAreaId" parameterType="java.lang.String">
    update WAQ_BR_MSTR A, (select B.BIZ_AREA_ID , B.FULL_PATH      
                             from WAM_BIZ_AREA B
                            where 1=1
                              and B.REG_TYP_CD in ('C','U')
                           ) C
       set A.BIZ_AREA_ID = C.BIZ_AREA_ID
     where A.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
     		and UPPER(A.BIZ_AREA_LNM) = TRIM(UPPER(C.FULL_PATH))
  </update>
  <!--   DQI ID update  -->
  <update id="updateDqiId" parameterType="java.lang.String">
    update WAQ_BR_DQI_MAP A,  (select B.DQI_ID, B.FULL_PATH   
                             from WAM_DQI B
                            where 1=1
                              and B.REG_TYP_CD in ('C','U')
                               ) C
       set A.DQI_ID = C.DQI_ID
     where A.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
     		and TRIM(UPPER(A.DQI_LNM)) = TRIM(UPPER(C.FULL_PATH))
     
  </update>
  <!--   CTQ ID update  -->
  <update id="updateCtqId" parameterType="java.lang.String">
    update WAQ_BR_CTQ_MAP A, (select B.CTQ_ID ,B.FULL_PATH         
                             from WAM_CTQ B
                            where 1=1
                              and B.REG_TYP_CD in ('C','U')
                               ) C
       set A.CTQ_ID =C.CTQ_ID
     where A.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
       AND A.CTQ_LNM IS NOT NULL
       and UPPER(A.CTQ_LNM) = TRIM(UPPER(C.FULL_PATH))
  </update>
  
  <!--  담당자ID UPDATE -->
  <update id="updateBrCrgpUserId" parameterType="java.lang.String">
    update WAQ_BR_MSTR A
         set A.BR_CRGP_USER_ID =
                          ( select B.USER_ID       
                             from WAA_USER B
                           where B.EXP_DTM = DATE_FORMAT('99991231', '%Y%m%d')
                              and B.REG_TYP_CD in ('C','U')
                              and (TRIM(UPPER(A.BR_CRGP_USER_NM)) = TRIM(UPPER(B.USER_NM))
                                    OR TRIM(UPPER(A.BR_CRGP_USER_NM)) = TRIM(UPPER(B.USER_ID))
                                     )
                           )
     where A.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
       AND A.BR_CRGP_USER_NM IS NOT NULL
  </update>
  
    <!--   타겟진단대상id update  -->
  <update id="updateTgtDbConnId" parameterType="java.lang.String">
    update WAQ_BR_MSTR A, (select C.DB_CONN_TRG_ID, C.DB_SCH_ID,B.DB_CONN_TRG_PNM, C.DB_SCH_PNM    
                             from WAA_DB_CONN_TRG B
                                  INNER JOIN WAA_DB_SCH C
                                     ON B.DB_CONN_TRG_ID = C.DB_CONN_TRG_ID
                                    AND C.EXP_DTM = DATE_FORMAT('99991231', '%Y%m%d')
                                    AND C.REG_TYP_CD in ('C','U')
                            where B.EXP_DTM = DATE_FORMAT('99991231', '%Y%m%d')
                              and B.REG_TYP_CD in ('C','U')
                              ) D
                              
       set A.TGT_DB_CONN_TRG_ID=D.DB_CONN_TRG_ID
       	   ,A.TGT_DB_SCH_ID=D.DB_SCH_ID
                          
     where A.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
       AND A.TGT_DB_CONN_TRG_PNM IS NOT NULL
       and UPPER(A.TGT_DB_CONN_TRG_PNM) = TRIM(UPPER(D.DB_CONN_TRG_PNM)) 
       and UPPER(A.TGT_DB_SCH_PNM) = TRIM(UPPER(D.DB_SCH_PNM)) 
  </update>
    
  
  <!--   OBJ_ID, OBJ_VERS UPDATE  -->
  <update id="updateObjInfo" parameterType="java.lang.String">
   update WAQ_BIZ_AREA A
          set A.REG_TYP_CD =(select case when A.RQST_DCD = 'DD' then 'D' else (case when MAX(B.BIZ_AREA_ID) IS NULL then 'C' else 'U' end) end
                                from WAM_BIZ_AREA B
                               where B.REG_TYP_CD in ('C','U')
                                 and B.BIZ_AREA_LNM = A.BIZ_AREA_LNM )
               , A.BIZ_AREA_ID = (select max(B.BIZ_AREA_ID) as BIZ_AREA_ID
                                from WAM_BIZ_AREA B
                               where B.REG_TYP_CD in ('C','U')
                                 and B.BIZ_AREA_LNM = A.BIZ_AREA_LNM )
               , A.OBJ_VERS = (select case when max(B.OBJ_VERS) is null then 1
                                              else max(B.OBJ_VERS)
                                              end as OBJ_VERS
                                from WAM_BIZ_AREA B
                               where B.REG_TYP_CD in ('C','U')
                                 and B.BIZ_AREA_LNM = A.BIZ_AREA_LNM ) 
               , A.FRS_RQST_DTM = (select  IFNULL(MAX(B.FRS_RQST_DTM), A.RQST_DTM) as FRS_RQST_DTM
                                from WAM_BIZ_AREA B
                               where B.REG_TYP_CD in ('C','U')
                                 and B.BIZ_AREA_LNM = A.BIZ_AREA_LNM )
               , A.FRS_RQST_USER_ID  =
                             (select  IFNULL(MAX(B.FRS_RQST_USER_ID), A.RQST_USER_ID) as FRS_RQST_USER_ID           
                                from WAM_BIZ_AREA B
                               where B.REG_TYP_CD in ('C','U')
                                 and B.BIZ_AREA_LNM = A.BIZ_AREA_LNM )
     where A.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
  </update>
  
  <update id="updateDelId" parameterType="java.lang.String">
    update WAQ_BR_MSTR A
       set (A.BIZ_AREA_ID
            , A.DB_CONN_TRG_ID
            , A.BR_ID) =
                          (select B.BIZ_AREA_ID,
                                  B.DB_CONN_TRG_ID,
                                  B.BR_ID           
                             from WAM_BR_MSTR B
                            where B.REG_TYP_CD in ('C','U')
                              and B.BR_NM = A.BR_NM )
     where A.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
     AND A.RQST_DCD = 'DD'
  </update>
  

  <insert id="checkNoChg" parameterType="map">
    <include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
      and A.REG_TYP_CD = 'U'
-- 검증쿼리
      and exists (select 1
                    from WAM_BR_MSTR D
                   where D.REG_TYP_CD in ('C','U')
                     and A.BR_NM = D.BR_NM
                     and IFNULL(A.BR_CRGP_USER_ID, '▦') = IFNULL(D.BR_CRGP_USER_ID, '▦')
                     and IFNULL(A.USE_YN, '▦') = IFNULL(D.USE_YN, '▦')
                     and UPPER(IFNULL((SELECT GROUP_CONCAT(DQI_ID ORDER BY DQI_ID SEPARATOR ',') AS DQI_ID
                                FROM WAQ_BR_DQI_MAP
                               WHERE REG_TYP_CD IN ('C', 'U')
                                 AND RQST_NO = A.RQST_NO
                                 AND RQST_SNO = A.RQST_SNO
                                 AND BR_ID = A.BR_ID), '▦') )
                             = UPPER(IFNULL((SELECT GROUP_CONCAT(DQI_ID ORDER BY DQI_ID SEPARATOR ',') AS DQI_ID 
                                      FROM WAM_BR_DQI_MAP 
                                      WHERE REG_TYP_CD IN ('C', 'U')
                                        AND BR_ID = A.BR_ID), '▦'))
                     and UPPER(IFNULL((SELECT CTQ_ID FROM 
                            WAQ_BR_CTQ_MAP
                            WHERE REG_TYP_CD IN ('C', 'U')
                            AND RQST_NO = A.RQST_NO
                            AND RQST_SNO = A.RQST_SNO
                            AND BR_ID = A.BR_ID), '▦') )
                             = UPPER(IFNULL((SELECT CTQ_ID FROM
                                   WAM_BR_CTQ_MAP 
                                   WHERE REG_TYP_CD IN ('C', 'U')
                                   AND BR_ID = A.BR_ID), '▦') )
                     and IFNULL(A.OBJ_DESCN, '▦') = IFNULL(D.OBJ_DESCN, '▦')
                     and IFNULL(A.DB_CONN_TRG_ID, '▦') = IFNULL(D.DB_CONN_TRG_ID, '▦')
                     and IFNULL(A.DB_SCH_ID, '▦') = IFNULL(D.DB_SCH_ID, '▦')
                     and IFNULL(A.BIZ_AREA_ID, '▦') = IFNULL(D.BIZ_AREA_ID, '▦')
                     and IFNULL(A.DBC_TBL_NM, '▦') = IFNULL(D.DBC_TBL_NM, '▦')
                     and IFNULL(A.DBC_COL_NM, '▦') = IFNULL(D.DBC_COL_NM, '▦')
                     <!--  AND DBMS_LOB.SUBSTR(A.CNT_SQL,1000) = DBMS_LOB.SUBSTR(D.CNT_SQL,1000) 
                     AND DBMS_LOB.SUBSTR(A.ANA_SQL,1000) = DBMS_LOB.SUBSTR(D.ANA_SQL,1000)--> 
                     AND SUBSTR(A.CNT_SQL,1,1000) = SUBSTR(D.CNT_SQL,1,1000) 
                     AND SUBSTR(A.ANA_SQL,1,1000) = SUBSTR(D.ANA_SQL,1,1000)
                     and IFNULL(A.TGT_DB_CONN_TRG_ID, '▦') = IFNULL(D.TGT_DB_CONN_TRG_ID, '▦')
                     and IFNULL(A.TGT_DBC_TBL_NM, '▦') = IFNULL(D.TGT_DBC_TBL_NM, '▦')
                     and IFNULL(A.TGT_DBC_COL_NM, '▦') = IFNULL(D.TGT_DBC_COL_NM, '▦')
                     and IFNULL(A.TGT_KEY_DBC_COL_NM, '▦') = IFNULL(D.TGT_KEY_DBC_COL_NM, '▦')
                     and IFNULL(A.TGT_KEY_DBC_COL_VAL, '▦') = IFNULL(D.TGT_KEY_DBC_COL_VAL, '▦')
--                      and A.TGT_CNT_SQL = D.TGT_CNT_SQL
--                      and A.TGT_ANA_SQL = D.TGT_ANA_SQL
                 )
  </insert>
  
  <!--  요청서내 중복자료 검증(BRA01) -->
  <insert id="checkDupBizrule" parameterType="map">
    <include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
-- 검증쿼리
      and exists (select 1
                    from WAQ_BR_MSTR D
                   where A.RQST_NO = D.RQST_NO
                      and A.BR_NM = D.BR_NM
                      and A.RQST_SNO != D.RQST_SNO)
  </insert>
  
  <insert id="checkNotExistBizrule" parameterType="map">
    <include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
      and A.RQST_DCD = 'DD'
-- 검증쿼리
      and not exists (select 1
                        from WAM_BR_MSTR D
                       where D.REG_TYP_CD in ('C','U')
                         and A.BR_NM = D.BR_NM
                      )
  </insert>
  
  <update id="updateVrfCd" parameterType="kr.wise.commons.rqstmst.service.WaqMstr">
    update WAQ_BR_MSTR A
       set A.VRF_CD = (select case when  IFNULL(MAX(B.RQST_SNO), 0) = 0 
                                         THEN '1' ELSE '2'  --  1: 등록가능 2: 검증오류
                                          END 
                             from WAQ_RQST_VRF_DTLS B 
                           where B.RQST_NO = A.RQST_NO
                              and B.RQST_SNO = A.RQST_SNO)
    where A.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
  </update>
  
  <insert id="checkNotExistBizarea" parameterType="map">
    <include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
-- 검증쿼리
      and A.RQST_DCD = 'CU'
      and A.BIZ_AREA_ID IS NULL
  </insert>
  <insert id="checkNotExistDqi" parameterType="map">
   INSERT INTO WAQ_RQST_VRF_DTLS
   (
       BIZ_DTL_CD
      , RQST_NO
     , RQST_SNO
     , VRF_SNO
     , RQST_DTL_SNO
     , VRF_DTL_CD
     , VRF_DTLS
   )
   SELECT DISTINCT
          #{bizDtlCd} AS BIZ_DTL_CD
           ,A.RQST_NO
          ,A.RQST_SNO
          ,IFNULL(C.VRF_SNO,0) + 1 AS VRF_SNO
          ,0 AS RQST_DTL_SNO
          ,#{vrfDtlCd} AS VRF_DTL_CD
          ,NULL AS VRF_DTLS
   FROM ${tblnm} A
   INNER JOIN WAQ_BR_MSTR B
   ON A.RQST_NO = B.RQST_NO
   AND A.RQST_SNO = B.RQST_SNO
   LEFT OUTER JOIN (SELECT MAX(VRF_SNO) AS VRF_SNO
                          ,RQST_NO
                          ,RQST_SNO
                    FROM WAQ_RQST_VRF_DTLS A
                    WHERE A.BIZ_DTL_CD = #{bizDtlCd}
                      AND A.RQST_NO = #{rqstNo}
                    GROUP BY RQST_NO, RQST_SNO) C
      ON A.RQST_NO = C.RQST_NO
     AND A.RQST_SNO = C.RQST_SNO
     WHERE A.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
-- 검증쿼리
      and B.RQST_DCD = 'CU'
      and A.DQI_ID IS NULL
  </insert>
  <insert id="checkNotExistCtq" parameterType="map">
    INSERT INTO WAQ_RQST_VRF_DTLS
    (
        BIZ_DTL_CD
      , RQST_NO
     , RQST_SNO
     , VRF_SNO
     , RQST_DTL_SNO
     , VRF_DTL_CD
     , VRF_DTLS
    )
   SELECT #{bizDtlCd} AS BIZ_DTL_CD
           ,A.RQST_NO
          ,A.RQST_SNO
          ,IFNULL(C.VRF_SNO,0) + 1 AS VRF_SNO
          ,0 AS RQST_DTL_SNO
          ,#{vrfDtlCd} AS VRF_DTL_CD
          ,NULL AS VRF_DTLS
   FROM ${tblnm} A
   LEFT OUTER JOIN WAQ_BR_MSTR B
   ON A.RQST_NO = B.RQST_NO
   AND A.RQST_SNO = B.RQST_SNO
   LEFT OUTER JOIN (SELECT MAX(VRF_SNO) AS VRF_SNO
                          ,RQST_NO
                          ,RQST_SNO
                    FROM WAQ_RQST_VRF_DTLS A
                    WHERE A.BIZ_DTL_CD = #{bizDtlCd}
                      AND A.RQST_NO = #{rqstNo}
                    GROUP BY RQST_NO, RQST_SNO) C
      ON A.RQST_NO = C.RQST_NO
     AND A.RQST_SNO = C.RQST_SNO
     WHERE A.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
-- 검증쿼리
      and B.RQST_DCD = 'CU'
      AND A.CTQ_LNM IS NOT NULL
      and A.CTQ_ID IS NULL
  </insert>

  <insert id="checkNoConnTrg" parameterType="map">
    <include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
-- 검증쿼리
      and A.RQST_DCD = 'CU'
      and (A.DB_CONN_TRG_ID IS NULL OR A.DB_SCH_ID IS NULL )
  </insert>
  <insert id="checkTtgConnTrg" parameterType="map">
    <include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
-- 검증쿼리
      and A.RQST_DCD = 'CU'
      and A.TGT_DB_CONN_TRG_PNM IS NOT NULL
      and A.TGT_DB_CONN_TRG_ID IS NULL
  </insert>
  
  <insert id="checkDupCrgpUserNm" parameterType="map">
    <include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
-- 검증쿼리
<![CDATA[
      AND A.RQST_DCD = 'CU'
      AND A.BR_CRGP_USER_NM IS NOT NULL
      AND 1 < (  SELECT B.CNT
                     FROM (  SELECT COUNT(B.USER_ID) AS CNT     
                                         , A.RQST_NO
                                         , A.RQST_SNO  
                                 FROM WAQ_BR_MSTR A
                                         INNER JOIN WAA_USER B
                                             ON TRIM(UPPER(A.BR_CRGP_USER_NM)) = TRIM(UPPER(B.USER_NM))
                               WHERE B.EXP_DTM = DATE_FORMAT('99991231', '%Y%m%d')
                                  AND B.REG_TYP_CD in ('C','U')
                                  AND A.RQST_NO = #{rqstNo}
                                group by A.RQST_NO, A.RQST_SNO, B.USER_NM ) B
                     WHERE A.RQST_NO= B.RQST_NO
                        AND A.RQST_SNO = B.RQST_SNO )
]]>
  </insert>
  
  
  <insert id="checkNoCrgpUserId" parameterType="map">
    <include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
-- 검증쿼리
      AND A.RQST_DCD = 'CU'
      AND A.BR_CRGP_USER_ID IS NULL
      AND A.BR_CRGP_USER_NM IS NOT NULL
  </insert>
  
  <insert id="checkNoDbcTbl" parameterType="map">
    <include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
-- 검증쿼리
      and A.RQST_DCD = 'CU'
      and not exists (select 1
                           from  WAT_DBC_TBL T
                         WHERE A.DB_CONN_TRG_ID = T.DB_CONN_TRG_ID
                            AND A.DB_SCH_ID = T.DB_SCH_ID
                            AND UPPER(A.DBC_TBL_NM) = TRIM(UPPER(T.DBC_TBL_NM)) 
                         )
  </insert>
  <insert id="checkNoDbcCol" parameterType="map">
    <include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
-- 검증쿼리
      and A.RQST_DCD = 'CU'
      and not exists (select 1
                         from WAT_DBC_TBL T
                              INNER JOIN WAT_DBC_COL C
                                   ON T.DB_SCH_ID = C.DB_SCH_ID
                                 AND T.DBC_TBL_NM = C.DBC_TBL_NM
                          WHERE A.DB_CONN_TRG_ID = T.DB_CONN_TRG_ID
                            AND A.DB_SCH_ID = T.DB_SCH_ID
                            AND UPPER(A.DBC_TBL_NM) = TRIM(UPPER(T.DBC_TBL_NM)) 
                            AND UPPER(A.DBC_COL_NM) = TRIM(UPPER(C.DBC_COL_NM)) 
                   )
  </insert>
  
    <insert id="checkNoTgtInfo" parameterType="map">
    <include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
             and A.RQST_DCD = 'CU'
             and (A.TGT_DB_CONN_TRG_PNM IS NOT NULL
                  OR A.TGT_DBC_TBL_NM IS NOT NULL
                  OR A.TGT_DBC_COL_NM IS NOT NULL
                  OR A.TGT_KEY_DBC_COL_NM IS NOT NULL
                  OR A.TGT_KEY_DBC_COL_VAL IS NOT NULL
                  OR A.TGT_CNT_SQL IS NOT NULL
                  OR A.TGT_ANA_SQL IS NOT NULL
                  OR A.TGT_VRF_JOIN_CD IS NOT NULL
                 )
             and (A.TGT_DBC_TBL_NM IS NULL
                  OR A.TGT_DBC_COL_NM IS NULL
                  OR A.TGT_KEY_DBC_COL_NM IS NULL
                  OR A.TGT_KEY_DBC_COL_VAL IS NULL
                  OR A.TGT_CNT_SQL IS NULL
                  OR A.TGT_ANA_SQL IS NULL
                  OR A.TGT_VRF_JOIN_CD IS NULL
                  )
  </insert>
  
    <insert id="checkNoTgtDbcTbl" parameterType="map">
    <include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
-- 검증쿼리
      and A.RQST_DCD = 'CU'
      and A.TGT_DBC_TBL_NM IS NOT NULL
      and not exists (SELECT 1 
                          FROM WAQ_BR_MSTR D
                               INNER JOIN WAT_DBC_TBL T
                            ON D.DB_CONN_TRG_ID = T.DB_CONN_TRG_ID
                    WHERE UPPER(A.TGT_DBC_TBL_NM) = TRIM(UPPER(T.DBC_TBL_NM)) 
                      AND A.RQST_NO = D.RQST_NO
                            AND A.RQST_SNO = D.RQST_SNO
                         )
  </insert>
  
    <insert id="checkNoTgtDbcCol" parameterType="map">
    <include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
-- 검증쿼리
      and A.RQST_DCD = 'CU'
      and A.TGT_DBC_COL_NM IS NOT NULL
      and not exists (SELECT 1 
                       FROM WAQ_BR_MSTR D
                       INNER JOIN WAT_DBC_TBL T
                          ON D.DB_CONN_TRG_ID = T.DB_CONN_TRG_ID
                       INNER JOIN WAT_DBC_COL C
                         ON T.DB_SCH_ID = C.DB_SCH_ID
                        AND T.DBC_TBL_NM = C.DBC_TBL_NM
                    WHERE UPPER(A.TGT_DBC_COL_NM) = TRIM(UPPER(C.DBC_COL_NM)) 
                      AND A.RQST_NO = D.RQST_NO
                            AND A.RQST_SNO = D.RQST_SNO
                         )
  </insert>
  
  
  <update id="updatervwStsCd" parameterType="kr.wise.dq.bizrule.service.WaqBrMstr" >
     UPDATE WAQ_BR_MSTR
     <set>
         RVW_STS_CD    = #{rvwStsCd} , 
        RVW_CONTS    = #{rvwConts} , 
        APRV_DTM   = now() ,
        APRV_USER_ID = #{aprvUserId} ,
     </set>
    WHERE RQST_NO = #{rqstNo,jdbcType=VARCHAR}
      AND RQST_SNO = #{rqstSno,jdbcType=DECIMAL}
      AND VRF_CD = '1'
      AND IFNULL(RVW_STS_CD, '_') != '2'
  </update>
  
  <sql id="wam_col">
         , BR_NM ,DB_CONN_TRG_ID, DB_SCH_ID, DBC_TBL_NM, DBC_COL_NM
         , BIZ_AREA_ID, BR_CRGP_USER_ID, AGR_NV, GL_NV, USE_YN, CNT_SQL, ER_CNT_SQL
         , ANA_SQL, TGT_DB_CONN_TRG_ID, TGT_DB_SCH_ID, TGT_DBC_TBL_NM, TGT_DBC_COL_NM
         , TGT_KEY_DBC_COL_NM, TGT_KEY_DBC_COL_VAL, TGT_VRF_JOIN_CD, TGT_CNT_SQL, TGT_ER_CNT_SQL, TGT_ANA_SQL
         , RQST_NO , RQST_SNO , OBJ_DESCN , OBJ_VERS , REG_TYP_CD 
      , FRS_RQST_DTM , FRS_RQST_USER_ID , RQST_DTM , RQST_USER_ID , APRV_DTM
      , APRV_USER_ID  
   </sql>
  
  <select id="selectWaqC" parameterType="map" resultMap="BaseResultMap">
      SELECT * FROM WAQ_BR_MSTR
      WHERE RQST_NO = #{rqstNo}
        AND RVW_STS_CD = '1'  -- 승인
        AND REG_TYP_CD = 'C'
   </select>
  
  <update id="updateidByKey" parameterType="kr.wise.dq.bizrule.service.WaqBrMstr" >
     UPDATE WAQ_BR_MSTR SET BR_ID = #{brId,jdbcType=VARCHAR}
      WHERE RQST_NO = #{rqstNo,jdbcType=VARCHAR}
       AND RQST_SNO = #{rqstSno,jdbcType=DECIMAL}
  </update>
  
  <update id="updateWaqCUD" parameterType="map">
      -- WAQ ID, VERS 등을 업데이트...
   UPDATE WAQ_BR_MSTR A
   SET (BR_ID, OBJ_VERS, FRS_RQST_DTM, FRS_RQST_USER_ID) = (
       SELECT 
             B.BR_ID AS BR_ID
           , IFNULL(B.OBJ_VERS, 0) + 1 AS OBJ_VERS
           , B.FRS_RQST_DTM
           , B.FRS_RQST_USER_ID
        FROM WAM_BR_MSTR B
       WHERE B.BR_ID = A.BR_ID
        AND B.REG_TYP_CD IN ('C', 'U')
   )
   WHERE A.RQST_NO = #{rqstNo}
   -- AND A.VRF_CD = '1'       -- 등록가능
   AND A.RVW_STS_CD = '1'  -- 승인
   AND EXISTS (
      SELECT 1
        FROM WAM_BR_MSTR B
       WHERE B.DB_CONN_TRG_ID = A.DB_CONN_TRG_ID
         AND B.BR_NM          = A.BR_NM
          AND B.REG_TYP_CD IN ('C', 'U')
   )
   </update>
  
  <delete id="deleteWAM" parameterType="map">
    -- WAM 삭제 (등록유형코드가REG_TYP_CD 변경, 삭제일 경우)
   DELETE FROM WAM_BR_MSTR A
   WHERE EXISTS (
       SELECT 1 FROM WAQ_BR_MSTR B
       WHERE B.RQST_NO = #{rqstNo}
         AND B.RVW_STS_CD = '1'
         AND B.DB_CONN_TRG_ID = A.DB_CONN_TRG_ID
         AND B.BR_NM          = A.BR_NM
   )
   </delete>
   
   <insert id="insertWAM" parameterType="map">
      -- WAM 추가 (WAQ 내용을 추가, REG_TYP_CD 가 신규,변경일 경우)
   INSERT INTO WAM_BR_MSTR
   (
     BR_ID    
     <include refid="wam_col"/>
   )
   SELECT BR_ID    
          <include refid="wam_col"/>
   
    FROM WAQ_BR_MSTR A
   WHERE A.RQST_NO = #{rqstNo}
     AND A.RVW_STS_CD = '1'
     AND A.REG_TYP_CD IN ('C', 'U')
   </insert>
  
  <update id="updateWAH"  parameterType="map">
      -- WAH 이력 만료...
   UPDATE WAH_BR_MSTR A
      SET EXP_DTM = now()
    WHERE EXP_DTM = DATE_FORMAT('9999-12-31', '%Y-%m-%d')
      AND EXISTS (
       SELECT 1 
         FROM WAQ_BR_MSTR B
        WHERE B.RQST_NO = #{rqstNo}
          AND B.RVW_STS_CD = '1'           
          AND B.DB_CONN_TRG_ID = A.DB_CONN_TRG_ID
          AND B.BR_NM          = A.BR_NM
       )   
   </update>
  
  <insert id="insertWAH"  parameterType="map">
      -- WAH이력 적재...
   INSERT INTO WAH_BR_MSTR
   (
       BR_ID
     , EXP_DTM
     , STR_DTM    
     <include refid="wam_col"/>
   )
   SELECT BR_ID
        , DATE_FORMAT( '9999-12-31', '%Y-%m-%d') AS EXP_DTM
        , now() AS STR_DTM    
        <include refid="wam_col"/>   
    FROM WAQ_BR_MSTR 
   WHERE RQST_NO = #{rqstNo}
     AND RVW_STS_CD = '1'
   </insert>
   
     <insert id="insertwam2waq" parameterType="map">
     INSERT INTO WAQ_BR_MSTR (RQST_NO, RQST_SNO, BR_ID, BR_NM, DB_CONN_TRG_ID, DB_CONN_TRG_PNM, DB_SCH_ID, DB_SCH_PNM,
                        DBC_TBL_NM, DBC_COL_NM, BIZ_AREA_ID, BIZ_AREA_LNM, BR_CRGP_USER_ID, BR_CRGP_USER_NM,
                        AGR_NV, GL_NV, USE_YN, CNT_SQL, ER_CNT_SQL, ANA_SQL, TGT_DB_CONN_TRG_ID, TGT_DB_CONN_TRG_PNM,
                        TGT_DB_SCH_ID, TGT_DB_SCH_PNM, TGT_DBC_TBL_NM, TGT_DBC_COL_NM, TGT_KEY_DBC_COL_NM, TGT_KEY_DBC_COL_VAL,
                        TGT_CNT_SQL, TGT_ER_CNT_SQL, TGT_ANA_SQL, RQST_DCD, OBJ_DESCN, OBJ_VERS, RQST_DTM, RQST_USER_ID)
     SELECT #{reqmst.rqstNo} 
          , (SELECT IFNULL(MAX(RQST_SNO), 0) FROM WAQ_BR_MSTR WHERE RQST_NO = #{reqmst.rqstNo}) + ROW_NUMBER() OVER()
          , A.BR_ID, A.BR_NM, A.DB_CONN_TRG_ID, DB.DB_CONN_TRG_PNM, A.DB_SCH_ID, S.DB_SCH_PNM,
          A.DBC_TBL_NM, A.DBC_COL_NM, A.BIZ_AREA_ID, B.FULL_PATH, A.BR_CRGP_USER_ID, GET_USER_NM(A.BR_CRGP_USER_ID) AS BR_CRGP_USER_NM,
         A.AGR_NV, A.GL_NV, A.USE_YN, A.CNT_SQL, A.ER_CNT_SQL, A.ANA_SQL, A.TGT_DB_CONN_TRG_ID, TGTDB.DB_CONN_TRG_PNM,
         A.TGT_DB_SCH_ID, TGTS.DB_SCH_PNM, A.TGT_DBC_TBL_NM, A.TGT_DBC_COL_NM, A.TGT_KEY_DBC_COL_NM, A.TGT_KEY_DBC_COL_VAL,
         A.TGT_CNT_SQL, A.TGT_ER_CNT_SQL, A.TGT_ANA_SQL, 'CU', A.OBJ_DESCN, A.OBJ_VERS
         ,now(), #{reqmst.rqstUserId,jdbcType=VARCHAR}
      FROM WAM_BR_MSTR A 
     INNER JOIN WAA_DB_CONN_TRG DB
         ON A.DB_CONN_TRG_ID = DB.DB_CONN_TRG_ID
       AND DB.REG_TYP_CD IN ('C', 'U')
       AND DB.EXP_DTM = DATE_FORMAT('9999-12-31', '%Y-%m-%d')
     INNER JOIN WAM_BIZ_AREA B
         ON A.BIZ_AREA_ID = B.BIZ_AREA_ID
       AND B.REG_TYP_CD IN ('C', 'U')
      LEFT OUTER JOIN WAA_DB_SCH S
         ON A.DB_SCH_ID = S.DB_SCH_ID
       AND S.EXP_DTM = DATE_FORMAT('9999-12-31', '%Y-%m-%d')
       AND S.REG_TYP_CD IN ('C', 'U')
      LEFT OUTER JOIN WAA_DB_CONN_TRG TGTDB
         ON A.TGT_DB_CONN_TRG_ID = TGTDB.DB_CONN_TRG_ID
       AND TGTDB.REG_TYP_CD IN ('C', 'U')
       AND TGTDB.EXP_DTM = DATE_FORMAT('9999-12-31', '%Y-%m-%d')
      LEFT OUTER JOIN WAA_DB_SCH TGTS
         ON A.DB_SCH_ID = TGTS.DB_SCH_ID
       AND TGTS.EXP_DTM = DATE_FORMAT('9999-12-31', '%Y-%m-%d')
       AND TGTS.REG_TYP_CD IN ('C', 'U')
      
     WHERE A.BR_ID IN 
     <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
        #{item.brId}
     </foreach>
       AND A.REG_TYP_CD IN ('C' , 'U')
  </insert>
  
</mapper>