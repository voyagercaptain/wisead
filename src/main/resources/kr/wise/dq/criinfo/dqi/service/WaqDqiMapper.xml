<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.wise.dq.criinfo.dqi.service.WaqDqiMapper" >
  <resultMap id="BaseResultMap" type="kr.wise.dq.criinfo.dqi.service.WaqDqiVO" extends="kr.wise.commons.cmm.service.CommonMapper.BaseResultMap">
<!--     <id column="RQST_NO" property="rqstNo" jdbcType="VARCHAR" /> -->
<!--     <id column="RQST_SNO" property="rqstSno" jdbcType="DECIMAL" /> -->
    <result column="DQI_ID" property="dqiId" jdbcType="VARCHAR" />
    <result column="DQI_LNM" property="dqiLnm" jdbcType="VARCHAR" />
    <result column="DQI_PNM" property="dqiPnm" jdbcType="VARCHAR" />
<!--     <result column="RQST_DCD" property="rqstDcd" jdbcType="VARCHAR" /> -->
<!--     <result column="RVW_STS_CD" property="rvwStsCd" jdbcType="VARCHAR" /> -->
<!--     <result column="RVW_CONTS" property="rvwConts" jdbcType="VARCHAR" /> -->
<!--     <result column="VRF_CD" property="vrfCd" jdbcType="VARCHAR" /> -->
<!--     <result column="VRF_RMK" property="vrfRmk" jdbcType="VARCHAR" /> -->
    <result column="DQI_LVL" property="dqiLvl" jdbcType="DECIMAL" />
    <result column="UPP_DQI_LNM" property="uppDqiLnm" jdbcType="VARCHAR" />
    <result column="UPP_DQI_PNM" property="uppDqiPnm" jdbcType="VARCHAR" />
    <result column="UPP_DQI_ID" property="uppDqiId" jdbcType="VARCHAR" />
<!--     <result column="OBJ_DESCN" property="objDescn" jdbcType="VARCHAR" /> -->
<!--     <result column="OBJ_VERS" property="objVers" jdbcType="DECIMAL" /> -->
<!--     <result column="REG_TYP_CD" property="regTypCd" jdbcType="VARCHAR" /> -->
<!--     <result column="FRS_RQST_DTM" property="frsRqstDtm" jdbcType="DATE" /> -->
<!--     <result column="FRS_RQST_USER_ID" property="frsRqstUserId" jdbcType="VARCHAR" /> -->
<!--     <result column="RQST_DTM" property="rqstDtm" jdbcType="DATE" /> -->
<!--     <result column="RQST_USER_ID" property="rqstUserId" jdbcType="VARCHAR" /> -->
<!--     <result column="RQST_USER_NM" property="rqstUserNm" jdbcType="VARCHAR" /> -->
<!--     <result column="APRV_DTM" property="aprvDtm" jdbcType="DATE" /> -->
<!--     <result column="APRV_USER_ID" property="aprvUserId" jdbcType="VARCHAR" /> -->
  </resultMap>
  <sql id="Base_Column_List" >
    RQST_NO, RQST_SNO, DQI_ID, DQI_LNM, DQI_PNM, RQST_DCD, RVW_STS_CD, 
    RVW_CONTS, VRF_CD, VRF_RMK, DQI_LVL, UPP_DQI_LNM, UPP_DQI_PNM, UPP_DQI_ID, 
    OBJ_DESCN, OBJ_VERS, REG_TYP_CD, FRS_RQST_DTM, FRS_RQST_USER_ID, RQST_DTM, RQST_USER_ID, 
    APRV_DTM, APRV_USER_ID
  </sql>
  
  <select id="selectDqiRqstList" parameterType="kr.wise.commons.rqstmst.service.WaqMstr" resultMap="BaseResultMap">
   SELECT 
     A.RQST_NO, A.RQST_SNO, A.DQI_ID, A.DQI_LNM, A.DQI_PNM, A.RQST_DCD
     <if test='rqstStepCd == "Q" '>
     , CASE WHEN A.RVW_STS_CD = '2' THEN '2' ELSE '0' END AS RVW_STS_CD
     </if>
     <if test='rqstStepCd != "Q" '>
     , A.RVW_STS_CD
     </if>
     , A.RVW_CONTS
     , A.VRF_CD, A.VRF_RMK, A.DQI_LVL, A.UPP_DQI_LNM, A.UPP_DQI_PNM, A.UPP_DQI_ID, A.OBJ_DESCN, A.OBJ_VERS, A.REG_TYP_CD, A.FRS_RQST_DTM, 
    A.FRS_RQST_USER_ID, A.RQST_DTM, A.RQST_USER_ID, A.APRV_DTM, A.APRV_USER_ID
    , (CASE WHEN A.VRF_CD = '2' THEN '#FF0000' END  ) AS FontColor
    , U.USER_NM AS RQST_USER_NM
    FROM WAQ_DQI A
    LEFT OUTER JOIN WAA_USER U
      ON A.RQST_USER_ID = U.USER_ID
     AND U.EXP_DTM = DATE_FORMAT( '9999-12-31', '%Y-%m-%d')
     AND U.REG_TYP_CD IN ('C', 'U')
    WHERE A.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
    <if test='rqstStepCd == "Q" '>
    	AND A.VRF_CD = '1'
    </if>
    
    ORDER BY A.RQST_SNO
  </select>
  
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="map" >
     select A.*, B.USER_NM AS RQST_USER_NM
       from WAQ_DQI A
            left outer join WAA_USER B
              on A.RQST_USER_ID = B.USER_ID
             and EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d')
             and REG_TYP_CD in ('C','U')
      where A.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
        and A.RQST_SNO = #{rqstSno,jdbcType=DECIMAL}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="map" >
    delete from WAQ_DQI
    where RQST_NO = #{rqstNo,jdbcType=VARCHAR}
      and RQST_SNO = #{rqstSno,jdbcType=DECIMAL}
  </delete>
  
  
  <insert id="insert" parameterType="kr.wise.dq.criinfo.dqi.service.WaqDqiVO" >
    insert into WAQ_DQI (RQST_NO, RQST_SNO, DQI_ID, 
      DQI_LNM, DQI_PNM, RQST_DCD, 
      RVW_STS_CD, RVW_CONTS, VRF_CD, 
      VRF_RMK, DQI_LVL, UPP_DQI_LNM, 
      UPP_DQI_PNM, UPP_DQI_ID, OBJ_DESCN, 
      OBJ_VERS, REG_TYP_CD, FRS_RQST_DTM, 
      FRS_RQST_USER_ID, RQST_DTM, RQST_USER_ID, 
      APRV_DTM, APRV_USER_ID)
    values (#{rqstNo,jdbcType=VARCHAR}, #{rqstSno,jdbcType=DECIMAL}, #{dqiId,jdbcType=VARCHAR}, 
      #{dqiLnm,jdbcType=VARCHAR}, #{dqiPnm,jdbcType=VARCHAR}, #{rqstDcd,jdbcType=VARCHAR}, 
      #{rvwStsCd,jdbcType=VARCHAR}, #{rvwConts,jdbcType=VARCHAR}, #{vrfCd,jdbcType=VARCHAR}, 
      #{vrfRmk,jdbcType=VARCHAR}, #{dqiLvl,jdbcType=DECIMAL}, #{uppDqiLnm,jdbcType=VARCHAR}, 
      #{uppDqiPnm,jdbcType=VARCHAR}, #{uppDqiId,jdbcType=VARCHAR}, #{objDescn,jdbcType=VARCHAR}, 
      #{objVers,jdbcType=DECIMAL}, #{regTypCd,jdbcType=VARCHAR}, #{frsRqstDtm,jdbcType=DATE}, 
      #{frsRqstUserId,jdbcType=VARCHAR}, #{rqstDtm,jdbcType=DATE}, #{rqstUserId,jdbcType=VARCHAR}, 
      #{aprvDtm,jdbcType=DATE}, #{aprvUserId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="kr.wise.dq.criinfo.dqi.service.WaqDqiVO" >
    insert into WAQ_DQI
    <trim prefix="(" suffix=")" suffixOverrides="," >
        RQST_NO,
        RQST_SNO,
      <if test="dqiId != null" >
        DQI_ID,
      </if>
      <if test="dqiLnm != null" >
        DQI_LNM,
      </if>
      <if test="dqiPnm != null" >
        DQI_PNM,
      </if>
      <if test="rqstDcd != null" >
        RQST_DCD,
      </if>
      <if test="rvwStsCd != null" >
        RVW_STS_CD,
      </if>
      <if test="rvwConts != null" >
        RVW_CONTS,
      </if>
      <if test="vrfCd != null" >
        VRF_CD,
      </if>
      <if test="vrfRmk != null" >
        VRF_RMK,
      </if>
      <if test="dqiLvl != null" >
        DQI_LVL,
      </if>
      <if test="uppDqiLnm != null" >
        UPP_DQI_LNM,
      </if>
      <if test="uppDqiPnm != null" >
        UPP_DQI_PNM,
      </if>
      <if test="uppDqiId != null" >
        UPP_DQI_ID,
      </if>
      <if test="objDescn != null" >
        OBJ_DESCN,
      </if>
      <if test="objVers != null" >
        OBJ_VERS,
      </if>
      <if test="regTypCd != null" >
        REG_TYP_CD,
      </if>
      <if test="frsRqstDtm != null" >
        FRS_RQST_DTM,
      </if>
      <if test="frsRqstUserId != null" >
        FRS_RQST_USER_ID,
      </if>
      <if test="rqstDtm != null" >
        RQST_DTM,
      </if>
      <if test="rqstUserId != null" >
        RQST_USER_ID,
      </if>
      <if test="aprvDtm != null" >
        APRV_DTM,
      </if>
      <if test="aprvUserId != null" >
        APRV_USER_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{rqstNo,jdbcType=VARCHAR},
        (SELECT ifnull(MAX(RQST_SNO), 0) + 1 FROM WAQ_DQI WD WHERE RQST_NO = #{rqstNo}) ,
      <if test="dqiId != null" >
        #{dqiId,jdbcType=VARCHAR},
      </if>
      <if test="dqiLnm != null" >
        #{dqiLnm,jdbcType=VARCHAR},
      </if>
      <if test="dqiPnm != null" >
        #{dqiPnm,jdbcType=VARCHAR},
      </if>
      <if test="rqstDcd != null" >
        #{rqstDcd,jdbcType=VARCHAR},
      </if>
      <if test="rvwStsCd != null" >
        #{rvwStsCd,jdbcType=VARCHAR},
      </if>
      <if test="rvwConts != null" >
        #{rvwConts,jdbcType=VARCHAR},
      </if>
      <if test="vrfCd != null" >
        #{vrfCd,jdbcType=VARCHAR},
      </if>
      <if test="vrfRmk != null" >
        #{vrfRmk,jdbcType=VARCHAR},
      </if>
      <if test="dqiLvl != null" >
        #{dqiLvl,jdbcType=DECIMAL},
      </if>
      <if test="uppDqiLnm != null" >
        #{uppDqiLnm,jdbcType=VARCHAR},
      </if>
      <if test="uppDqiPnm != null" >
        #{uppDqiPnm,jdbcType=VARCHAR},
      </if>
      <if test="uppDqiId != null" >
        #{uppDqiId,jdbcType=VARCHAR},
      </if>
      <if test="objDescn != null" >
        #{objDescn,jdbcType=VARCHAR},
      </if>
      <if test="objVers != null" >
        #{objVers,jdbcType=DECIMAL},
      </if>
      <if test="regTypCd != null" >
        #{regTypCd,jdbcType=VARCHAR},
      </if>
      <if test="frsRqstDtm != null" >
        #{frsRqstDtm,jdbcType=DATE},
      </if>
      <if test="frsRqstUserId != null" >
        #{frsRqstUserId,jdbcType=VARCHAR},
      </if>
      <if test="rqstDtm != null" >
        #{rqstDtm,jdbcType=DATE},
      </if>
      <if test="rqstUserId != null" >
        #{rqstUserId,jdbcType=VARCHAR},
      </if>
      <if test="aprvDtm != null" >
        #{aprvDtm,jdbcType=DATE},
      </if>
      <if test="aprvUserId != null" >
        #{aprvUserId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="kr.wise.dq.criinfo.dqi.service.WaqDqiVO" >
    update WAQ_DQI
    <set >
      <if test="rqstSno != null" >
        RQST_SNO = #{rqstSno,jdbcType=VARCHAR},
      </if>
      <if test="dqiId != null" >
        DQI_ID = #{dqiId,jdbcType=VARCHAR},
      </if>
      <if test="dqiLnm != null" >
        DQI_LNM = #{dqiLnm,jdbcType=VARCHAR},
      </if>
      <if test="dqiPnm != null" >
        DQI_PNM = #{dqiPnm,jdbcType=VARCHAR},
      </if>
      <if test="rqstDcd != null" >
        RQST_DCD = #{rqstDcd,jdbcType=VARCHAR},
      </if>
      <if test="rvwStsCd != null" >
        RVW_STS_CD = #{rvwStsCd,jdbcType=VARCHAR},
      </if>
      <if test="rvwConts != null" >
        RVW_CONTS = #{rvwConts,jdbcType=VARCHAR},
      </if>
      <if test="vrfCd != null" >
        VRF_CD = #{vrfCd,jdbcType=VARCHAR},
      </if>
      <if test="vrfRmk != null" >
        VRF_RMK = #{vrfRmk,jdbcType=VARCHAR},
      </if>
      <if test="dqiLvl != null" >
        DQI_LVL = #{dqiLvl,jdbcType=DECIMAL},
      </if>
      <if test="uppDqiLnm != null" >
        UPP_DQI_LNM = #{uppDqiLnm,jdbcType=VARCHAR},
      </if>
      <if test="uppDqiPnm != null" >
        UPP_DQI_PNM = #{uppDqiPnm,jdbcType=VARCHAR},
      </if>
      <if test="uppDqiId != null" >
        UPP_DQI_ID = #{uppDqiId,jdbcType=VARCHAR},
      </if>
      <if test="objDescn != null" >
        OBJ_DESCN = #{objDescn,jdbcType=VARCHAR},
      </if>
      <if test="objVers != null" >
        OBJ_VERS = #{objVers,jdbcType=DECIMAL},
      </if>
      <if test="regTypCd != null" >
        REG_TYP_CD = #{regTypCd,jdbcType=VARCHAR},
      </if>
      <if test="frsRqstDtm != null" >
        FRS_RQST_DTM = #{frsRqstDtm,jdbcType=DATE},
      </if>
      <if test="frsRqstUserId != null" >
        FRS_RQST_USER_ID = #{frsRqstUserId,jdbcType=VARCHAR},
      </if>
        RQST_DTM = now(),
      <if test="rqstUserId != null" >
        RQST_USER_ID = #{rqstUserId,jdbcType=VARCHAR},
      </if>
      <if test="aprvDtm != null" >
        APRV_DTM = #{aprvDtm,jdbcType=DATE},
      </if>
      <if test="aprvUserId != null" >
        APRV_USER_ID = #{aprvUserId,jdbcType=VARCHAR},
      </if>
    </set>
    where RQST_NO = #{rqstNo,jdbcType=VARCHAR}
      and RQST_SNO = #{rqstSno,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="kr.wise.dq.criinfo.dqi.service.WaqDqiVO" >
    update WAQ_DQI
    set DQI_ID = #{dqiId,jdbcType=VARCHAR},
      DQI_LNM = #{dqiLnm,jdbcType=VARCHAR},
      DQI_PNM = #{dqiPnm,jdbcType=VARCHAR},
      RQST_DCD = #{rqstDcd,jdbcType=VARCHAR},
      RVW_STS_CD = #{rvwStsCd,jdbcType=VARCHAR},
      RVW_CONTS = #{rvwConts,jdbcType=VARCHAR},
      VRF_CD = #{vrfCd,jdbcType=VARCHAR},
      VRF_RMK = #{vrfRmk,jdbcType=VARCHAR},
      DQI_LVL = #{dqiLvl,jdbcType=DECIMAL},
      UPP_DQI_LNM = #{uppDqiLnm,jdbcType=VARCHAR},
      UPP_DQI_PNM = #{uppDqiPnm,jdbcType=VARCHAR},
      UPP_DQI_ID = #{uppDqiId,jdbcType=VARCHAR},
      OBJ_DESCN = #{objDescn,jdbcType=VARCHAR},
      OBJ_VERS = #{objVers,jdbcType=DECIMAL},
      REG_TYP_CD = #{regTypCd,jdbcType=VARCHAR},
      FRS_RQST_DTM = #{frsRqstDtm,jdbcType=DATE},
      FRS_RQST_USER_ID = #{frsRqstUserId,jdbcType=VARCHAR},
      RQST_DTM = #{rqstDtm,jdbcType=DATE},
      RQST_USER_ID = #{rqstUserId,jdbcType=VARCHAR},
      APRV_DTM = #{aprvDtm,jdbcType=DATE},
      APRV_USER_ID = #{aprvUserId,jdbcType=VARCHAR}
    where RQST_NO = #{rqstNo,jdbcType=VARCHAR}
      and RQST_SNO = #{rqstSno,jdbcType=DECIMAL}
  </update>
  
  
  <!-- 요청서내 중복자료 검증(DQI01) -->
  <insert id="checkDupDqi" parameterType="map">
    <include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
-- 검증쿼리
      and exists (select 1
                    from WAQ_DQI D
                   where A.RQST_NO = D.RQST_NO
                     and A.DQI_LNM = D.DQI_LNM
                     and ifnull(A.UPP_DQI_LNM, '▦') = ifnull(D.UPP_DQI_LNM, '▦')
                     and A.RQST_SNO != D.RQST_SNO)
  </insert>
  
  <insert id="checkNotExistUppDqi" parameterType="map">
    <include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
      AND A.REG_TYP_CD IN ('C', 'U')
      AND (CASE WHEN A.UPP_DQI_LNM = '' THEN NULL ELSE A.UPP_DQI_LNM END) IS NOT NULL
-- 검증쿼리
      AND NOT EXISTS (SELECT 1
                        FROM WAM_DQI D
                       WHERE D.REG_TYP_CD IN ('C', 'U')
                         AND A.UPP_DQI_LNM = D.DQI_LNM
                     )
  </insert>
  
  <insert id="checkNotExistDqi" parameterType="map">
    <include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
      and A.RQST_DCD = 'DD'
-- 검증쿼리
      and not exists (select 1
                        from WAM_DQI D
                       where D.REG_TYP_CD in ('C','U')
                         and A.DQI_LNM = D.DQI_LNM
                      )
  </insert>
  
  <insert id="checkLowRankBizAareId" parameterType="map">
    <include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
      and A.RQST_DCD = 'DD'
-- 검증쿼리
      and exists (select 1
                        from WAM_DQI D
                      where D.REG_TYP_CD in ('C','U')
                          and A.DQI_ID = D.UPP_DQI_ID
                      )
  </insert>
  
  <insert id="checkDelUppBizAareId" parameterType="kr.wise.commons.rqstmst.service.WaqMstr">
 
    <include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
     <![CDATA[
       and A.RQST_DCD <> 'DD'
       and A.REG_TYP_CD = 'D'
-- 검증쿼리
      and not exists (select 1
                              from WAQ_DQI D
                            where A.DQI_ID = D.UPP_DQI_ID
                               and A.RQST_SNO <> D.RQST_SNO
                               and D.RQST_DCD = 'DD'
                      )
    ]]>
  </insert>

<!-- 	삭제요청시 사용여부 확인 -->
  <insert id="checkUsedDqi" parameterType="map">
    <include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
    	and A.REG_TYP_CD = 'D'
-- 검증쿼리
		and exists (select 1
							from WAM_BR_MSTR M
								inner join WAM_BR_DQI_MAP MAP
								on M.BR_ID = MAP.BR_ID
							where M.REG_TYP_CD IN ('C', 'U')
							and MAP.DQI_ID = A.DQI_ID)
  </insert>
  
  <!-- 	다른 요청서와 겹치는지 확인 -->
  <insert id="checkDupDqiRqst" parameterType="map">
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
  		and A.REG_TYP_CD IN ('C', 'U')
 -- 검증쿼리
		and exists (select 1
							from (select *
							        	from WAQ_MSTR
							        	where RQST_STEP_CD = 'Q'
							        	and BIZ_DCD = 'DQI') M
							     inner join WAQ_DQI D
							     	on M.RQST_NO = D.RQST_NO
							     	and D.REG_TYP_CD IN ('C', 'U')
						  where D.DQI_LNM = A.DQI_LNM)
  </insert>
  
  <!-- 기본정보레벨 확인 -->
  <insert id="checkDqiBscLvl" parameterType="map">
  	<include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
  		and A.REG_TYP_CD IN ('C', 'U')
 -- 검증쿼리
		and exists (select 1
							from (SELECT *
							       	FROM WAQ_DQI D
							       	<![CDATA[
							       WHERE DQI_LVL > ifnull((SELECT BSC_LVL 
							        					   FROM WAA_BSC_LVL
							        					  WHERE BSC_ID = 'DQI'
							        					    AND REG_TYP_CD IN ('C', 'U')
							        					    AND EXP_DTM = DATE_FORMAT( '9999-12-31', '%Y-%m-%d') ),0) ) D
							       ]]>
						  where D.DQI_LNM = A.DQI_LNM) 
  </insert>

  <insert id="checkNoChg" parameterType="map">
    <include refid="kr.wise.commons.rqstmst.service.WaqRqstVrfDtlsMapper.insertVrfDtlSql"/>
      and A.REG_TYP_CD = 'U'
-- 검증쿼리
      and exists (select 1
                    from WAM_DQI D
                   where D.REG_TYP_CD in ('C','U')
                     and A.DQI_LNM = D.DQI_LNM
                     and ifnull(A.UPP_DQI_ID, '▦') = ifnull(D.UPP_DQI_ID, '▦')
                     and ifnull(A.OBJ_DESCN, '▦') = ifnull(D.OBJ_DESCN, '▦')
                 )
  </insert>
  
  <!--  검증코드 UPDATE  -->
  <update id="updateCheckInit" parameterType="java.lang.String">
    update WAQ_DQI A
       set A.VRF_CD = '4' -- 검증전
            ,A.RVW_STS_CD = '0' -- 검토전
     where A.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
  </update>
  
  <!--  OBJ_ID, OBJ_VERS UPDATE  -->
  <update id="updateObjInfo" parameterType="java.lang.String">
    <!--  update WAQ_DQI A
       set (A.REG_TYP_CD
            , A.DQI_ID
            , A.OBJ_VERS 
            , A.FRS_RQST_DTM
            , A.FRS_RQST_USER_ID ) =
                          (select case when A.RQST_DCD = 'DD' then 'D' else case when MAX(B.DQI_ID) IS NULL then 'C' else 'U' end end
                                  ,max(B.DQI_ID) as DQI_ID
                                  ,case when max(B.OBJ_VERS) is null then 1
                                           else max(B.OBJ_VERS)
                                           end as OBJ_VERS
                                 , ifnull(MAX(B.FRS_RQST_DTM), A.RQST_DTM) as FRS_RQST_DTM
           						 , ifnull(MAX(B.FRS_RQST_USER_ID), A.RQST_USER_ID) as FRS_RQST_USER_ID           
                             from WAM_DQI B
                            where B.REG_TYP_CD in ('C','U')
                              and B.DQI_LNM = A.DQI_LNM )
     where A.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
     -->
     UPDATE WAQ_DQI A
            LEFT JOIN WAM_DQI B             
            ON B.DQI_LNM = A.DQI_LNM                  
       SET A.REG_TYP_CD  = CASE WHEN A.RQST_DCD = 'DD' THEN 'D' ELSE CASE WHEN B.DQI_ID IS NULL THEN 'C' ELSE 'U' END END 
          , A.DQI_ID   = B.DQI_ID          
     WHERE A.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
  </update>
  
  
  <update id="updateVrfUppBizAareId" parameterType="java.lang.String">
    update WAQ_DQI A
    set A.UPP_DQI_ID = (select DQI_ID
                           from WAM_DQI B
                          where B.REG_TYP_CD in ('C','U')
                            and B.DQI_LNM = A.UPP_DQI_LNM
                         )
    where A.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
      and A.UPP_DQI_LNM is not null
      -- and A.VRF_CD = '1' -- 등록가능
  </update>
  <update id="updateVrfUppDqiIdClear" parameterType="java.lang.String">
    update WAQ_DQI A
    set A.UPP_DQI_ID = NULL
    where A.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
      -- and A.UPP_DQI_LNM is not null
      -- and A.VRF_CD = '1' -- 등록가능
  </update>
  
  
  <update id="updateVrfDqiLvl" parameterType="kr.wise.commons.rqstmst.service.WaqMstr">
    update WAQ_DQI A
       set A.DQI_LVL = (select (ifnull(B.DQI_LVL, 0) + 1 ) as DQI_LVL
                               from WAQ_DQI R
                                    left outer join WAM_DQI B
                                      on B.DQI_LNM = ifnull(R.UPP_DQI_LNM, '▦')
                                     and B.REG_TYP_CD in ('C','U')
                              where A.RQST_NO = R.RQST_NO
                                and A.RQST_SNO = R.RQST_SNO
                            )
    where A.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
      -- and A.VRF_CD = '1' -- 등록가능      
  </update>
  
  <update id="updateVrfCd" parameterType="kr.wise.commons.rqstmst.service.WaqMstr">
    update WAQ_DQI A
       set A.VRF_CD = (select case when  ifnull(MAX(B.RQST_SNO), 0) = 0 
                                         THEN '1' ELSE '2'  -- 1: 등록가능 2: 검증오류
                                          END 
                             from WAQ_RQST_VRF_DTLS B 
                           where B.RQST_NO = A.RQST_NO
                              and B.RQST_SNO = A.RQST_SNO)
    where A.RQST_NO = #{rqstNo,jdbcType=VARCHAR}
  </update> 
  
  <select id="selectRqstDqi" resultMap="BaseResultMap" parameterType="kr.wise.dq.criinfo.dqi.service.WaqDqiVO" >
    SELECT 
    <include refid="Base_Column_List" />
    FROM WAQ_DQI
    WHERE RQST_NO = #{rqstNo,jdbcType=VARCHAR}
      AND RQST_SNO = #{rqstSno,jdbcType=DECIMAL}
  </select>
  
  <sql id="wam_col">
   		, DQI_LNM , DQI_PNM , DQI_LVL, UPP_DQI_ID
   		, RQST_NO , RQST_SNO , OBJ_DESCN , OBJ_VERS , REG_TYP_CD 
		, FRS_RQST_DTM , FRS_RQST_USER_ID , RQST_DTM , RQST_USER_ID , APRV_DTM
		, APRV_USER_ID , FULL_PATH
   </sql>
  
  
    <update id="updatervwStsCd" parameterType="kr.wise.dq.criinfo.dqi.service.WaqDqiVO" >
  	UPDATE WAQ_DQI
  	<set>
  	    RVW_STS_CD 	= #{rvwStsCd} , 
  		RVW_CONTS 	= #{rvwConts} , 
  		APRV_DTM	= now() ,
  		APRV_USER_ID = #{aprvUserId} ,
  	</set>
    WHERE RQST_NO = #{rqstNo,jdbcType=VARCHAR}
      AND RQST_SNO = #{rqstSno,jdbcType=DECIMAL}
      AND VRF_CD = '1'
      AND ifnull(RVW_STS_CD, '_') != '2'
  </update>
  
  <select id="selectWaqC" parameterType="map" resultMap="BaseResultMap">
   	SELECT * FROM WAQ_DQI
   	WHERE RQST_NO = #{rqstNo}
   	  AND RVW_STS_CD = '1'  -- 승인
   	  AND REG_TYP_CD = 'C'
   </select>
   
   <update id="updateidByKey" parameterType="kr.wise.dq.criinfo.dqi.service.WaqDqiVO" >
  	UPDATE WAQ_DQI 
  	   SET DQI_ID = #{dqiId,jdbcType=VARCHAR}
  	 WHERE RQST_NO  = #{rqstNo,jdbcType=VARCHAR}
       AND RQST_SNO = #{rqstSno,jdbcType=DECIMAL}
  </update>
  
  <update id="updateWaqCUD" parameterType="map">
   	-- WAQ ID, VERS 등을 업데이트...
	UPDATE WAQ_DQI A 
	       INNER JOIN 
	       (SELECT B.DQI_ID AS Y1
	             , B.DQI_LNM
	             , ifnull(B.OBJ_VERS, 0) + 1 AS Y2
	             , B.FRS_RQST_DTM AS Y3
	             , B.FRS_RQST_USER_ID AS Y4
	        FROM  WAM_DQI B	        
	    	) A2
	    	ON A2.DQI_LNM = A.DQI_LNM 
	  SET A.DQI_ID = A2.Y1 , A.OBJ_VERS = A2.Y2, A.FRS_RQST_DTM = A2.Y3, A.FRS_RQST_USER_ID = A2.Y4 
	WHERE A.RQST_NO = #{rqstNo}
	--  AND A.VRF_CD = '1' 		--  등록가능
	AND A.RVW_STS_CD = '1'  --  승인
	AND EXISTS (
		SELECT 1
		  FROM WAM_DQI B
		 WHERE B.DQI_LNM = A.DQI_LNM
	       AND B.DQI_PNM = A.DQI_PNM
	       AND B.REG_TYP_CD IN ('C', 'U')
	)
   </update>

   <update id="updateWaqFullPath" parameterType="map">
	UPDATE WAQ_DQI A
	       INNER JOIN 
	       (SELECT B.DQI_ID, B.FULL_PATH
		      FROM V_WAM_DQI  B		     
		    ) B
		    ON 1 = 1 
	       AND B.DQI_ID = A.DQI_ID
		SET A.FULL_PATH = B.FULL_PATH
     WHERE A.RQST_NO = #{rqstNo}      
   </update>

   <update id="updateWamFullPath" parameterType="map">
	UPDATE WAM_DQI A
	       INNER JOIN 
	       (SELECT B.DQI_ID, B.FULL_PATH
		      FROM V_WAM_DQI  B		     
		    ) B
	        ON 1 = 1 
	       AND B.DQI_ID = A.DQI_ID
		SET A.FULL_PATH = B.FULL_PATH
     WHERE A.RQST_NO = #{rqstNo}      
   </update>

   <update id="updateWahFullPath" parameterType="map">
	UPDATE WAH_DQI A
	       INNER JOIN 
	       (SELECT B.DQI_ID, B.FULL_PATH
	         FROM V_WAM_DQI  B		     
	       ) B
	        ON 1 = 1 
	       AND B.DQI_ID = A.DQI_ID
	   SET A.FULL_PATH = B.FULL_PATH
     WHERE A.RQST_NO = #{rqstNo}      
       AND A.EXP_DTM = DATE_FORMAT( '9999-12-31', '%Y-%m-%d')
   </update>
   
   <update id="updateWaqC" parameterType="map">
   	
   </update>

   <delete id="deleteWAM" parameterType="map">
    -- WAM 삭제 (등록유형코드가REG_TYP_CD 변경, 삭제일 경우)
	DELETE A FROM WAM_DQI A
	WHERE EXISTS (
	    SELECT 1 FROM WAQ_DQI B
	    WHERE B.RQST_NO = #{rqstNo}
	    AND B.RVW_STS_CD = '1'
	    -- AND B.DQI_PNM = A.DQI_PNM
	    AND B.DQI_LNM = A.DQI_LNM
	)
   </delete>
   
   <insert id="insertWAM" parameterType="map">
   	-- WAM 추가 (WAQ 내용을 추가, REG_TYP_CD 가 신규,변경일 경우)
	INSERT INTO WAM_DQI
	(DQI_ID <include refid="wam_col"/>)
	SELECT 
		DQI_ID 
	
	<include refid="wam_col"/>
	
	FROM WAQ_DQI A
	WHERE A.RQST_NO = #{rqstNo}
	AND A.RVW_STS_CD = '1'
	AND A.REG_TYP_CD IN ('C', 'U')
   </insert>
   
   <update id="updateWAH"  parameterType="map">
   	-- WAH 이력 만료...
	UPDATE WAH_DQI A
	SET EXP_DTM = now()
	WHERE EXISTS (
	    SELECT 1 FROM WAQ_DQI B
	    WHERE B.RQST_NO = #{rqstNo}
	    AND B.RVW_STS_CD = '1'
	    -- AND B.REG_TYP_CD IN ('U', 'D')
	    -- AND B.DQI_PNM = A.DQI_PNM
	    AND B.DQI_LNM = A.DQI_LNM
	    )
	AND EXP_DTM = DATE_FORMAT( '9999-12-31', '%Y-%m-%d')
   </update>
   
   <insert id="insertWAH"  parameterType="map">
   	-- WAH이력 적재...
	INSERT INTO WAH_DQI
	SELECT
	    A.DQI_ID AS DQI_ID
	    , DATE_FORMAT( '9999-12-31', '%Y-%m-%d') AS EXP_DTM
	    , now() AS STR_DTM 
	
	<include refid="wam_col"/>
   
	FROM WAQ_DQI A
	WHERE A.RQST_NO = #{rqstNo}
	AND A.RVW_STS_CD = '1'
   </insert>
   
   <insert id="insertwam2waq" parameterType="map">
  	INSERT INTO WAQ_DQI (RQST_NO, RQST_SNO, DQI_ID,  DQI_LNM, DQI_PNM, RQST_DCD, DQI_LVL, UPP_DQI_ID, UPP_DQI_LNM, UPP_DQI_PNM, OBJ_DESCN, OBJ_VERS, RQST_DTM, RQST_USER_ID)
  	SELECT #{reqmst.rqstNo} 
  		  , (SELECT ifnull(MAX(RQST_SNO), 0) FROM WAQ_DQI WHERE RQST_NO = #{reqmst.rqstNo}) + @rownum:=@rownum+1
  		  , A.DQI_ID,  A.DQI_LNM, A.DQI_PNM
  		  , 'CU' , A.DQI_LVL, A.UPP_DQI_ID, B.DQI_LNM, B.DQI_PNM, A.OBJ_DESCN, A.OBJ_VERS
  		  , now()
  		  , #{reqmst.rqstUserId,jdbcType=VARCHAR}
      FROM (SELECT @rownum:=0) TMP , WAM_DQI A
      LEFT OUTER JOIN WAM_DQI B
        ON A.UPP_DQI_ID = B.DQI_ID
       AND B.REG_TYP_CD IN ('C', 'U')
     WHERE A.DQI_ID IN 
     <foreach collection="list" item="item" index="index" open="(" separator="," close=")">
     	#{item.dqiId}
     </foreach>
       AND A.REG_TYP_CD IN ('C' , 'U')
  </insert>
  
  
</mapper>