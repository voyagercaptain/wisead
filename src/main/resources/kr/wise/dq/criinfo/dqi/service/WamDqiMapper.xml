<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.wise.dq.criinfo.dqi.service.WamDqiMapper" >
  <resultMap id="BaseResultMap" type="kr.wise.dq.criinfo.dqi.service.WamDqiVO" extends="kr.wise.commons.cmm.service.CommonMapper.BaseResultMap">
    <id column="DQI_ID" property="dqiId" jdbcType="VARCHAR" />
    <result column="DQI_LNM" property="dqiLnm" jdbcType="VARCHAR" />
    <result column="DQI_PNM" property="dqiPnm" jdbcType="VARCHAR" />
    <result column="DQI_LVL" property="dqiLvl" jdbcType="DECIMAL" />
    <result column="DQI_LVL" property="Level" jdbcType="DECIMAL" />
    <result column="UPP_DQI_ID" property="uppDqiId" jdbcType="VARCHAR" />
    <result column="UPP_DQI_LNM" property="uppDqiLnm" jdbcType="VARCHAR" />
<!--     <result column="RQST_NO" property="rqstNo" jdbcType="VARCHAR" /> -->
<!--     <result column="RQST_SNO" property="rqstSno" jdbcType="DECIMAL" /> -->
<!--     <result column="OBJ_DESCN" property="objDescn" jdbcType="VARCHAR" /> -->
<!--     <result column="OBJ_VERS" property="objVers" jdbcType="DECIMAL" /> -->
<!--     <result column="REG_TYP_CD" property="regTypCd" jdbcType="VARCHAR" /> -->
<!--     <result column="FRS_RQST_DTM" property="frsRqstDtm" jdbcType="DATE" /> -->
<!--     <result column="FRS_RQST_USER_ID" property="frsRqstUserId" jdbcType="VARCHAR" /> -->
<!--     <result column="RQST_DTM" property="rqstDtm" jdbcType="DATE" /> -->
    <result column="RQST_DTM_DISP" property="rqstDtmDisp" jdbcType="VARCHAR" />
<!--     <result column="RQST_USER_ID" property="rqstUserId" jdbcType="VARCHAR" /> -->
<!--     <result column="RQST_USER_NM" property="rqstUserNm" jdbcType="VARCHAR" /> -->
<!--     <result column="APRV_DTM" property="aprvDtm" jdbcType="DATE" /> -->
<!--     <result column="APRV_USER_ID" property="aprvUserId" jdbcType="VARCHAR" /> -->
	<result column="BIZRULE_CNT" property="bizruleCnt" jdbcType="VARCHAR" />
	<result column="VRFC_TYP"    property="vrfcTyp" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    DQI_ID, DQI_LNM, DQI_PNM, DQI_LVL, UPP_DQI_ID, RQST_NO, 
    RQST_SNO, OBJ_DESCN, OBJ_VERS, REG_TYP_CD, FRS_RQST_DTM, FRS_RQST_USER_ID, RQST_DTM, 
    RQST_USER_ID, APRV_DTM, APRV_USER_ID
  </sql>
  
  <!-- for 문 사용 SQL -->
 <sql id="SelectSql" >
    SELECT DQI_ID
         , DQI_LNM
         , DQI_PNM
         , DQI_LVL
         , UPP_DQI_ID
         , RQST_NO
         , RQST_SNO
         , OBJ_DESCN
         , OBJ_VERS
         , REG_TYP_CD
         , FRS_RQST_DTM
         , FRS_RQST_USER_ID
         , RQST_DTM
         , RQST_USER_ID
         , APRV_DTM
         , APRV_USER_ID
         , FULL_PATH     
         , CONCAT( UPP_DQI_ID,DQI_ID) AS ORDER_COLUMN
         , VRFC_TYP
   FROM WAM_DQI
  WHERE DQI_LVL = #{item}
    AND REG_TYP_CD  IN ('C','U')
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select  A.DQI_ID
       ,A.DQI_LNM
       ,A.DQI_LVL
       ,A.OBJ_DESCN
       ,A.OBJ_VERS
       ,A.REG_TYP_CD
       ,A.RQST_USER_ID
       ,A.RQST_DTM
       ,GET_USER_NM(A.RQST_USER_ID) AS RQST_USER_NM
       ,A.FRS_RQST_DTM
       ,A.FRS_RQST_USER_ID
       ,GET_USER_NM(A.FRS_RQST_USER_ID) AS FRS_RQST_USER_NM
       ,A.APRV_DTM
       ,A.APRV_USER_ID
       ,GET_USER_NM(A.APRV_USER_ID) AS APRV_USER_NM
       ,B.USER_NM AS RQST_USER_NM
       ,CASE WHEN A.DQI_LVL > 1 
             THEN (SELECT DQI_LNM                     
                     FROM WAM_DQI                
                    WHERE DQI_ID = A.UPP_DQI_ID       
                      AND REG_TYP_CD IN ('C','U')	
                  ) END AS UPP_DQI_LNM
       ,A.VRFC_TYP
   FROM WAM_DQI A
        left outer join WAA_USER B
          on A.RQST_USER_ID = B.USER_ID
         and B.EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d')
         and B.REG_TYP_CD IN ('C','U')
        left outer join WAA_USER C
          on A.FRS_RQST_USER_ID = C.USER_ID
         and C.EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d')
         and C.REG_TYP_CD IN ('C','U')
        left outer join WAA_USER D
          on A.APRV_USER_ID = D.USER_ID
         and D.EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d')
         and D.REG_TYP_CD IN ('C','U')
    where A.DQI_ID = #{dqiId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from WAM_DQI
    where DQI_ID = #{dqiId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="kr.wise.dq.criinfo.dqi.service.WamDqiVO" >
    insert into WAM_DQI (DQI_ID, DQI_LNM, DQI_PNM, 
      DQI_LVL, UPP_DQI_ID, RQST_NO, 
      RQST_SNO, OBJ_DESCN, OBJ_VERS, 
      REG_TYP_CD, FRS_RQST_DTM, FRS_RQST_USER_ID, 
      RQST_DTM, RQST_USER_ID, APRV_DTM, 
      APRV_USER_ID)
    values (#{dqiId,jdbcType=VARCHAR}, #{dqiLnm,jdbcType=VARCHAR}, #{dqiPnm,jdbcType=VARCHAR}, 
      #{dqiLvl,jdbcType=DECIMAL}, #{uppDqiId,jdbcType=VARCHAR}, #{rqstNo,jdbcType=VARCHAR}, 
      #{rqstSno,jdbcType=DECIMAL}, #{objDescn,jdbcType=VARCHAR}, #{objVers,jdbcType=DECIMAL}, 
      #{regTypCd,jdbcType=VARCHAR}, #{frsRqstDtm,jdbcType=DATE}, #{frsRqstUserId,jdbcType=VARCHAR}, 
      #{rqstDtm,jdbcType=DATE}, #{rqstUserId,jdbcType=VARCHAR}, #{aprvDtm,jdbcType=DATE}, 
      #{aprvUserId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="kr.wise.dq.criinfo.dqi.service.WamDqiVO" >
    insert into WAM_DQI
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="dqiId != null" >
        DQI_ID,
      </if>
      <if test="dqiLnm != null" >
        DQI_LNM,
      </if>
      <if test="dqiPnm != null" >
        DQI_PNM,
      </if>
      <if test="dqiLvl != null" >
        DQI_LVL,
      </if>
      <if test="uppDqiId != null" >
        UPP_DQI_ID,
      </if>
      <if test="rqstNo != null" >
        RQST_NO,
      </if>
      <if test="rqstSno != null" >
        RQST_SNO,
      </if>
      <if test="objDescn != null" >
        OBJ_DESCN,
      </if>
      <if test="objVers != null" >
        OBJ_VERS,
      </if>
      <if test="regTypCd != null" >
        REG_TYP_CD,
      </if>
      <if test="frsRqstDtm != null" >
        FRS_RQST_DTM,
      </if>
      <if test="frsRqstUserId != null" >
        FRS_RQST_USER_ID,
      </if>
      <if test="rqstDtm != null" >
        RQST_DTM,
      </if>
      <if test="rqstUserId != null" >
        RQST_USER_ID,
      </if>
      <if test="aprvDtm != null" >
        APRV_DTM,
      </if>
      <if test="aprvUserId != null" >
        APRV_USER_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="dqiId != null" >
        #{dqiId,jdbcType=VARCHAR},
      </if>
      <if test="dqiLnm != null" >
        #{dqiLnm,jdbcType=VARCHAR},
      </if>
      <if test="dqiPnm != null" >
        #{dqiPnm,jdbcType=VARCHAR},
      </if>
      <if test="dqiLvl != null" >
        #{dqiLvl,jdbcType=DECIMAL},
      </if>
      <if test="uppDqiId != null" >
        #{uppDqiId,jdbcType=VARCHAR},
      </if>
      <if test="rqstNo != null" >
        #{rqstNo,jdbcType=VARCHAR},
      </if>
      <if test="rqstSno != null" >
        #{rqstSno,jdbcType=DECIMAL},
      </if>
      <if test="objDescn != null" >
        #{objDescn,jdbcType=VARCHAR},
      </if>
      <if test="objVers != null" >
        #{objVers,jdbcType=DECIMAL},
      </if>
      <if test="regTypCd != null" >
        #{regTypCd,jdbcType=VARCHAR},
      </if>
      <if test="frsRqstDtm != null" >
        #{frsRqstDtm,jdbcType=DATE},
      </if>
      <if test="frsRqstUserId != null" >
        #{frsRqstUserId,jdbcType=VARCHAR},
      </if>
      <if test="rqstDtm != null" >
        #{rqstDtm,jdbcType=DATE},
      </if>
      <if test="rqstUserId != null" >
        #{rqstUserId,jdbcType=VARCHAR},
      </if>
      <if test="aprvDtm != null" >
        #{aprvDtm,jdbcType=DATE},
      </if>
      <if test="aprvUserId != null" >
        #{aprvUserId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="kr.wise.dq.criinfo.dqi.service.WamDqiVO" >
    update WAM_DQI
    <set >
      <if test="dqiLnm != null" >
        DQI_LNM = #{dqiLnm,jdbcType=VARCHAR},
      </if>
      <if test="dqiPnm != null" >
        DQI_PNM = #{dqiPnm,jdbcType=VARCHAR},
      </if>
      <if test="dqiLvl != null" >
        DQI_LVL = #{dqiLvl,jdbcType=DECIMAL},
      </if>
      <if test="uppDqiId != null" >
        UPP_DQI_ID = #{uppDqiId,jdbcType=VARCHAR},
      </if>
      <if test="rqstNo != null" >
        RQST_NO = #{rqstNo,jdbcType=VARCHAR},
      </if>
      <if test="rqstSno != null" >
        RQST_SNO = #{rqstSno,jdbcType=DECIMAL},
      </if>
      <if test="objDescn != null" >
        OBJ_DESCN = #{objDescn,jdbcType=VARCHAR},
      </if>
      <if test="objVers != null" >
        OBJ_VERS = #{objVers,jdbcType=DECIMAL},
      </if>
      <if test="regTypCd != null" >
        REG_TYP_CD = #{regTypCd,jdbcType=VARCHAR},
      </if>
      <if test="frsRqstDtm != null" >
        FRS_RQST_DTM = #{frsRqstDtm,jdbcType=DATE},
      </if>
      <if test="frsRqstUserId != null" >
        FRS_RQST_USER_ID = #{frsRqstUserId,jdbcType=VARCHAR},
      </if>
      <if test="rqstDtm != null" >
        RQST_DTM = #{rqstDtm,jdbcType=DATE},
      </if>
      <if test="rqstUserId != null" >
        RQST_USER_ID = #{rqstUserId,jdbcType=VARCHAR},
      </if>
      <if test="aprvDtm != null" >
        APRV_DTM = #{aprvDtm,jdbcType=DATE},
      </if>
      <if test="aprvUserId != null" >
        APRV_USER_ID = #{aprvUserId,jdbcType=VARCHAR},
      </if>
    </set>
    where DQI_ID = #{dqiId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="kr.wise.dq.criinfo.dqi.service.WamDqiVO" >
    update WAM_DQI
    set DQI_LNM = #{dqiLnm,jdbcType=VARCHAR},
      DQI_PNM = #{dqiPnm,jdbcType=VARCHAR},
      DQI_LVL = #{dqiLvl,jdbcType=DECIMAL},
      UPP_DQI_ID = #{uppDqiId,jdbcType=VARCHAR},
      RQST_NO = #{rqstNo,jdbcType=VARCHAR},
      RQST_SNO = #{rqstSno,jdbcType=DECIMAL},
      OBJ_DESCN = #{objDescn,jdbcType=VARCHAR},
      OBJ_VERS = #{objVers,jdbcType=DECIMAL},
      REG_TYP_CD = #{regTypCd,jdbcType=VARCHAR},
      FRS_RQST_DTM = #{frsRqstDtm,jdbcType=DATE},
      FRS_RQST_USER_ID = #{frsRqstUserId,jdbcType=VARCHAR},
      RQST_DTM = #{rqstDtm,jdbcType=DATE},
      RQST_USER_ID = #{rqstUserId,jdbcType=VARCHAR},
      APRV_DTM = #{aprvDtm,jdbcType=DATE},
      APRV_USER_ID = #{aprvUserId,jdbcType=VARCHAR}
    where DQI_ID = #{dqiId,jdbcType=VARCHAR}
  </update>
  
  
  <select id="selectDqiList" resultMap="BaseResultMap" parameterType="kr.wise.dq.criinfo.dqi.service.WamDqiVO">
  SELECT  A.DQI_ID     
		, A.DQI_LNM     
        , A.DQI_PNM
        , A.DQI_LVL
        , A.UPP_DQI_ID
        , A.RQST_NO
        , A.RQST_SNO
        , A.OBJ_DESCN
        , A.OBJ_VERS
        , A.REG_TYP_CD
        , A.FRS_RQST_DTM
        , A.FRS_RQST_USER_ID
        , GET_USER_NM(A.FRS_RQST_USER_ID) AS FRS_RQST_USER_NM
        , A.RQST_DTM
        , A.RQST_USER_ID
        , GET_USER_NM(A.RQST_USER_ID) AS RQST_USER_NM
        , A.APRV_DTM
        , A.APRV_USER_ID
        , GET_USER_NM(A.APRV_USER_ID) AS APRV_USER_NM
        , A.FULL_PATH     
        , B.DQI_LNM AS UPP_DQI_LNM
        , C.BIZRULE_CNT
        , A.VRFC_TYP
	  FROM (
<!-- 	  		collection = 전달받은 인자값 -->
<!-- 	  		item   = 전달받은 인자값을 다른이름으로 대체  -->
<!-- 	  		open 해당 구문이 시작할떄  -->
<!-- 	  		lose 해당구문이 끝날떄 -->
<!-- 			separator  한번 이상 반복할때 반복되는 사이에  해당 문을 넣어줌 -->
	  		<foreach collection="lvlList" item="item" index="index" open="" separator="UNION ALL" close="">
				<include refid="SelectSql" />	      
			</foreach>
	       ) A
	       LEFT OUTER JOIN WAM_DQI B
	         ON A.UPP_DQI_ID = B.DQI_ID
	        AND B.REG_TYP_CD IN ('C','U')
	       LEFT OUTER JOIN 
	       (SELECT DQI_ID
	             , SUM(BIZRULE_CNT) AS BIZRULE_CNT
	          FROM ( 
	         SELECT M.DQI_ID 
	              , COUNT(1) AS BIZRULE_CNT
			   FROM WAM_BR_MSTR B
					   INNER JOIN WAA_DB_SCH C
						  ON C.EXP_DTM = STR_TO_DATE('99991231','%Y%m%d')
						 AND C.REG_TYP_CD IN ('C', 'U')
						 AND C.DB_SCH_ID = B.DB_SCH_ID 
					   INNER JOIN WAA_DB_CONN_TRG D
						  ON D.EXP_DTM = STR_TO_DATE('99991231','%Y%m%d')
						 AND D.REG_TYP_CD IN ('C', 'U')
						 AND D.DB_CONN_TRG_ID = C.DB_CONN_TRG_ID  
					   INNER JOIN WAT_DBC_TBL T
                          ON T.DB_SCH_ID = C.DB_SCH_ID
						 AND T.DBC_TBL_NM = B.DBC_TBL_NM
					   INNER JOIN WAT_DBC_COL E
						  ON E.DB_SCH_ID  = T.DB_SCH_ID
						 AND E.DBC_TBL_NM = T.DBC_TBL_NM
                         AND E.DBC_COL_NM = B.DBC_COL_NM
					   LEFT JOIN WAM_BR_DQI_MAP M
					     ON M.BR_ID = B.BR_ID	 
					   LEFT JOIN WAM_DQI DQI
						 ON DQI.DQI_ID = M.DQI_ID 
						AND DQI.REG_TYP_CD IN ('C', 'U')
					   LEFT JOIN WAM_DQI U
						 ON U.DQI_ID = DQI.UPP_DQI_ID
						AND U.REG_TYP_CD IN ('C', 'U')
					   LEFT JOIN WAA_EXP_TBL EX          
						  ON EX.DB_SCH_ID  = B.DB_SCH_ID  
						 AND EX.DBC_TBL_NM = B.DBC_TBL_NM 				  
				 WHERE  1 = 1     
				   AND B.REG_TYP_CD IN ('C', 'U') 
		           AND IFNULL(EX.EXP_YN,'N')='N'        
			  GROUP BY DQI_ID
			  UNION ALL
			  SELECT DQI.DQI_ID
			       , COUNT(1) AS BIZRULE_CNT
			    FROM WAT_DBC_TBL A
			   INNER JOIN WAA_DB_SCH B
				  ON B.EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d')
				 AND B.REG_TYP_CD IN ('C', 'U')
				 AND B.DB_SCH_ID = A.DB_SCH_ID  
			   INNER JOIN WAA_DB_CONN_TRG C
				  ON C.EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d')
                  AND C.REG_TYP_CD IN ('C', 'U')
				 AND C.DB_CONN_TRG_ID = B.DB_CONN_TRG_ID  
			   INNER JOIN WAA_EXP_TBL D
				 ON D.DB_SCH_ID  = A.DB_SCH_ID
				AND D.DBC_TBL_NM = A.DBC_TBL_NM		
			   INNER JOIN WAT_DBC_COL E
				  ON E.DB_SCH_ID  = A.DB_SCH_ID
				 AND E.DBC_TBL_NM = A.DBC_TBL_NM       
			   INNER JOIN WAA_COL_RULE_REL F
				 ON F.DB_SCH_ID  = A.DB_SCH_ID
				AND F.DBC_TBL_NM = A.DBC_TBL_NM
				AND F.DBC_COL_NM = E.DBC_COL_NM
			   INNER JOIN WAA_VRFC_RULE G
				 ON G.VRFC_ID = F.VRFC_ID
				AND G.EXP_DTM = STR_TO_DATE('9999-12-31', '%Y-%m-%d')
				AND G.REG_TYP_CD IN ('C', 'U')
				INNER JOIN WAM_DQI DQI
				  ON DQI.DQI_ID = G.DQI_ID
				 WHERE 1 = 1
			AND IFNULL(D.EXP_YN,'N') = 'N'
				AND F.RULE_REL_ID IS NOT NULL
				AND F.VRFC_ID IS NOT NULL
				GROUP BY G.DQI_ID
			   UNION ALL
			  SELECT 'OBJ_00000084176' AS DQI_ID -- 코드
			       , COUNT(1)          AS BIZRULE_CNT
			    FROM WAA_COL_RULE_REL B
					   INNER JOIN WAA_DB_SCH C
						  ON C.EXP_DTM = STR_TO_DATE('99991231','%Y%m%d')
						 AND C.REG_TYP_CD IN ('C', 'U')
						 AND C.DB_SCH_ID = B.DB_SCH_ID 
					   INNER JOIN WAA_DB_CONN_TRG D
						  ON D.EXP_DTM = STR_TO_DATE('99991231','%Y%m%d')
						 AND D.REG_TYP_CD IN ('C', 'U')
						 AND D.DB_CONN_TRG_ID = C.DB_CONN_TRG_ID   
					   INNER JOIN WAA_CD_RULE E
						  ON E.CD_RULE_ID = B.VRFC_ID  		  
					  INNER JOIN WAA_EXP_TBL EX          
						  ON EX.DB_SCH_ID  = B.DB_SCH_ID  
						 AND EX.DBC_TBL_NM = B.DBC_TBL_NM
					  INNER JOIN WAT_DBC_TBL T
                          ON T.DB_SCH_ID = C.DB_SCH_ID
						 AND T.DBC_TBL_NM = B.DBC_TBL_NM
					   INNER JOIN WAT_DBC_COL F
						  ON F.DB_SCH_ID  = T.DB_SCH_ID
						 AND F.DBC_TBL_NM = T.DBC_TBL_NM
                         AND F.DBC_COL_NM = B.DBC_COL_NM
				 WHERE  1 = 1  
		           AND IFNULL(EX.EXP_YN,'N')='N'
			   GROUP BY DQI_ID
			   UNION ALL
			  SELECT 'OBJ_00000085074' AS DQI_ID -- 관계키
			       , COUNT(1)          AS BIZRULE_CNT
			    FROM WAM_PRF_MSTR B
					   INNER JOIN WAA_DB_SCH C
						  ON C.EXP_DTM = STR_TO_DATE('99991231','%Y%m%d')
						 AND C.REG_TYP_CD IN ('C', 'U')
						 AND C.DB_SCH_ID = B.DB_SCH_ID 
					   INNER JOIN WAA_DB_CONN_TRG D
						  ON D.EXP_DTM = STR_TO_DATE('99991231','%Y%m%d')
						 AND D.REG_TYP_CD IN ('C', 'U')
						 AND D.DB_CONN_TRG_ID = C.DB_CONN_TRG_ID					   
					   INNER JOIN WAA_EXP_TBL EX          
						  ON EX.DB_SCH_ID  = B.DB_SCH_ID  
						 AND EX.DBC_TBL_NM = B.DBC_TBL_NM
				 WHERE  1 = 1  
                   AND B.EXP_DTM = STR_TO_DATE('99991231','%Y%m%d')
				   AND B.REG_TYP_CD IN ('C', 'U')
				   AND B.PRF_KND_CD = 'PT01'
		           AND IFNULL(EX.EXP_YN,'N')='N'
			   GROUP BY DQI_ID
			   ) A
			   GROUP BY DQI_ID
			) C
	        ON A.DQI_ID = C.DQI_ID
 <where>
    <if test=" dqiId != null  and dqiId != '' " >
      and A.DQI_ID =   #{dqiId,jdbcType=VARCHAR} 
   </if>
   <if test=" dqiLnm != null and dqiLnm != '' " >
      and A.FULL_PATH LIKE CONCAT( '%',#{dqiLnm,jdbcType=VARCHAR},'%')
<!--       and DQI_LNM LIKE REPLACE( #{dqiLnm,jdbcType=VARCHAR} , '*', '%') -->
   </if>
   <if test=" uppDqiLnm != null and uppDqiLnm != '' " >
      <!--  and A.UPP_DQI_LNM LIKE REPLACE( #{uppDqiLnm,jdbcType=VARCHAR} , '*', '%')  기존 구문-->
       and B.DQI_LNM LIKE CONCAT( #{uppDqiLnm,jdbcType=VARCHAR} , '%')
   </if>
</where>
      ORDER BY CASE WHEN A.FULL_PATH LIKE CONCAT('유효성','%') THEN 1
                    WHEN A.FULL_PATH LIKE CONCAT('정확성','%') THEN 2
                    WHEN A.FULL_PATH LIKE CONCAT('완전성','%') THEN 3
                    WHEN A.FULL_PATH LIKE CONCAT('일관성','%') THEN 4
                END          
             , A.FULL_PATH
             , A.DQI_LVL
  </select>
  
  <insert id="insertWamDqi" parameterType="kr.wise.commons.rqstmst.service.WaqMstr" >
	insert into WAM_DQI
	(<include refid="Base_Column_List" />)
	select 
	<include refid="Base_Column_List" />
	from WAH_DQI
	where RQST_NO = #{rqstNo,jdbcType=VARCHAR}
	  and EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d')
	  and REG_TYP_CD in ('C','U')
  </insert>
  
  <delete id="deleteWamDqi" parameterType="kr.wise.commons.rqstmst.service.WaqMstr" >
	delete WAM_DQI
	where DQI_ID in (select DQI_ID from WAH_DQI
		                            where RQST_NO = #{rqstNo,jdbcType=VARCHAR}
		                               and EXP_DTM = DATE_FORMAT( '99991231', '%Y%m%d')
		                 )
  </delete>
  
</mapper>