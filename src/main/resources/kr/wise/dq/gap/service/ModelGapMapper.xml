<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="kr.wise.dq.gap.service.ModelGapMapper" >
<resultMap id="BaseResultMap" type="kr.wise.dq.gap.service.ModelGapVO">
	<id column="GAP_STATUS" property="gapStatus" jdbcType="VARCHAR" />
    <result column="SUBJ_LNM"            property="subjLnm"         jdbcType="VARCHAR" />
    <result column="PDM_TBL_PNM"         property="pdmTblPnm"       jdbcType="VARCHAR" />
    <result column="PDM_TBL_LNM"         property="pdmTblLnm"       jdbcType="VARCHAR" />
    <result column="PDM_COL_CNT"         property="pdmColCnt"       jdbcType="VARCHAR" />
    <result column="DB_CONN_TRG_LNM"     property="dbConnTrgLnm"    jdbcType="VARCHAR" />
    <result column="DB_CONN_TRG_PNM"     property="dbConnTrgPnm"    jdbcType="VARCHAR" />
    <result column="DB_SCH_LNM"          property="dbSchLnm"        jdbcType="VARCHAR" />
    <result column="DB_SCH_PNM"          property="dbSchPnm"        jdbcType="VARCHAR" />  
    <result column="DDL_TBL_PNM"         property="ddlTblPnm"       jdbcType="VARCHAR" />
    <result column="DDL_COL_CNT"         property="ddlColCnt"       jdbcType="VARCHAR" />
    <result column="PDM_GAP_COL_CNT_DDL" property="pdmGapColCntDdl" jdbcType="VARCHAR" />
    <result column="DBC_TBL_NM"          property="dbcTblNm"        jdbcType="VARCHAR" />
    <result column="DBC_COL_CNT"         property="dbcColCnt"       jdbcType="VARCHAR" />
    <result column="PDM_GAP_COL_CNT_DBC" property="pdmGapColCntDbc" jdbcType="VARCHAR" />
    <result column="DDL_GAP_COL_CNT_DBC" property="ddlGapColCntDbc" jdbcType="VARCHAR" />
    <result column="DDL_TBL_ERR_DESCN"   property="ddlTblErrDescn"  jdbcType="VARCHAR" />
    <result column="DDL_COL_ERR_DESCN"   property="ddlColErrDescn"  jdbcType="VARCHAR" />
    <result column="PDM_TBL_ERR_DESCN"   property="pdmTblErrDescn"  jdbcType="VARCHAR" />
    <result column="PDM_COL_ERR_DESCN"   property="pdmColErrDescn"  jdbcType="VARCHAR" />
    
    
    <result column="SUBJ_ID"        property="subjId"      jdbcType="VARCHAR" />
    <result column="FULL_PATH"      property="fullPath"    jdbcType="VARCHAR" />
    <result column="DB_SCH_ID"      property="dbSchId"     jdbcType="VARCHAR" />
    <result column="DB_CONN_TRG_ID" property="dbConnTrgId" jdbcType="VARCHAR" />
    <result column="SEARCH_BGN_DE"  property="searchBgnDe" jdbcType="VARCHAR" />
    <result column="SEARCH_END_DE"  property="searchEndDe" jdbcType="VARCHAR" />
    <result column="SEARCH_TYP"     property="searchTyp"   jdbcType="VARCHAR" />
    <result column="OBJ_NM"         property="objNm"       jdbcType="VARCHAR" />
    <result column="DDL_TBL_ID"     property="ddlTblId"    jdbcType="VARCHAR" />
    <result column="PDM_TBL_ID"     property="pdmTblId"    jdbcType="VARCHAR" />
    
    <result column="PDM_TBL_CNT" property="pdmTblCnt" jdbcType="VARCHAR" />
    <result column="GAP_CNT"     property="gapCnt"    jdbcType="VARCHAR" />
    <result column="NML_CNT"     property="nmlCnt"    jdbcType="VARCHAR" />
    
    <result column="PDM_COL_ID"  property="pdmColId"  jdbcType="VARCHAR" />
    <result column="PDM_COL_PNM" property="pdmColPnm" jdbcType="VARCHAR" />
    <result column="PDM_COL_LNM" property="pdmColLnm" jdbcType="VARCHAR" />
    <result column="DDL_COL_ID"  property="ddlColId"  jdbcType="VARCHAR" />
    <result column="DDL_COL_PNM" property="ddlColPnm" jdbcType="VARCHAR" />
    <result column="DDL_COL_LNM" property="ddlColLnm" jdbcType="VARCHAR" />
    
    <result column="PDM_COL_ORD" property="pdmColOrd" jdbcType="VARCHAR" />
    <result column="PDM_DATA_TYPE" property="pdmDataType" jdbcType="VARCHAR" />
    <result column="PDM_DATA_LEN" property="pdmDataLen" jdbcType="VARCHAR" />
    <result column="PDM_DATA_SCAL" property="pdmDataScal" jdbcType="VARCHAR" />
    <result column="PDM_PK_YN" property="pdmPkYn" jdbcType="VARCHAR" />
    <result column="PDM_PK_ORD" property="pdmPkOrd" jdbcType="VARCHAR" />
    <result column="PDM_NONUL_YN" property="pdmNonulYn" jdbcType="VARCHAR" />
    <result column="PDM_DEFLT_VAL" property="pdmDefltVal" jdbcType="VARCHAR" />
    
    
    <result column="DDL_TBL_LNM" property="ddlTblLnm" jdbcType="VARCHAR" />
    <result column="DDL_COL_ORD" property="ddlColOrd" jdbcType="VARCHAR" />
    <result column="DDL_DATA_TYPE" property="ddlDataType" jdbcType="VARCHAR" />
    <result column="DDL_DATA_LEN" property="ddlDataLen" jdbcType="VARCHAR" />
    <result column="DDL_DATA_SCAL" property="ddlDataScal" jdbcType="VARCHAR" />                              
    <result column="DDL_PK_YN" property="ddlPkYn" jdbcType="VARCHAR" />
    <result column="DDL_PK_ORD" property="ddlPkOrd" jdbcType="VARCHAR" />
    <result column="DDL_NONUL_YN" property="ddlNonulYn" jdbcType="VARCHAR" />
    <result column="DDL_DEFLT_VAL" property="ddlDefltVal" jdbcType="VARCHAR" />
    
    <result column="DBC_COL_ORD" property="dbcColOrd" jdbcType="VARCHAR" />
    <result column="DBC_DATA_TYPE" property="dbcDataType" jdbcType="VARCHAR" />
    <result column="DBC_DATA_LEN" property="dbcDataLen" jdbcType="VARCHAR" />
    <result column="DBC_DATA_SCAL" property="dbcDataScal" jdbcType="VARCHAR" />                              
    <result column="DBC_PK_YN" property="dbcPkYn" jdbcType="VARCHAR" />
    <result column="DBC_PK_ORD" property="dbcPkOrd" jdbcType="VARCHAR" />
    <result column="DBC_NONUL_YN" property="dbcNonulYn" jdbcType="VARCHAR" />
    <result column="DBC_DEFLT_VAL" property="dbcDefltVal" jdbcType="VARCHAR" />
    
    
    <result column="MART_COL_CNT" property="martColCnt" jdbcType="VARCHAR" />
    <result column="MART_TBL_PNM" property="martTblPnm" jdbcType="VARCHAR" />
    <result column="MART_TBL_LNM" property="martTblLnm" jdbcType="VARCHAR" />
    <result column="MART_COL_PNM" property="martColPnm" jdbcType="VARCHAR" />
    <result column="MART_COL_LNM" property="martColLnm" jdbcType="VARCHAR" />
    <result column="MART_COL_ORD" property="martColOrd" jdbcType="VARCHAR" />
    <result column="MART_DATA_TYPE" property="martDataType" jdbcType="VARCHAR" />
    <result column="MART_DATA_LEN" property="martDataLen" jdbcType="VARCHAR" />
    <result column="MART_DATA_SCAL" property="martDataScal" jdbcType="VARCHAR" />                              
    <result column="MART_PK_YN" property="martPkYn" jdbcType="VARCHAR" />
    <result column="MART_PK_ORD" property="martPkOrd" jdbcType="VARCHAR" />
    <result column="MART_NONUL_YN" property="martNonulYn" jdbcType="VARCHAR" />
    <result column="MART_DEFLT_VAL" property="martDefltVal" jdbcType="VARCHAR" />
    
    <result column="DB_TSF_SCH_ID" property="dbTsfSchId" jdbcType="VARCHAR" />
    <result column="DB_TSF_CONN_TRG_ID" property="dbTsfConnTrgId" jdbcType="VARCHAR" />
    <result column="DB_TSF_CONN_TRG_LNM" property="dbTsfConnTrgLnm" jdbcType="VARCHAR" />
    <result column="DB_TSF_SCH_LNM" property="dbTsfSchLnm" jdbcType="VARCHAR" />
    <result column="DDL_TSF_TBL_ID" property="ddlTsfTblId" jdbcType="VARCHAR" />
    <result column="DDL_TSF_TBL_PNM" property="ddlTsfTblPnm" jdbcType="VARCHAR" />
    <result column="DDL_TSF_TBL_LNM" property="ddlTsfTblLnm" jdbcType="VARCHAR" />
    <result column="DDL_TSF_COL_ORD" property="ddlTsfColOrd" jdbcType="VARCHAR" />
    <result column="DDL_TSF_DATA_TYPE" property="ddlTsfDataType" jdbcType="VARCHAR" />
    <result column="DDL_TSF_DATA_LEN" property="ddlTsfDataLen" jdbcType="VARCHAR" />
    <result column="DDL_TSF_DATA_SCAL" property="ddlTsfDataScal" jdbcType="VARCHAR" />                              
    <result column="DDL_TSF_PK_YN" property="ddlTsfPkYn" jdbcType="VARCHAR" />
    <result column="DDL_TSF_PK_ORD" property="ddlTsfPkOrd" jdbcType="VARCHAR" />
    <result column="DDL_TSF_NONUL_YN" property="ddlTsfNonulYn" jdbcType="VARCHAR" />
    <result column="DDL_TSF_DEFLT_VAL" property="ddlTsfDefltVal" jdbcType="VARCHAR" />
    <result column="DDL_TSF_COL_CNT" property="ddlTsfColCnt" jdbcType="VARCHAR" />
    <result column="DDL_TSF_COL_PNM" property="ddlTsfColPnm" jdbcType="VARCHAR" />
    <result column="DDL_TSF_COL_LNM" property="ddlTsfColLnm" jdbcType="VARCHAR" />
    
    <result column="DB_REAL_SCH_ID" property="dbRealSchId" jdbcType="VARCHAR" />
    <result column="DBC_REAL_TBL_NM" property="dbcRealTblNm" jdbcType="VARCHAR" />
    <result column="DBC_REAL_COL_PNM" property="dbcRealColPnm" jdbcType="VARCHAR" />
    <result column="DBC_REAL_COl_LNM" property="dbcRealColLnm" jdbcType="VARCHAR" />
    <result column="DBC_REAL_COL_ORD" property="dbcRealColOrd" jdbcType="VARCHAR" />
    <result column="DBC_REAL_DATA_TYPE" property="dbcRealDataType" jdbcType="VARCHAR" />
    <result column="DBC_REAL_DATA_LEN" property="dbcRealDataLen" jdbcType="VARCHAR" />
    <result column="DBC_REAL_DATA_SCAL" property="dbcRealDataScal" jdbcType="VARCHAR" />                              
    <result column="DBC_REAL_PK_YN" property="dbcRealPkYn" jdbcType="VARCHAR" />
    <result column="DBC_REAL_PK_ORD" property="dbcRealPkOrd" jdbcType="VARCHAR" />
    <result column="DBC_REAL_NONUL_YN" property="dbcRealNonulYn" jdbcType="VARCHAR" />
    <result column="DBC_REAL_DEFLT_VAL" property="dbcRealDefltVal" jdbcType="VARCHAR" />
    <result column="DBC_REAL_COL_CNT" property="dbcRealColCnt" jdbcType="VARCHAR" />
    
    <result column="DDL_TRG_DCD"              property="ddlTrgDcd"           jdbcType="VARCHAR" />
    <result column="DBC_DB_CONN_TRG_PNM"      property="dbcDbConnTrgPnm"     jdbcType="VARCHAR" />
    <result column="DBC_DB_CONN_TRG_LNM"      property="dbcDbConnTrgLnm"     jdbcType="VARCHAR" />
    <result column="DBC_DB_SCH_LNM"           property="dbcDbSchLnm"         jdbcType="VARCHAR" />
    <result column="DBC_REAL_DB_CONN_TRG_LNM" property="dbcRealDbConnTrgLnm" jdbcType="VARCHAR" />
    <result column="DBC_REAL_DB_SCH_LNM"      property="dbcRealDbSchLnm"     jdbcType="VARCHAR" />
    
    <result column="DBC_COL_PNM" property="dbcColPnm" jdbcType="VARCHAR" />
    <result column="DBC_COL_LNM" property="dbcColLnm" jdbcType="VARCHAR" />
    
    <result column="DBC_TBL_LNM"      property="dbcTblLnm" jdbcType="VARCHAR" />
    <result column="DBC_REAL_TBL_LNM" property="dbcRealTblLnm" jdbcType="VARCHAR" />
    
    <result column="GAP_CONTS"        property="gapConts" jdbcType="VARCHAR" />
    
    <result column="SDITM_PNM"       property="sditmPnm"      jdbcType="VARCHAR" />
    <result column="SDITM_LNM"       property="sditmLnm"      jdbcType="VARCHAR" />    
    <result column="SDITM_DATA_TYPE" property="sditmDataType" jdbcType="VARCHAR" />
    <result column="SDITM_DATA_LEN"  property="sditmDataLen"  jdbcType="VARCHAR" />
    <result column="SDITM_DATA_SCAL" property="sditmDataScal" jdbcType="VARCHAR" />
    
    <result column="DB_SCH_PNM"      property="dbSchPnm"      jdbcType="VARCHAR" />
    <result column="SRC_DB_SCH_ID"   property="srcDbSchId"    jdbcType="VARCHAR" />
    <result column="SRC_DB_SCH_PNM"  property="srcDbSchPnm"   jdbcType="VARCHAR" />
    <result column="TGT_DB_SCH_ID"   property="tgtDbSchId"    jdbcType="VARCHAR" />
    <result column="TGT_DB_SCH_PNM"  property="tgtDbSchPnm"   jdbcType="VARCHAR" />
    
    <result column="REG_DTM"  property="regDtm"   jdbcType="VARCHAR" />
</resultMap>

<select id="getModelGapAnalyze" resultMap="BaseResultMap" parameterType="kr.wise.dq.gap.service.ModelGapVO">
	SELECT A.*
      ,CASE WHEN A.GAP_STATUS = 'GAP' THEN '#FF0000' END AS FontColor
  FROM (
        SELECT 
                PDM.PDM_TBL_PNM
               ,PDM.PDM_TBL_LNM
               ,PCOL.PDM_COL_CNT
               ,SUBJ.FULL_PATH AS SUBJ_LNM
               ,DB.DB_CONN_TRG_LNM
               ,SCH.DB_SCH_LNM
               ,DDL.DDL_TBL_PNM
               ,DDL.DDL_TBL_LNM
               ,DCOL.DDL_COL_CNT
               ,T.DBC_TBL_NM
               ,DBCCOL.DBC_COL_CNT
               ,T.DDL_TBL_ERR_DESCN
               ,T.DDL_COL_ERR_DESCN
               ,T.PDM_TBL_ERR_DESCN
               ,T.PDM_COL_ERR_DESCN
               ,CASE WHEN T.DDL_TBL_ERR_EXS = 'Y' THEN 'GAP'
                WHEN T.DDL_COL_ERR_EXS = 'Y' THEN 'GAP' 
                WHEN T.PDM_TBL_ERR_EXS = 'Y' THEN 'GAP'
                WHEN T.PDM_COL_ERR_EXS = 'Y' THEN 'GAP'
                ELSE 'NML' END /*END END*/ AS GAP_STATUS
               ,DB.DB_CONN_TRG_ID
               ,SCH.DB_SCH_ID
               ,DDL.DDL_TBL_ID
               ,PDM.PDM_TBL_ID
          FROM WAT_DBC_TBL T
            INNER JOIN WAA_DB_CONN_TRG DB
              ON T.DB_CONN_TRG_ID = DB.DB_CONN_TRG_ID
             AND DB.EXP_DTM = STR_TO_DATE('9999-12-31', '%Y-%m-%d')
             AND DB.REG_TYP_CD IN ('C', 'U')
            INNER JOIN WAA_DB_SCH SCH
              ON T.DB_SCH_ID = SCH.DB_SCH_ID
             AND SCH.EXP_DTM = STR_TO_DATE('9999-12-31', '%Y-%m-%d')
             AND SCH.REG_TYP_CD IN ('C', 'U')
            LEFT OUTER JOIN WAA_SUBJ SUBJ
              ON T.SUBJ_ID = SUBJ.SUBJ_ID
             AND SUBJ.EXP_DTM = STR_TO_DATE('9999-12-31', '%Y-%m-%d')
             AND SUBJ.REG_TYP_CD IN ('C', 'U')
            LEFT OUTER JOIN WAM_DDL_TBL DDL
              ON T.DDL_TBL_ID = DDL.DDL_TBL_ID
             AND DDL.REG_TYP_CD IN ('C', 'U')
            LEFT OUTER JOIN WAM_PDM_TBL PDM
              ON T.PDM_TBL_ID = PDM.PDM_TBL_ID
             AND PDM.REG_TYP_CD IN ('C', 'U')
            LEFT OUTER JOIN ( SELECT PDM_TBL_ID, COUNT(1) AS PDM_COL_CNT
                                FROM WAM_PDM_COL
                               WHERE REG_TYP_CD IN ('C', 'U')
                               GROUP BY PDM_TBL_ID ) PCOL
              ON PDM.PDM_TBL_ID = PCOL.PDM_TBL_ID
            LEFT OUTER JOIN ( SELECT DDL_TBL_ID, COUNT(1) AS DDL_COL_CNT
                                FROM WAM_DDL_COL
                               WHERE REG_TYP_CD IN ('C', 'U')
                               GROUP BY DDL_TBL_ID ) DCOL
              ON DDL.DDL_TBL_ID = DCOL.DDL_TBL_ID
            LEFT OUTER JOIN ( SELECT DB_SCH_ID, DBC_TBL_NM, COUNT(1) AS DBC_COL_CNT
                                FROM WAT_DBC_COL
                               WHERE 1 = 1
                               GROUP BY DB_SCH_ID, DBC_TBL_NM ) DBCCOL
              ON T.DB_SCH_ID = DBCCOL.DB_SCH_ID
             AND T.DBC_TBL_NM = DBCCOL.DBC_TBL_NM
            
            
           WHERE 1=1
<!--            메타 물리모델 미존재도 GAP 으로 나와야 한다. -->
<!--              AND T.SUBJ_ID IS NOT NULL -->
<!--              AND T.DDL_TBL_ID IS NOT NULL -->
<!--              AND T.PDM_TBL_ID IS NOT NULL  -->
             AND DB.META_MNG_YN ='Y'
<!--              <if test="fullPath != null"> -->
<!--              AND SUBJ.FULL_PATH LIKE '%' || #{fullPath,jdbcType=VARCHAR} || '%' -->
<!--              </if> -->
			 <if test="subjId != null">
			 AND T.SUBJ_ID = #{subjId,jdbcType=VARCHAR}
			 </if>
             <if test="dbConnTrgId != null">
             AND T.DB_CONN_TRG_ID = #{dbConnTrgId,jdbcType=VARCHAR}
             </if>
             <if test="dbSchId != null">
             AND T.DB_SCH_ID = #{dbSchId,jdbcType=VARCHAR}
             </if>
             <if test="searchBgnDe != null">
             <![CDATA[
             AND TO_CHAR(DDL.APRV_DTM, '%Y-%m-%d') >= #{searchBgnDe,jdbcType=VARCHAR}
             ]]>
             </if>
             <if test="searchEndDe != null">
             <![CDATA[
             AND TO_CHAR(DDL.APRV_DTM, '%Y-%m-%d') <= #{searchEndDe,jdbcType=VARCHAR}
             ]]>
             </if>
             <if test='searchTyp == "CU"'>
             AND IFNULL(T.REG_TYP, 'C') IN ('C', 'U')
             </if>
             <if test="tblNm != null">
             AND (    T.DBC_TBL_NM LIKE '%' || UPPER( #{tblNm,jdbcType=VARCHAR}) || '%' 
                    OR T.DBC_TBL_KOR_NM LIKE '%' || UPPER(#{tblNm,jdbcType=VARCHAR}) || '%'
                    OR DDL.DDL_TBL_PNM  LIKE '%' || UPPER(#{tblNm,jdbcType=VARCHAR}) || '%'
                    OR DDL.DDL_TBL_LNM LIKE '%' || UPPER(#{tblNm,jdbcType=VARCHAR}) || '%'
<!--                     OR PDM.PDM_TBL_PNM  LIKE '%' || UPPER(#{tblNm,jdbcType=VARCHAR}) || '%' -->
<!--                     OR PDM.PDM_TBL_LNM LIKE '%' || UPPER(#{tblNm,jdbcType=VARCHAR}) || '%' -->
                    )
             </if>
             ) A
     	<where>
     	<if test="gapStatus != null">
        AND A.GAP_STATUS = #{gapStatus,jdbcType=VARCHAR}
        </if>
     	</where>
     	ORDER BY A.GAP_STATUS
</select>

<select id="getGapChart" resultMap="BaseResultMap">
	SELECT COUNT(1) AS PDM_TBL_CNT
	      ,SUM(CASE WHEN A.GAP_STATUS = 'GAP' THEN 1 ELSE 0 END ) AS GAP_CNT
	      ,SUM(CASE WHEN A.GAP_STATUS = 'GAP' THEN 0 ELSE 1 END ) AS NML_CNT
	  FROM (
	        SELECT PDM.PDM_TBL_PNM
	              ,T.*
	              ,CASE WHEN T.DDL_TBL_ERR_EXS = 'Y' THEN 'GAP'
	               ELSE CASE WHEN T.DDL_COL_ERR_EXS = 'Y' THEN 'GAP' 
	               ELSE CASE WHEN T.PDM_TBL_ERR_EXS = 'Y' THEN 'GAP'
	               ELSE CASE WHEN T.PDM_COL_ERR_EXS = 'Y' THEN 'GAP'
	               ELSE CASE WHEN T.DBC_TBL_NM IS NULL THEN 'GAP'
	               ELSE 'NML' END END END END END AS GAP_STATUS
	          FROM WAM_PDM_TBL PDM
	            LEFT OUTER JOIN WAT_DBC_TBL T
	              ON PDM.PDM_TBL_ID = T.PDM_TBL_ID
<!-- 	             AND IFNULL(T.REG_TYP, 'C') IN ('C', 'U') -->
	              ) A
</select>

<select id="getModelDdlColGapList" resultMap="BaseResultMap" parameterType="kr.wise.dq.gap.service.ModelGapVO">
SELECT A.*
      ,CASE WHEN A.GAP_STATUS = 'GAP' THEN '#FF0000' END AS FontColor
  FROM (
          SELECT 
            A.PDM_TBL_ID 
           ,A.PDM_TBL_PNM 
           ,A.PDM_TBL_LNM 
           ,A.PDM_COL_ID 
           ,A.PDM_COL_PNM 
           ,A.PDM_COL_LNM
           ,A.COL_ORD AS PDM_COL_ORD
           ,A.DATA_TYPE      AS PDM_DATA_TYPE 
           ,A.DATA_LEN       AS PDM_DATA_LEN  
           ,A.DATA_SCAL      AS PDM_DATA_SCAL 
           ,IFNULL(A.PK_YN,'-') AS PDM_PK_YN     
           ,A.PK_ORD         AS PDM_PK_ORD    
           ,IFNULL(A.NONUL_YN,'-') AS PDM_NONUL_YN  
           ,A.DEFLT_VAL      AS PDM_DEFLT_VAL 
           ,C.DDL_TBL_ID
           ,C.DDL_TBL_PNM
           ,C.DDL_TBL_LNM
           ,C.DDL_COL_ID
           ,C.DDL_COL_PNM
           ,C.DDL_COL_LNM
           ,C.COL_ORD      AS DDL_COL_ORD   
           ,C.DATA_TYPE    AS DDL_DATA_TYPE 
           ,C.DATA_LEN     AS DDL_DATA_LEN  
           ,C.DATA_SCAL    AS DDL_DATA_SCAL 
           ,IFNULL(C.PK_YN,'-')  AS DDL_PK_YN     
           ,C.PK_ORD       AS DDL_PK_ORD    
           ,IFNULL(C.NONUL_YN,'-') AS DDL_NONUL_YN  
           ,C.DEFLT_VAL    AS DDL_DEFLT_VAL 
           ,CASE WHEN IFNULL(A.COL_ORD,0)   != IFNULL(C.COL_ORD, 0) 
                   OR IFNULL(A.DATA_TYPE,'-') != IFNULL(C.DATA_TYPE,'-')
                   OR IFNULL(A.DATA_LEN,0)  != IFNULL(C.DATA_LEN ,0)
                   OR IFNULL(A.DATA_SCAL,0) != IFNULL(C.DATA_SCAL,0)
                   OR IFNULL(A.NONUL_YN,'N') != IFNULL(C.NONUL_YN,'N') 
                   OR IFNULL(REPLACE(A.DEFLT_VAL,CHR(39),NULL),'-') != IFNULL(REPLACE(C.DEFLT_VAL,CHR(39), NULL),'-')
                   OR IFNULL(A.PK_YN ,'N')    != IFNULL(C.PK_YN   ,'N') 
                   OR IFNULL(A.PK_ORD,0)    != IFNULL(C.PK_ORD,0)   THEN 'GAP'      
             ELSE 'NML' END AS GAP_STATUS       
          FROM (SELECT  A.PDM_TBL_ID                       
                        ,A.PDM_TBL_PNM                      
                        ,A.PDM_TBL_LNM                      
                        ,B.PDM_COL_ID                       
                        ,B.PDM_COL_PNM                      
                        ,B.PDM_COL_LNM                      
                        ,B.COL_ORD        
                        ,B.DATA_TYPE      
                        ,B.DATA_LEN       
                        ,B.DATA_SCAL      
                        ,B.PK_YN
                        ,B.PK_ORD         
                        ,B.NONUL_YN
                        ,B.DEFLT_VAL                  
                FROM WAM_PDM_TBL A
                INNER JOIN WAM_PDM_COL B
                ON A.PDM_TBL_ID = B.PDM_TBL_ID) A
          FULL OUTER JOIN 
                (SELECT  C.DDL_TBL_ID                                   
                        ,C.DDL_TBL_PNM                                  
                        ,C.DDL_TBL_LNM                                  
                        ,D.DDL_COL_ID                                   
                        ,D.DDL_COL_PNM                                  
                        ,D.DDL_COL_LNM                                  
                        ,D.COL_ORD                 
                        ,D.DATA_TYPE         
                        ,D.DATA_LEN                 
                        ,D.DATA_SCAL          
                        ,D.PK_YN          
                        ,D.PK_ORD                
                        ,D.NONUL_YN      
                        ,D.DEFLT_VAL 
                        ,C.PDM_TBL_ID
                 FROM WAM_DDL_TBL C
                 INNER JOIN WAM_DDL_COL D
                 ON C.DDL_TBL_ID = D.DDL_TBL_ID
            ) C
          ON A.PDM_TBL_ID = C.PDM_TBL_ID
          AND A.PDM_COL_PNM = C.DDL_COL_PNM
          WHERE 1=1
          AND (A.PDM_TBL_PNM = #{pdmTblId,jdbcType=VARCHAR} OR C.DDL_TBL_ID = #{ddlTblId,jdbcType=VARCHAR})
          ) A
ORDER BY PDM_TBL_PNM, PDM_COL_ORD,DDL_COL_ORD
</select>

<select id="selectPdmDdlGapList" resultMap="BaseResultMap" parameterType="kr.wise.dq.gap.service.ModelGapVO">
SELECT A.*,
       CASE WHEN A.GAP_STATUS = 'GAP' THEN '#FF0000' END AS FontColor
      FROM (
      SELECT --FULL_PATH AS SUBJ_LNM, 
               MAX(SUBJ_LNM) AS SUBJ_LNM,
               PDM_TBL_PNM,
               MAX(PDM_TBL_LNM) PDM_TBL_LNM,
               MAX(PDM_TBL_ID) PDM_TBL_ID,
               COUNT(PDM_COL_PNM) AS PDM_COL_CNT, 
               MAX(DB_CONN_TRG_PNM) DB_CONN_TRG_LNM,
               MAX(DB_SCH_PNM) DB_SCH_LNM,
               MAX(DDL_TBL_PNM) DDL_TBL_PNM,
               MAX(DDL_TBL_ID) DDL_TBL_ID,
               COUNT(DDL_COL_PNM) AS DDL_COL_CNT,
               CASE WHEN SUM(GAP_STATUS_SUM) > 0 THEN 'GAP'
                    WHEN  COUNT(DDL_COL_PNM) !=  COUNT(PDM_COL_PNM) THEN 'GAP'
               ELSE 'NML' END GAP_STATUS,
               CASE WHEN COUNT(PDM_COL_PNM) = 0 THEN '[물리모델테이블미존재]'
                         WHEN COUNT(DDL_COL_PNM) = 0 THEN '[DDL개발테이블미존재]'
                   ELSE  '' END  GAP_CONTS
              FROM (
                   SELECT A.*
                         ,DECODE(GAP_STATUS, 'GAP', 1, 0) GAP_STATUS_SUM
                     FROM (
                            SELECT
                              A.FULL_PATH
                             ,SUBJ.SUBJ_LNM
                             ,A.PDM_TBL_ID 
                             ,IFNULL(A.PDM_TBL_PNM,C.DDL_TBL_PNM) AS PDM_TBL_PNM
                             ,A.PDM_TBL_LNM 
                             ,A.PDM_COL_ID 
                             ,A.PDM_COL_PNM 
                             ,A.PDM_COL_LNM
                             ,A.COL_ORD      AS PDM_COL_ORD
                             ,A.DATA_TYPE    AS PDM_DATA_TYPE 
                             ,A.DATA_LEN     AS PDM_DATA_LEN  
                             ,A.DATA_SCAL    AS PDM_DATA_SCAL 
                             ,A.PK_YN        AS PDM_PK_YN     
                             ,A.PK_ORD       AS PDM_PK_ORD    
                             ,A.NONUL_YN     AS PDM_NONUL_YN  
                             ,A.DEFLT_VAL    AS PDM_DEFLT_VAL
                             ,TRG.DB_CONN_TRG_PNM
                             ,SCH.DB_SCH_PNM
                             ,C.DDL_TBL_ID
                             ,C.DDL_TBL_PNM
                             ,C.DDL_TBL_LNM
                             ,C.DDL_COL_ID
                             ,C.DDL_COL_PNM
                             ,C.DDL_COL_LNM
                             ,C.COL_ORD      AS DDL_COL_ORD   
                             ,C.DATA_TYPE    AS DDL_DATA_TYPE 
                             ,C.DATA_LEN     AS DDL_DATA_LEN  
                             ,C.DATA_SCAL    AS DDL_DATA_SCAL 
                             ,C.PK_YN        AS DDL_PK_YN     
                             ,C.PK_ORD       AS DDL_PK_ORD    
                             ,C.NONUL_YN     AS DDL_NONUL_YN  
                             ,C.DEFLT_VAL    AS DDL_DEFLT_VAL 
                             ,CASE WHEN IFNULL(A.COL_ORD,0)   != IFNULL(C.COL_ORD, 0) 
                                     OR IFNULL(A.DATA_TYPE,'-') != IFNULL(C.DATA_TYPE,'-')
                                     OR IFNULL(A.DATA_LEN,0)  != IFNULL(C.DATA_LEN ,0)
                                     OR IFNULL(A.DATA_SCAL,0) != IFNULL(C.DATA_SCAL,0)
                                     OR IFNULL(A.PK_YN ,'-')    != IFNULL(C.PK_YN   ,'-') 
                                     OR IFNULL(REPLACE(A.DEFLT_VAL,CHR(39),NULL),'-') != IFNULL(REPLACE(C.DEFLT_VAL,CHR(39), NULL),'-')
                                     OR IFNULL(A.PK_ORD,0)    != IFNULL(C.PK_ORD,0)   THEN 'GAP'
                               ELSE 'NRM' END AS GAP_STATUS      
                            FROM (SELECT  A.PDM_TBL_ID                       
                                         ,A.PDM_TBL_PNM                      
                                         ,A.PDM_TBL_LNM                      
                                         ,B.PDM_COL_ID                       
                                         ,B.PDM_COL_PNM                      
                                         ,B.PDM_COL_LNM                      
                                         ,B.COL_ORD        
                                         ,B.DATA_TYPE      
                                         ,B.DATA_LEN       
                                         ,B.DATA_SCAL      
                                         ,B.PK_YN
                                         ,B.PK_ORD         
                                         ,B.NONUL_YN
                                         ,B.DEFLT_VAL  
                                         ,A.SUBJ_ID
                                         ,A.FULL_PATH
                                         ,A.APRV_DTM
                                 FROM WAM_PDM_TBL A
                                 INNER JOIN WAM_PDM_COL B
                                 ON A.PDM_TBL_ID = B.PDM_TBL_ID) A
                            FULL OUTER JOIN 
                                  (SELECT  C.DDL_TBL_ID                                   
                                          ,C.DDL_TBL_PNM                                  
                                          ,C.DDL_TBL_LNM                                  
                                          ,D.DDL_COL_ID                                   
                                          ,D.DDL_COL_PNM                                  
                                          ,D.DDL_COL_LNM                                  
                                          ,D.COL_ORD                 
                                          ,D.DATA_TYPE         
                                          ,D.DATA_LEN                 
                                          ,D.DATA_SCAL          
                                          ,D.PK_YN          
                                          ,D.PK_ORD                
                                          ,D.NONUL_YN      
                                          ,D.DEFLT_VAL 
                                                ,C.PDM_TBL_ID
                                                ,C.DB_SCH_ID
                                         FROM WAM_DDL_TBL C
                                         INNER JOIN WAM_DDL_COL D
                                         ON C.DDL_TBL_ID = D.DDL_TBL_ID
                                    ) C
                                  ON A.PDM_TBL_ID = C.PDM_TBL_ID
                                  AND A.PDM_COL_PNM = C.DDL_COL_PNM
                                  LEFT OUTER JOIN WAA_DB_SCH SCH
                                  ON SCH.DB_SCH_ID = C.DB_SCH_ID
                                  AND SCH.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')
                                  AND SCH.REG_TYP_CD IN ('C', 'U')
                                  LEFT OUTER JOIN WAA_DB_CONN_TRG TRG
                                  ON SCH.DB_CONN_TRG_ID = TRG.DB_CONN_TRG_ID
                                  AND TRG.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')
                                  AND TRG.REG_TYP_CD IN ('C', 'U')
                                  LEFT OUTER JOIN WAA_SUBJ SUBJ
                                  ON A.SUBJ_ID = SUBJ.SUBJ_ID
                                  AND SUBJ.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')
                                  AND SUBJ.REG_TYP_CD IN ('C','U')
                                  WHERE 1=1
                                 <if test="fullPath != null">
                                 AND A.FULL_PATH LIKE '%' || #{fullPath,jdbcType=VARCHAR} || '%'
                                 </if>
                                  <if test="dbConnTrgId != null">
                                  AND TRG.DB_CONN_TRG_ID = #{dbConnTrgId,jdbcType=VARCHAR}
                                 </if>
                                 <if test="dbSchId != null">
                                  AND C.DB_SCH_ID = #{dbSchId,jdbcType=VARCHAR}
                                 </if>
                                 <if test="searchBgnDe != null">
                                 <![CDATA[
                                 AND TO_CHAR(A.APRV_DTM, '%Y-%m-%d') >= #{searchBgnDe,jdbcType=VARCHAR}
                                 ]]>
                                 </if>
                                 <if test="searchEndDe != null">
                                 <![CDATA[
                                 AND TO_CHAR(A.APRV_DTM, '%Y-%m-%d') <= #{searchEndDe,jdbcType=VARCHAR}
                                 ]]>
                                 </if>
                                 <if test="tblNm != null">
                                 AND (  C.DDL_TBL_PNM  LIKE '%' || UPPER(#{tblNm,jdbcType=VARCHAR}) || '%'
                                        OR C.DDL_TBL_LNM LIKE '%' || UPPER(#{tblNm,jdbcType=VARCHAR}) || '%'
                                        OR A.PDM_TBL_PNM  LIKE '%' || UPPER(#{tblNm,jdbcType=VARCHAR}) || '%'
                                        OR A.PDM_TBL_LNM LIKE '%' || UPPER(#{tblNm,jdbcType=VARCHAR}) || '%'
                                        )
                                 </if>
                          ) A
                    ORDER BY PDM_TBL_PNM, PDM_COL_ORD
                  ) 
       GROUP BY PDM_TBL_PNM
    ) A
    <where>
     <if test="gapStatus != null">
     AND GAP_STATUS = #{gapStatus,jdbcType=VARCHAR}
     </if>
    </where>
     ORDER BY GAP_STATUS 
</select>

<select id="selectDdlDbcGapList" resultMap="BaseResultMap" parameterType="kr.wise.dq.gap.service.ModelGapVO">
SELECT A.*,                                                          
       IFNULL(SCH.DB_SCH_PNM,SCH.DB_SCH_LNM) DB_SCH_LNM,
       IFNULL(TRG.DB_CONN_TRG_PNM, TRG.DB_CONN_TRG_LNM) DB_CONN_TRG_LNM,           
       CASE WHEN A.GAP_STATUS = 'GAP' THEN '#FF0000' END AS FontColor           
       FROM (                                                                    
             SELECT DECODE(SUM(GAP_STATUS),0,'NML', 'GAP') AS GAP_STATUS
                   ,CASE WHEN COUNT(DDL_COL_PNM) = 0 THEN '[DDL테이블미존재]'
                         WHEN COUNT(DBC_COL_PNM) = 0 THEN '[DBC테이블미존재]'
                   ELSE  MAX(GAP_CONTS) END  GAP_CONTS               
                   ,MAX(DDL_TBL_ID)     DDL_TBL_ID                                             
                   ,DDL_TBL_PNM         DDL_TBL_PNM                                         
                   ,MAX(DDL_TBL_LNM)   DDL_TBL_LNM                                         
                   ,COUNT(DDL_COL_PNM) DDL_COL_CNT                                         
                   ,MAX(DBC_TBL_PNM)    DBC_TBL_NM                                          
                   --,MAX(DBC_TBL_LNM)    DBC_TBL_LNM                                          
                   ,COUNT(DBC_COL_PNM)  DBC_COL_CNT   
                   ,MAX(DB_SCH_ID)      DB_SCH_ID  
                   ,MAX(SUBJ_LNM)       SUBJ_LNM                              
             FROM (
                  SELECT 
                    C.DDL_TBL_ID
                   ,IFNULL(C.DDL_TBL_PNM,DBC.DBC_TBL_NM) AS DDL_TBL_PNM
                   ,C.DDL_TBL_LNM
                   ,C.DDL_COL_ID
                   ,IFNULL(C.DDL_COL_PNM,DBC.DBC_COL_NM) AS DDL_COL_PNM
                   ,C.DDL_COL_LNM
                   ,IFNULL(C.COL_ORD,DBC.ORD) AS DDL_COL_ORD   
                   ,C.DATA_TYPE    AS DDL_DATA_TYPE 
                   ,C.DATA_LEN     AS DDL_DATA_LEN  
                   ,C.DATA_SCAL    AS DDL_DATA_SCAL 
                   ,IFNULL(C.PK_YN,'-')  AS DDL_PK_YN     
                   ,C.PK_ORD       AS DDL_PK_ORD    
                   ,IFNULL(C.NONUL_YN,'-') AS DDL_NONUL_YN  
                   ,C.DEFLT_VAL    AS DDL_DEFLT_VAL 
                   ,DBC.DBC_TBL_NM AS DBC_TBL_PNM
                   ,DBC.DBC_COL_NM AS DBC_COL_PNM
                   ,DBC.ORD         AS DBC_COL_ORD
                   ,DBC.DATA_TYPE   AS DBC_DATA_TYPE
                   ,DBC.DATA_LEN   AS DBC_DATA_LEN
                   ,DECODE(DBC.DATA_PNT,0,NULL,DBC.DATA_PNT) AS DBC_DATA_SCAL
                   ,DECODE(IFNULL(DBC.NULL_YN,'-'),'N','Y','Y','N','-')    AS DBC_NONUL_YN 
                   ,DBC.DEFLT_VAL   AS DBC_DEFLT_VAL
                   ,DBC.PK_YN       AS DBC_PK_YN
                   ,DBC.PK_ORD      AS DBC_PK_ORD
                   ,CASE WHEN IFNULL(DBC.ORD,0)   != IFNULL(C.COL_ORD, 0) 
                           OR IFNULL(DBC.DATA_TYPE,'-') != IFNULL(C.DATA_TYPE,'-')
                           OR IFNULL(DBC.DATA_LEN,0)  != IFNULL(C.DATA_LEN ,0)
                           OR IFNULL(DBC.DATA_PNT,0) != IFNULL(C.DATA_SCAL,0)
                           OR DECODE(IFNULL(DBC.NULL_YN,'N'),'N','Y','N') != IFNULL(C.NONUL_YN,'N') 
                           OR IFNULL(REPLACE(DBC.DEFLT_VAL,CHR(39),NULL),'-') != IFNULL(REPLACE(C.DEFLT_VAL,CHR(39), NULL),'-')
                           OR IFNULL(DBC.PK_YN ,'N')    != IFNULL(C.PK_YN   ,'N') 
                           OR IFNULL(DBC.PK_ORD,0)    != IFNULL(C.PK_ORD,0)   THEN 1
                     ELSE 0 END AS GAP_STATUS 
                     , CASE WHEN C.DDL_TBL_PNM IS NULL THEN '[DDL컬럼미존재]' ELSE '' END
                      ||CASE WHEN DBC.DBC_TBL_NM IS NULL THEN '[DBC컬럼미존재]' ELSE '' END
                      ||CASE WHEN DBC.DBC_TBL_NM IS NOT NULL
                              AND C.DDL_TBL_PNM IS NOT NULL
                              AND (IFNULL(DBC.ORD,0)   != IFNULL(C.COL_ORD, 0) 
                                   OR IFNULL(DBC.DATA_TYPE,'-') != IFNULL(C.DATA_TYPE,'-')
                                   OR IFNULL(DBC.DATA_LEN,0)  != IFNULL(C.DATA_LEN ,0)
                                   OR IFNULL(DBC.DATA_PNT,0) != IFNULL(C.DATA_SCAL,0)
                                   OR DECODE(IFNULL(DBC.NULL_YN,'N'),'N','Y','N') != IFNULL(C.NONUL_YN,'N') 
                                   OR IFNULL(REPLACE(DBC.DEFLT_VAL,CHR(39),NULL),'-') != IFNULL(REPLACE(C.DEFLT_VAL,CHR(39), NULL),'-')
                                   OR IFNULL(DBC.PK_YN ,'N')    != IFNULL(C.PK_YN   ,'N') 
                                   OR IFNULL(DBC.PK_ORD,0)    != IFNULL(C.PK_ORD,0))
                      THEN '[컬럼GAP존재]' ELSE '' END
                      AS GAP_CONTS       
                    ,IFNULL(C.DB_SCH_ID , DBC.DB_SCH_ID) DB_SCH_ID
                    ,C.SUBJ_LNM
                  FROM (SELECT   C.DDL_TBL_ID
                        ,C.DDL_TBL_PNM
                        ,C.DDL_TBL_LNM
                        ,D.DDL_COL_ID
                        ,D.DDL_COL_PNM
                        ,D.DDL_COL_LNM
                        ,D.COL_ORD       
                        ,D.DATA_TYPE    
                        ,D.DATA_LEN     
                        ,D.DATA_SCAL    
                        ,D.PK_YN 
                        ,D.PK_ORD  
                        ,D.NONUL_YN
                        ,D.DEFLT_VAL
                        ,C.DB_SCH_ID
                        ,C.APRV_DTM
                        ,TRG.DB_CONN_TRG_ID
                        ,PDM.FULL_PATH
                        ,SUBJ.SUBJ_LNM
                        FROM WAM_DDL_TBL C
                        INNER JOIN WAM_DDL_COL D
                        ON C.DDL_TBL_ID = D.DDL_TBL_ID
                        LEFT OUTER JOIN WAA_DB_SCH SCH
                        ON C.DB_SCH_ID = SCH.DB_SCH_ID
                        AND SCH.REG_TYP_CD IN ('C', 'U')
                        AND SCH.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')
                        LEFT OUTER JOIN WAA_DB_CONN_TRG TRG
                        ON SCH.DB_CONN_TRG_ID =TRG.DB_CONN_TRG_ID
                        AND TRG.REG_TYP_CD IN ('C', 'U')
                        AND TRG.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')
                        LEFT OUTER JOIN WAM_PDM_TBL PDM
                        ON C.PDM_TBL_ID = PDM.PDM_TBL_ID
                        LEFT OUTER JOIN WAA_SUBJ SUBJ
                        ON PDM.SUBJ_ID = SUBJ.SUBJ_ID
                        AND SUBJ.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')
                        AND SUBJ.REG_TYP_CD IN ('C', 'U')
                        WHERE 1=1
                        <choose>
                    		<when test="gapDcd.equals('DC')">
                    			AND SCH.DDL_TRG_DCD = 'D'		--개발
                    		</when>
                    		<when test="gapDcd.equals('TC')">
                    			AND SCH.DDL_TRG_DCD = 'T'		--테스트
                    		</when>
                    		<when test="gapDcd.equals('RC')">
                    			AND SCH.DDL_TRG_DCD = 'R'		--운영
                    		</when>
                        </choose>
                        AND SCH.DDL_TRG_YN = 'Y'			--DDL대상여부
                                                      ) C
                  FULL OUTER JOIN (SELECT DBC.DB_SCH_ID
                                         ,DBC.DBC_TBL_NM
                                         ,DBC.DBC_TBL_KOR_NM
                                         ,DBCCOL.DBC_COL_NM 
                                         ,DBCCOL.ORD      
                                         ,DBCCOL.DATA_TYPE
                                         ,DBCCOL.DATA_LEN
                                         ,DBCCOL.DATA_PNT
                                         ,DBCCOL.NULL_YN
                                         ,DBCCOL.DEFLT_VAL 
                                         ,DBCCOL.PK_YN     
                                         ,DBCCOL.PK_ORD    
                                   FROM WAT_DBC_TBL DBC
                                   INNER JOIN WAT_DBC_COL DBCCOL
                                   ON DBCCOL.DBC_TBL_NM = DBC.DBC_TBL_NM
                                   AND DBC.DB_SCH_ID =DBCCOL.DB_SCH_ID
                                   LEFT OUTER JOIN WAA_DB_SCH SCH
                                   ON DBC.DB_SCH_ID =SCH.DB_SCH_ID
                                   AND SCH.REG_TYP_CD IN ('C', 'U')
                                   AND SCH.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')
                                   WHERE 1=1
                                    <choose>
                                		<when test="gapDcd.equals('DC')">
                                			AND SCH.DDL_TRG_DCD = 'D'		--개발
                                		</when>
                                		<when test="gapDcd.equals('TC')">
                                			AND SCH.DDL_TRG_DCD = 'T'		--테스트
                                		</when>
                                		<when test="gapDcd.equals('RC')">
                                			AND SCH.DDL_TRG_DCD = 'R'		--운영
                                		</when>
                                    </choose>
                                   ) DBC
                  ON C.DB_SCH_ID = DBC.DB_SCH_ID
                  AND C.DDL_TBL_PNM = DBC.DBC_TBL_NM
                  AND C.DDL_COL_PNM = DBC.DBC_COL_NM 
                  WHERE 1=1   
                <if test="fullPath != null">
                AND C.FULL_PATH LIKE '%' || #{fullPath,jdbcType=VARCHAR} || '%'
                </if>
                 <if test="dbConnTrgId != null">
                 AND C.DB_CONN_TRG_ID = #{dbConnTrgId,jdbcType=VARCHAR}
                </if>
                <if test="dbSchId != null">
                 AND C.DB_SCH_ID = #{dbSchId,jdbcType=VARCHAR}
                </if>
                <if test="searchBgnDe != null">
                <![CDATA[
                AND TO_CHAR(C.APRV_DTM, '%Y-%m-%d') >= #{searchBgnDe,jdbcType=VARCHAR}
                ]]>
                </if>
                <if test="searchEndDe != null">
                <![CDATA[
                AND TO_CHAR(C.APRV_DTM, '%Y-%m-%d') <= #{searchEndDe,jdbcType=VARCHAR}
                ]]>
                </if>
                <if test="tblNm != null">
                AND (  C.DDL_TBL_PNM  LIKE '%' || UPPER(#{tblNm,jdbcType=VARCHAR}) || '%'
                       OR C.DDL_TBL_LNM LIKE '%' || UPPER(#{tblNm,jdbcType=VARCHAR}) || '%'
                       OR DBC.DBC_TBL_NM  LIKE '%' || UPPER(#{tblNm,jdbcType=VARCHAR}) || '%'
                       OR DBC.DBC_TBL_KOR_NM LIKE '%' || UPPER(#{tblNm,jdbcType=VARCHAR}) || '%'
                       )
                       </if>
            ) A
             GROUP BY DDL_TBL_PNM
      ) A
      LEFT OUTER JOIN WAA_DB_SCH SCH
      ON A.DB_SCH_ID = SCH.DB_SCH_ID
      AND SCH.REG_TYP_CD IN ('C', 'U')
      AND SCH.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')
      LEFT OUTER JOIN WAA_DB_CONN_TRG TRG
      ON SCH.DB_CONN_TRG_ID = TRG.DB_CONN_TRG_ID
      AND TRG.REG_TYP_CD IN ('C', 'U')
      AND TRG.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')
    <where>
     <if test="gapStatus != null">
     AND A.GAP_STATUS = #{gapStatus,jdbcType=VARCHAR}
     </if>
    </where>
     ORDER BY GAP_STATUS, GAP_CONTS 
</select>
<select id="selectDdlDbcColGapList" resultMap="BaseResultMap" parameterType="kr.wise.dq.gap.service.ModelGapVO">
SELECT A.*
      ,CASE WHEN A.GAP_STATUS = 'GAP' THEN '#FF0000' END AS FontColor
  FROM (
                  SELECT 
                    C.DDL_TBL_ID
                   ,IFNULL(C.DDL_TBL_PNM,DBC.DBC_TBL_NM) AS DDL_TBL_PNM
                   ,C.DDL_TBL_LNM
                   ,C.DDL_COL_ID
                   ,IFNULL(C.DDL_COL_PNM,DBC.DBC_COL_NM) AS DDL_COL_PNM
                   ,C.DDL_COL_LNM
                   ,C.COL_ORD      AS DDL_COL_ORD   
                   ,C.DATA_TYPE    AS DDL_DATA_TYPE 
                   ,C.DATA_LEN     AS DDL_DATA_LEN  
                   ,C.DATA_SCAL    AS DDL_DATA_SCAL 
                   ,IFNULL(C.PK_YN,'-')  AS DDL_PK_YN     
                   ,C.PK_ORD       AS DDL_PK_ORD    
                   ,IFNULL(C.NONUL_YN,'-') AS DDL_NONUL_YN  
                   ,C.DEFLT_VAL    AS DDL_DEFLT_VAL 
                   ,DBC.DBC_TBL_NM AS DBC_TBL_PNM
                   ,DBC.DBC_COL_NM AS DBC_COL_PNM
                   ,DBC.ORD         AS DBC_COL_ORD
                   ,DBC.DATA_TYPE   AS DBC_DATA_TYPE
                   ,DBC.DATA_LEN   AS DBC_DATA_LEN
                   ,DECODE(DBC.DATA_PNT,0,NULL,DBC.DATA_PNT) AS DBC_DATA_SCAL
                   ,DECODE(IFNULL(DBC.NULL_YN,'-'),'N','Y','Y','N','-')    AS DBC_NONUL_YN 
                   ,DBC.DEFLT_VAL   AS DBC_DEFLT_VAL
                   ,DBC.PK_YN       AS DBC_PK_YN
                   ,DBC.PK_ORD      AS DBC_PK_ORD
                   ,CASE WHEN IFNULL(DBC.ORD,0)   != IFNULL(C.COL_ORD, 0) 
                           OR IFNULL(DBC.DATA_TYPE,'-') != IFNULL(C.DATA_TYPE,'-')
                           OR IFNULL(DBC.DATA_LEN,0)  != IFNULL(C.DATA_LEN ,0)
                           OR IFNULL(DBC.DATA_PNT,0) != IFNULL(C.DATA_SCAL,0)
                           OR DECODE(IFNULL(DBC.NULL_YN,'N'),'N','Y','N') != IFNULL(C.NONUL_YN,'N') 
                           OR IFNULL(REPLACE(DBC.DEFLT_VAL,CHR(39),NULL),'-') != IFNULL(REPLACE(C.DEFLT_VAL,CHR(39), NULL),'-')
                           OR IFNULL(DBC.PK_YN ,'N')    != IFNULL(C.PK_YN   ,'N') 
                           OR IFNULL(DBC.PK_ORD,0)    != IFNULL(C.PK_ORD,0)   THEN 'GAP'      
                     ELSE 'NML' END AS GAP_STATUS       
                  FROM (SELECT   C.DDL_TBL_ID
                        ,C.DDL_TBL_PNM
                        ,C.DDL_TBL_LNM
                        ,D.DDL_COL_ID
                        ,D.DDL_COL_PNM
                        ,D.DDL_COL_LNM
                        ,D.COL_ORD       
                        ,D.DATA_TYPE    
                        ,D.DATA_LEN     
                        ,D.DATA_SCAL    
                        ,D.PK_YN 
                        ,D.PK_ORD  
                        ,D.NONUL_YN
                        ,D.DEFLT_VAL
                        ,C.DB_SCH_ID
                        FROM WAM_DDL_TBL C
                        INNER JOIN WAM_DDL_COL D
                        ON C.DDL_TBL_ID = D.DDL_TBL_ID) C
                  FULL OUTER JOIN (SELECT DBC.DB_SCH_ID
                                         ,DBC.DBC_TBL_NM
                                         ,DBCCOL.DBC_COL_NM 
                                         ,DBCCOL.ORD      
                                         ,DBCCOL.DATA_TYPE
                                         ,DBCCOL.DATA_LEN
                                         ,DBCCOL.DATA_PNT
                                         ,DBCCOL.NULL_YN
                                         ,DBCCOL.DEFLT_VAL 
                                         ,DBCCOL.PK_YN     
                                         ,DBCCOL.PK_ORD    
                                   FROM WAT_DBC_TBL DBC
                                   INNER JOIN WAT_DBC_COL DBCCOL
                                   ON DBCCOL.DBC_TBL_NM = DBC.DBC_TBL_NM
                                   AND DBC.DB_SCH_ID =DBCCOL.DB_SCH_ID
                                   ) DBC
                  ON C.DB_SCH_ID = DBC.DB_SCH_ID
                  AND C.DDL_TBL_PNM = DBC.DBC_TBL_NM
                  AND C.DDL_COL_PNM = DBC.DBC_COL_NM 
                  WHERE 1=1   
                    AND (C.DDL_TBL_PNM = #{ddlTblPnm,jdbcType=VARCHAR} OR DBC.DBC_TBL_NM = #{ddlTblPnm,jdbcType=VARCHAR}
                         OR C.DDL_TBL_PNM = #{dbcTblNm,jdbcType=VARCHAR} OR DBC.DBC_TBL_NM = #{dbcTblNm,jdbcType=VARCHAR})
                    AND (C.DB_SCH_ID = #{dbSchId,jdbcType=VARCHAR} OR DBC.DB_SCH_ID = #{dbSchId,jdbcType=VARCHAR})
             ) A
             ORDER BY DDL_TBL_PNM, DDL_COL_ORD,DBC_COL_ORD
</select>

<select id="selectMartPdmGapList" resultMap="BaseResultMap" parameterType="kr.wise.dq.gap.service.ModelGapVO">
SELECT A.*,                                                                     
       CASE WHEN A.GAP_STATUS = 'GAP' THEN '#FF0000' END AS FontColor           
       FROM (                                                                    
             SELECT DECODE(SUM(GAP_STATUS),0,'NML', 'GAP') AS GAP_STATUS
                   ,CASE WHEN COUNT(MART_COL_PNM) = 0 THEN '[모델마트테이블미존재]'
                         WHEN COUNT(PDM_COL_PNM) = 0 THEN '[물리모델테이블미존재]'
                   ELSE  MAX(GAP_CONTS) END  GAP_CONTS                            
                   ,MAX(SUBJ_LNM)             SUBJ_LNM                                             
                   ,MART_TBL_PNM        MART_TBL_PNM                                         
                   ,MAX(MART_TBL_LNM)   MART_TBL_LNM                                         
                   ,COUNT(MART_COL_PNM) MART_COL_CNT                                         
                   ,MAX(PDM_TBL_PNM)    PDM_TBL_PNM                                          
                   ,MAX(PDM_TBL_LNM)    PDM_TBL_LNM                                          
                   ,COUNT(PDM_COL_PNM)  PDM_COL_CNT   
                   ,MAX(PDM_TBL_ID)     PDM_TBL_ID                                       
             FROM (                                                                          
             SELECT                                                                          
                    CASE WHEN IFNULL(E.COL_ORD,0)   != IFNULL(C.COL_ORD, 0)                       
                            OR IFNULL(E.DATA_TYPE,'-') != IFNULL(C.DATA_TYPE,'-')                  
                            OR IFNULL(E.DATA_LEN,0)  != IFNULL(C.DATA_LEN ,0)                   
                            OR IFNULL(E.DATA_SCAL,0) != IFNULL(C.DATA_SCAL,0)                     
                            OR IFNULL(E.NONUL_YN,'N') != IFNULL(C.NONUL_YN,'N')                  
                            OR IFNULL(REPLACE(E.DEFLT_VAL,CHR(39),NULL),'-') != IFNULL(REPLACE(C.DEFLT_VAL,CHR(39), NULL),'-')               
                            OR IFNULL(E.PK_YN ,'N')    != IFNULL(C.PK_YN   ,'N')                
                            OR IFNULL(E.PK_ORD,0)    != IFNULL(C.PK_ORD,0)   THEN 1           
                          ELSE 0 END AS GAP_STATUS 
                     ,CASE WHEN E.PDM_COL_PNM IS NOT NULL
                              AND E.PDM_TBL_PNM IS NOT NULL
                              AND C.PDM_COL_PNM IS NOT NULL
                              AND C.PDM_TBL_PNM IS NOT NULL
                              AND (IFNULL(E.COL_ORD,0)   != IFNULL(C.COL_ORD, 0)                       
                            OR IFNULL(E.DATA_TYPE,'-') != IFNULL(C.DATA_TYPE,'-')                  
                            OR IFNULL(E.DATA_LEN,0)  != IFNULL(C.DATA_LEN ,0)                   
                            OR IFNULL(E.DATA_SCAL,0) != IFNULL(C.DATA_SCAL,0)                     
                            OR IFNULL(E.NONUL_YN,'N') != IFNULL(C.NONUL_YN,'N')                  
                            OR IFNULL(REPLACE(E.DEFLT_VAL,CHR(39),NULL),'-') != IFNULL(REPLACE(C.DEFLT_VAL,CHR(39), NULL),'-')               
                            OR IFNULL(E.PK_YN ,'N')    != IFNULL(C.PK_YN   ,'N')                
                            OR IFNULL(E.PK_ORD,0)    != IFNULL(C.PK_ORD,0))
                      THEN '[컬럼GAP존재]' ELSE '' END
                      ||CASE WHEN C.PDM_TBL_PNM IS NULL THEN '[모델마트컬럼미존재]' ELSE '' END
                      ||CASE WHEN E.PDM_TBL_PNM IS NULL THEN '[물리모델컬럼미존재]' ELSE '' END
                      AS GAP_CONTS                                                                            
                    ,C.MDL_LNM||'>'||C.UPP_SUBJ_LNM||'>'||C.SUBJ_LNM AS MART_FULL_PATH
                    ,C.MDL_LNM                                                          
                    ,C.UPP_SUBJ_LNM                                                       
                    ,IFNULL(C.SUBJ_LNM,F.SUBJ_LNM) AS OF_SUBJ                                    
                    ,IFNULL(C.PDM_TBL_PNM,E.PDM_TBL_PNM)  AS MART_TBL_PNM                           
                    ,IFNULL(C.PDM_TBL_LNM,E.PDM_TBL_LNM)  AS MART_TBL_LNM                           
                    ,C.PDM_COL_PNM AS MART_COL_PNM                                              
                    ,C.PDM_COL_LNM AS MART_COL_LNM                                              
                    ,C.COL_ORD                                                              
                    ,C.DATA_TYPE                                                             
                    ,C.DATA_LEN                                                           
                    ,C.DATA_SCAL                                                            
                    ,C.PK_YN                                                              
                    ,C.PK_ORD
                    ,C.NONUL_YN                                                            
                    ,C.DEFLT_VAL                                                          
                    ,F.SUBJ_LNM                                                              
                    ,E.FULL_PATH                                                             
                    --,IFNULL(E.PDM_TBL_PNM, C.OBJ_ENM) PDM_TBL_PNM                               
                    --,IFNULL(E.PDM_TBL_LNM, C.OBJ_KNM) PDM_TBL_LNM
                    ,E.PDM_TBL_ID
                    ,E.PDM_TBL_PNM
                    ,E.PDM_TBL_LNM                               
                    ,E.PDM_COL_PNM                                                           
                    ,E.PDM_COL_LNM                                                           
                    ,E.COL_ORD                                                               
                    ,E.DATA_TYPE                                                             
                    ,E.DATA_LEN                                                              
                    ,E.DATA_SCAL                                                             
                    ,E.PK_YN                                                                 
                    ,E.PK_ORD                                                                
                    ,E.NONUL_YN                                                              
                    ,E.DEFLT_VAL                                                             
              FROM (SELECT LIB_NM AS MDL_LNM
              			 , MDL_NM AS UPP_SUBJ_LNM
              			 , SUBJ_NM AS SUBJ_LNM
              			 , PDM_TBL_PNM
              			 , PDM_TBL_LNM
              			 , PDM_COL_PNM
              			 , PDM_COL_LNM
              			 , COL_ORD
              			 , GET_DATA_TYPE_SPLIT(DATA_TYPE, 'DATA_TYPE') AS DATA_TYPE
              			 , GET_DATA_TYPE_SPLIT(DATA_TYPE, 'DATA_LEN') AS DATA_LEN
              			 , GET_DATA_TYPE_SPLIT(DATA_TYPE, 'DATA_SCAL') AS DATA_SCAL
              			 , PK_YN
              			 , PK_ORD
              			 , NONUL_YN
              			 , DEFLT_VAL
                     FROM WAE_ERWIN_COL) C
               FULL OUTER JOIN (SELECT A.PDM_TBL_ID
                                       ,A.PDM_TBL_PNM
                                       ,A.PDM_TBL_LNM
                                       ,B.PDM_COL_ID
                                       ,B.PDM_COL_PNM
                                       ,B.PDM_COL_LNM
                                       ,A.SUBJ_ID
                                       ,A.FULL_PATH
                                       ,B.COL_ORD                                                               
                                       ,B.DATA_TYPE                                                             
                                       ,B.DATA_LEN                                                              
                                       ,B.DATA_SCAL                                                             
                                       ,B.PK_YN                                                                 
                                       ,B.PK_ORD                                                                
                                       ,B.NONUL_YN                                                              
                                       ,B.DEFLT_VAL   
                                       ,A.APRV_DTM  
                                FROM WAM_PDM_TBL A                                    
                                INNER JOIN WAM_PDM_COL B                                       
                                ON A.PDM_TBL_ID = B.PDM_TBL_ID) E                              
               ON E.PDM_TBL_PNM = C.PDM_TBL_PNM                                                    
               AND C.PDM_COL_PNM = E.PDM_COL_PNM                                                   
               AND C.MDL_LNM||'>'||C.UPP_SUBJ_LNM||'>'||C.SUBJ_LNM = E.FULL_PATH        
               LEFT OUTER JOIN WAA_SUBJ F                                                      
               ON E.SUBJ_ID =F.SUBJ_ID                                                         
               AND F.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')                                 
               AND F.REG_TYP_CD IN ('C', 'U')   
               WHERE 1=1   
               <if test="fullPath != null">
               <![CDATA[
               AND (E.FULL_PATH LIKE '%' || #{fullPath,jdbcType=VARCHAR} || '%' 
                    OR (C.MDL_LNM||'>'||C.UPP_SUBJ_LNM||'>'||C.SUBJ_LNM) LIKE '%' || #{fullPath,jdbcType=VARCHAR} || '%')      ]]>
               </if>
               <if test="searchBgnDe != null">
               <![CDATA[
               AND TO_CHAR(E.APRV_DTM, '%Y-%m-%d') >= #{searchBgnDe,jdbcType=VARCHAR}
               ]]>
               </if>
               <if test="searchEndDe != null">
               <![CDATA[
               AND TO_CHAR(E.APRV_DTM, '%Y-%m-%d') <= #{searchEndDe,jdbcType=VARCHAR}
               ]]>
               </if>
               <if test="tblNm != null">
               AND ( C.PDM_TBL_PNM LIKE '%' || UPPER(#{tblNm,jdbcType=VARCHAR}) || '%'
                  OR C.PDM_TBL_LNM LIKE '%' || UPPER(#{tblNm,jdbcType=VARCHAR}) || '%'
                  OR E.PDM_TBL_PNM LIKE '%' || UPPER(#{tblNm,jdbcType=VARCHAR}) || '%'
                  OR E.PDM_TBL_LNM LIKE '%' || UPPER(#{tblNm,jdbcType=VARCHAR}) || '%'
                      )
               </if>                                               
       )                                                                               
       GROUP BY MART_TBL_PNM                                                  
     ) A         
    <where>
     <if test="gapStatus != null">
     AND GAP_STATUS = #{gapStatus,jdbcType=VARCHAR}
     </if>
    </where>
     ORDER BY GAP_STATUS, GAP_CONTS,SUBJ_LNM, MART_TBL_PNM 
</select>

<select id="selectMartPdmColGapList" resultMap="BaseResultMap" parameterType="kr.wise.dq.gap.service.ModelGapVO">
SELECT A.*
      ,CASE WHEN A.GAP_STATUS = 'GAP' THEN '#FF0000' END AS FontColor
  FROM (
         SELECT                                                                          
                    CASE WHEN IFNULL(E.COL_ORD,0)   != IFNULL(C.POSITION, 0)                       
                            OR IFNULL(E.DATA_TYPE,'-') != IFNULL(C.DATA_TYPE,'-')                  
                            OR IFNULL(E.DATA_LEN,0)  != IFNULL(C.DATA_LENGTH ,0)                   
                            OR IFNULL(E.DATA_SCAL,0) != IFNULL(C.DATA_SCALE,0)                     
                            OR IFNULL(E.NONUL_YN,'N') != IFNULL(C.IS_NULL_YN,'N')                  
                            OR IFNULL(REPLACE(E.DEFLT_VAL,CHR(39),NULL),'-') != IFNULL(REPLACE(C.DATA_DEFAULT,CHR(39), NULL),'-')               
                            OR IFNULL(E.PK_YN ,'N')    != IFNULL(C.IS_PK_YN   ,'N')                
                            OR IFNULL(E.PK_ORD,0)    != IFNULL(C.PK_POSITION,0)   THEN 'GAP'           
                          ELSE 'NML' END AS GAP_STATUS                                           
                    ,C.OF_DATAMODEL||'>'||C.OF_PRIMARY_SUBJ||'>'||C.OF_SUBJ AS MART_FULL_PATH
                    ,C.OF_DATAMODEL                                                          
                    ,C.OF_PRIMARY_SUBJ                                                       
                    ,IFNULL(C.OF_SUBJ,F.SUBJ_LNM) AS OF_SUBJ                                    
                    ,IFNULL(C.OBJ_ENM,E.PDM_TBL_PNM)  AS MART_TBL_PNM                           
                    ,IFNULL(C.OBJ_KNM,E.PDM_TBL_LNM)  AS MART_TBL_LNM                           
                    ,IFNULL(C.MART_COL_PNM, E.PDM_COL_PNM) AS MART_COL_PNM                                              
                    ,C.MART_COL_LNM                                              
                    ,C.POSITION        AS MART_COL_ORD                                                         
                    ,C.DATA_TYPE       AS MART_DATA_TYPE                                                       
                    ,C.DATA_LENGTH     AS MART_DATA_LEN                                                        
                    ,C.DATA_SCALE      AS MART_DATA_SCAL                                                       
                    ,C.IS_PK_YN        AS MART_PK_YN                                                           
                    ,C.PK_POSITION     AS MART_PK_ORD                                                          
                    ,C.IS_NULL_YN      AS MART_NONUL_YN                                                        
                    ,C.DATA_DEFAULT    AS MART_DEFLT_VAL                                                       
                    ,F.SUBJ_LNM                                                              
                    ,E.FULL_PATH                                                             
                    ,E.PDM_TBL_PNM
                    ,E.PDM_TBL_LNM                               
                    ,E.PDM_COL_PNM                                                           
                    ,E.PDM_COL_LNM                                                           
                    ,E.COL_ORD        AS PDM_COL_ORD                                                          
                    ,E.DATA_TYPE      AS PDM_DATA_TYPE                                                        
                    ,E.DATA_LEN       AS PDM_DATA_LEN                                                         
                    ,E.DATA_SCAL      AS PDM_DATA_SCAL                                                        
                    ,E.PK_YN          AS PDM_PK_YN                                                            
                    ,E.PK_ORD         AS PDM_PK_ORD                                                           
                    ,E.NONUL_YN       AS PDM_NONUL_YN                                                            
                    ,E.DEFLT_VAL      AS PDM_DEFLT_VAL                                                              
              FROM (SELECT LIB_NM AS MDL_LNM
              			 , MDL_NM AS UPP_SUBJ_LNM
              			 , SUBJ_NM AS SUBJ_LNM
              			 , PDM_TBL_PNM
              			 , PDM_TBL_LNM
              			 , PDM_COL_PNM
              			 , PDM_COL_LNM
              			 , COL_ORD
              			 , GET_DATA_TYPE_SPLIT(DATA_TYPE, 'DATA_TYPE') AS DATA_TYPE
              			 , GET_DATA_TYPE_SPLIT(DATA_TYPE, 'DATA_LEN') AS DATA_LEN
              			 , GET_DATA_TYPE_SPLIT(DATA_TYPE, 'DATA_SCAL') AS DATA_SCAL
              			 , PK_YN
              			 , PK_ORD
              			 , NONUL_YN
              			 , DEFLT_VAL
                     FROM WAE_ERWIN_COL) C
               FULL OUTER JOIN (SELECT A.PDM_TBL_ID
                                       ,A.PDM_TBL_PNM
                                       ,A.PDM_TBL_LNM
                                       ,B.PDM_COL_ID
                                       ,B.PDM_COL_PNM
                                       ,B.PDM_COL_LNM
                                       ,A.SUBJ_ID
                                       ,A.FULL_PATH
                                       ,B.COL_ORD                                                               
                                       ,B.DATA_TYPE                                                             
                                       ,B.DATA_LEN                                                              
                                       ,B.DATA_SCAL                                                             
                                       ,B.PK_YN                                                                 
                                       ,B.PK_ORD                                                                
                                       ,B.NONUL_YN                                                              
                                       ,B.DEFLT_VAL   
                                       ,A.APRV_DTM  
                                FROM WAM_PDM_TBL A                                    
                                INNER JOIN WAM_PDM_COL B                                       
                                ON A.PDM_TBL_ID = B.PDM_TBL_ID) E                              
               ON E.PDM_TBL_PNM = C.OBJ_ENM                                                    
               AND C.MART_COL_PNM = E.PDM_COL_PNM                                                   
               AND C.OF_DATAMODEL||'>'||C.OF_PRIMARY_SUBJ||'>'||C.OF_SUBJ = E.FULL_PATH        
               LEFT OUTER JOIN WAA_SUBJ F                                                      
               ON E.SUBJ_ID =F.SUBJ_ID                                                         
               AND F.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')                                 
               AND F.REG_TYP_CD IN ('C', 'U')   
               WHERE 1=1
               AND (C.OBJ_ENM = #{martTblPnm,jdbcType=VARCHAR} OR E.PDM_TBL_ID = #{pdmTblId,jdbcType=VARCHAR})
          ) A
WHERE 1=1
AND OF_SUBJ =#{subjLnm,jdbcType=VARCHAR}
ORDER BY MART_TBL_PNM, MART_COL_ORD   ,PDM_COL_ORD
               
</select>

<select id="selectDdlTsfGapList" resultMap="BaseResultMap" parameterType="kr.wise.dq.gap.service.ModelGapVO">
SELECT A.*,                                                          
       IFNULL(SCH.DB_SCH_PNM,SCH.DB_SCH_LNM) DB_SCH_LNM,
       IFNULL(TRG.DB_CONN_TRG_PNM, TRG.DB_CONN_TRG_LNM) DB_CONN_TRG_LNM,
       DB_TSF_CONN_TRG_LNM,
       DB_TSF_SCH_LNM,
       CASE WHEN A.GAP_STATUS = 'GAP' THEN '#FF0000' END AS FontColor           
       FROM (                                                                    
             SELECT DECODE(SUM(GAP_STATUS),0,'NML', 'GAP') AS GAP_STATUS
                  ,CASE WHEN COUNT(DDL_COL_PNM) = 0 THEN '[DDL소스테이블미존재]'
                         WHEN COUNT(DDL_TSF_COL_PNM) = 0 THEN '[DDL타겟테이블미존재]'
                   ELSE  MAX(GAP_CONTS) END  GAP_CONTS                     
                   ,MAX(DDL_TBL_ID)     DDL_TBL_ID                                             
                   ,DDL_TBL_PNM         DDL_TBL_PNM                                         
                   ,MAX(DDL_TBL_LNM)   DDL_TBL_LNM                                         
                   ,COUNT(DDL_COL_PNM) DDL_COL_CNT                                         
                   ,MAX(DDL_TSF_TBL_PNM)    DDL_TSF_TBL_PNM                                          
                   --,MAX(DBC_TBL_LNM)    DBC_TBL_LNM                                          
                   ,COUNT(DDL_TSF_COL_PNM)  DDL_TSF_COL_CNT   
                   ,MAX(DB_SCH_ID)      DB_SCH_ID   
                   ,MAX(DB_TSF_SCH_ID) DB_TSF_SCH_ID
                   ,MAX(DB_TSF_CONN_TRG_LNM) DB_TSF_CONN_TRG_LNM
                   ,MAX(DB_TSF_SCH_LNM) DB_TSF_SCH_LNM
                   ,MAX(DDL_TSF_TBL_ID) DDL_TSF_TBL_ID
                   ,MAX(SUBJ_LNM) AS SUBJ_LNM
             FROM (
                  SELECT 
                    A.DDL_TBL_ID
                   ,IFNULL(A.DDL_TBL_PNM,B.DDL_TBL_PNM) AS DDL_TBL_PNM
                   ,A.DDL_TBL_LNM
                   ,A.DDL_COL_ID
                   ,IFNULL(A.DDL_COL_PNM,B.DDL_COL_PNM) AS DDL_COL_PNM
                   ,A.DDL_COL_LNM
                   ,A.COL_ORD      AS DDL_COL_ORD   
                   ,A.DATA_TYPE    AS DDL_DATA_TYPE 
                   ,A.DATA_LEN     AS DDL_DATA_LEN  
                   ,A.DATA_SCAL    AS DDL_DATA_SCAL 
                   ,IFNULL(A.PK_YN,'-')  AS DDL_PK_YN     
                   ,A.PK_ORD       AS DDL_PK_ORD    
                   ,IFNULL(A.NONUL_YN,'-') AS DDL_NONUL_YN  
                   ,A.DEFLT_VAL    AS DDL_DEFLT_VAL 
                   ,B.DDL_TBL_PNM AS DDL_TSF_TBL_PNM
                   ,B.DDL_COL_PNM AS DDL_TSF_COL_PNM
                   ,B.COL_ORD         AS DDL_TSF_COL_ORD
                   ,B.DATA_TYPE   AS DDL_TSF_DATA_TYPE
                   ,B.DATA_LEN   AS DDL_TSF_DATA_LEN
                   ,DECODE(B.DATA_SCAL,0,NULL,B.DATA_SCAL) AS DDL_TSF_DATA_SCAL
                   ,DECODE(IFNULL(B.NONUL_YN,'-'),'N','Y','Y','N','-')    AS DDL_TSF_NONUL_YN 
                   ,B.DEFLT_VAL   AS DDL_TSF_DEFLT_VAL
                   ,B.PK_YN       AS DDL_TSF_PK_YN
                   ,B.PK_ORD      AS DDL_TSF_PK_ORD
                   ,CASE WHEN IFNULL(B.COL_ORD,0)   != IFNULL(A.COL_ORD, 0) 
                           OR IFNULL(B.DATA_TYPE,'-') != IFNULL(A.DATA_TYPE,'-')
                           OR IFNULL(B.DATA_LEN,0)  != IFNULL(A.DATA_LEN ,0)
                           OR IFNULL(B.DATA_SCAL,0) != IFNULL(A.DATA_SCAL,0)
                           OR IFNULL(B.NONUL_YN,'N')  != IFNULL(A.NONUL_YN,'N') 
                           OR IFNULL(REPLACE(B.DEFLT_VAL,CHR(39),NULL),'-') != IFNULL(REPLACE(A.DEFLT_VAL,CHR(39), NULL),'-')
                           OR IFNULL(B.PK_YN ,'N')    != IFNULL(A.PK_YN   ,'N') 
                           OR IFNULL(B.PK_ORD,0)    != IFNULL(A.PK_ORD,0)   THEN 1
                     ELSE 0 END AS GAP_STATUS 
                     , CASE WHEN A.DDL_TBL_PNM IS NULL THEN '[DDL소스컬럼미존재]' ELSE '' END
                      ||CASE WHEN B.DDL_TBL_PNM IS NULL THEN '[DDL타겟컬럼미존재]' ELSE '' END
                      ||CASE WHEN B.DDL_TBL_PNM IS NOT NULL
                              AND A.DDL_TBL_PNM IS NOT NULL
                              AND (IFNULL(B.COL_ORD,0)   != IFNULL(A.COL_ORD, 0) 
                                   OR IFNULL(B.DATA_TYPE,'-') != IFNULL(A.DATA_TYPE,'-')
                                   OR IFNULL(B.DATA_LEN,0)  != IFNULL(A.DATA_LEN ,0)
                                   OR IFNULL(B.DATA_SCAL,0) != IFNULL(A.DATA_SCAL,0)
                                   OR IFNULL(B.NONUL_YN,'N')  != IFNULL(A.NONUL_YN,'N') 
                                   OR IFNULL(REPLACE(B.DEFLT_VAL,CHR(39),NULL),'-') != IFNULL(REPLACE(A.DEFLT_VAL,CHR(39), NULL),'-')
                                   OR IFNULL(B.PK_YN ,'N')    != IFNULL(A.PK_YN   ,'N') 
                                   OR IFNULL(B.PK_ORD,0)    != IFNULL(A.PK_ORD,0))
                      THEN '[컬럼GAP존재]' ELSE '' END
                      AS GAP_CONTS       
                    ,IFNULL(A.DB_SCH_ID , B.SRC_DB_SCH_ID) DB_SCH_ID
                    ,IFNULL(A.DB_SCH_ID , B.TGT_DB_SCH_ID) DB_TSF_SCH_ID
                    ,IFNULL(TRG.DB_CONN_TRG_PNM,DB_CONN_TRG_LNM) AS DB_TSF_CONN_TRG_LNM
                    ,IFNULL(SCH.DB_SCH_PNM,DB_SCH_LNM) AS DB_TSF_SCH_LNM
                    ,B.DDL_TBL_ID AS DDL_TSF_TBL_ID
                    ,A.SUBJ_LNM
                  FROM (SELECT   C.DDL_TBL_ID
                        ,C.DDL_TBL_PNM
                        ,C.DDL_TBL_LNM
                        ,D.DDL_COL_ID
                        ,D.DDL_COL_PNM
                        ,D.DDL_COL_LNM
                        ,D.COL_ORD       
                        ,D.DATA_TYPE    
                        ,D.DATA_LEN     
                        ,D.DATA_SCAL    
                        ,D.PK_YN 
                        ,D.PK_ORD  
                        ,D.NONUL_YN
                        ,D.DEFLT_VAL
                        ,C.DB_SCH_ID
                        ,C.APRV_DTM
                        ,TRG.DB_CONN_TRG_ID
                        ,PDM.FULL_PATH
                        ,SUBJ.SUBJ_LNM
                        FROM WAM_DDL_TBL C
                        INNER JOIN WAM_DDL_COL D
                        ON C.DDL_TBL_ID = D.DDL_TBL_ID
                        LEFT OUTER JOIN WAA_DB_SCH SCH
                        ON C.DB_SCH_ID = SCH.DB_SCH_ID
                        AND SCH.REG_TYP_CD IN ('C', 'U')
                        AND SCH.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')
                        LEFT OUTER JOIN WAA_DB_CONN_TRG TRG
                        ON SCH.DB_CONN_TRG_ID =TRG.DB_CONN_TRG_ID
                        AND TRG.REG_TYP_CD IN ('C', 'U')
                        AND TRG.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')
                        LEFT OUTER JOIN WAM_PDM_TBL PDM
                        ON C.PDM_TBL_ID = PDM.PDM_TBL_ID
                        LEFT OUTER JOIN WAA_SUBJ SUBJ
                        ON PDM.SUBJ_ID = SUBJ.SUBJ_ID
                        AND SUBJ.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')
                        AND SUBJ.REG_TYP_CD IN ('C', 'U')
                        WHERE 1=1
                        <choose>
                    		<when test="gapDcd.equals('DT')">
                    			AND SCH.DDL_TRG_DCD = 'D'		--개발
                    		</when>
                    		<when test="gapDcd.equals('DR')">
                    			AND SCH.DDL_TRG_DCD = 'D'		--개발
                    		</when>
                    		<when test="gapDcd.equals('TR')">
                    			AND SCH.DDL_TRG_DCD = 'T'		--테스트
                    		</when>
                        </choose>
                        AND SCH.DDL_TRG_YN = 'Y'		--DDL대상여부
                        AND SCH.DB_SCH_ID IN (SELECT SRC_DB_SCH_ID
                        						FROM WAA_DB_MAP
                        					   WHERE EXP_DTM = STR_TO_DATE('99991231','%Y%m%d')
                        					     AND REG_TYP_CD IN ('C', 'U'))
                                                            ) A
                   FULL OUTER JOIN (SELECT TBL.DDL_TBL_ID
                                         ,TBL.DDL_TBL_PNM
                                         ,TBL.DDL_TBL_LNM
                                         ,TBL.TGT_DB_SCH_ID 
                                         ,TBL.SRC_DB_SCH_ID      
                                         ,TBL.TBL_SPAC_ID
                                         ,TBL.APRV_DTM
                                         ,COL.DDL_COL_ID
                                         ,COL.DDL_COL_PNM
                                         ,COL.DDL_COL_LNM
                                         ,COL.COL_ORD       
                                         ,COL.DATA_TYPE    
                                         ,COL.DATA_LEN     
                                         ,COL.DATA_SCAL    
                                         ,COL.PK_YN 
                                         ,COL.PK_ORD  
                                         ,COL.NONUL_YN
                                         ,COL.DEFLT_VAL
                                   FROM WAM_DDL_TBL TBL
                                   INNER JOIN WAM_DDL_COL COL
                                   ON TBL.DDL_TBL_ID = COL.DDL_TBL_ID
                                   LEFT OUTER JOIN WAA_DB_SCH SCH
                                   ON TBL.DB_SCH_ID = SCH.DB_SCH_ID
                                   AND SCH.REG_TYP_CD IN ('C','U')
                                   AND SCH.EXP_DTM = STR_TO_DATE('99991231','%Y%m%d')
                                   WHERE 1=1
		                        <choose>
		                    		<when test="gapDcd.equals('DT')">
		                    			AND SCH.DDL_TRG_DCD = 'T'		--테스트
		                    		</when>
		                    		<when test="gapDcd.equals('DR')">
		                    			AND SCH.DDL_TRG_DCD = 'R'		--운영
		                    		</when>
		                    		<when test="gapDcd.equals('TR')">
		                    			AND SCH.DDL_TRG_DCD = 'R'		--운영
		                    		</when>
		                        </choose>
		                        AND SCH.DDL_TRG_YN = 'Y'		--DDL대상여부
		                        AND SCH.DB_SCH_ID IN (SELECT TGT_DB_SCH_ID
		                        						FROM WAA_DB_MAP
		                        					   WHERE EXP_DTM = STR_TO_DATE('99991231','%Y%m%d')
		                        					     AND REG_TYP_CD IN ('C', 'U'))
                                   ) B
                  ON A.DB_SCH_ID = B.SRC_DB_SCH_ID
                  AND A.DDL_TBL_ID = B.DDL_TBL_ID
                  AND A.DDL_COL_ID = B.DDL_COL_ID
                  LEFT OUTER JOIN WAA_DB_SCH SCH
                  ON B.TGT_DB_SCH_ID = SCH.DB_SCH_ID
                  AND SCH.REG_TYP_CD IN ('C', 'U')
                  AND SCH.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')
                  LEFT OUTER JOIN WAA_DB_CONN_TRG TRG
                  ON SCH.DB_CONN_TRG_ID = TRG.DB_CONN_TRG_ID
                  AND TRG.REG_TYP_CD IN ('C', 'U')
                  AND TRG.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')
                  WHERE 1=1   
                <if test="fullPath != null">
                AND A.FULL_PATH LIKE '%' || #{fullPath,jdbcType=VARCHAR} || '%'
                </if>
                 <if test="dbConnTrgId != null">
                 AND (A.DB_CONN_TRG_ID = #{dbConnTrgId,jdbcType=VARCHAR} OR TRG.DB_CONN_TRG_ID = #{dbConnTrgId,jdbcType=VARCHAR}) 
                </if>
                <if test="dbSchId != null">
                 AND (A.DB_SCH_ID = #{dbSchId,jdbcType=VARCHAR} OR B.TGT_DB_SCH_ID = #{dbSchId,jdbcType=VARCHAR})
                </if>
                <if test="searchBgnDe != null">
                <![CDATA[
                AND TO_CHAR(B.APRV_DTM, '%Y-%m-%d') >= #{searchBgnDe,jdbcType=VARCHAR}
                ]]>
                </if>
                <if test="searchEndDe != null">
                <![CDATA[
                AND TO_CHAR(B.APRV_DTM, '%Y-%m-%d') <= #{searchEndDe,jdbcType=VARCHAR}
                ]]>
                </if>
                <if test="tblNm != null">
                AND (  A.DDL_TBL_PNM  LIKE '%' || UPPER(#{tblNm,jdbcType=VARCHAR}) || '%'
                       OR A.DDL_TBL_LNM LIKE '%' || UPPER(#{tblNm,jdbcType=VARCHAR}) || '%'
                       OR B.DDL_TBL_PNM  LIKE '%' || UPPER(#{tblNm,jdbcType=VARCHAR}) || '%'
                       OR B.DDL_TBL_LNM LIKE '%' || UPPER(#{tblNm,jdbcType=VARCHAR}) || '%'
                       )
                       </if>
            ) A
             GROUP BY DDL_TBL_PNM
      ) A
      LEFT OUTER JOIN WAA_DB_SCH SCH
      ON A.DB_SCH_ID = SCH.DB_SCH_ID
      AND SCH.REG_TYP_CD IN ('C', 'U')
      AND SCH.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')
      LEFT OUTER JOIN WAA_DB_CONN_TRG TRG
      ON SCH.DB_CONN_TRG_ID = TRG.DB_CONN_TRG_ID
      AND TRG.REG_TYP_CD IN ('C', 'U')
      AND TRG.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')
    <where>
     <if test="gapStatus != null">
     AND A.GAP_STATUS = #{gapStatus,jdbcType=VARCHAR}
     </if>
    </where>
     ORDER BY GAP_STATUS, GAP_CONTS, SUBJ_LNM,  DDL_TBL_PNM
</select>

<select id="selectDdlTsfColGapList" resultMap="BaseResultMap" parameterType="kr.wise.dq.gap.service.ModelGapVO">
SELECT A.*
      ,CASE WHEN A.GAP_STATUS = 'GAP' THEN '#FF0000' END AS FontColor
  FROM (
         SELECT 
                    A.DDL_TBL_ID
                   ,IFNULL(A.DDL_TBL_PNM,B.DDL_TBL_PNM) AS DDL_TBL_PNM
                   ,A.DDL_TBL_LNM
                   ,A.DDL_COL_ID
                   ,IFNULL(A.DDL_COL_PNM,B.DDL_COL_PNM) AS DDL_COL_PNM
                   ,A.DDL_COL_LNM
                   ,A.COL_ORD AS DDL_COL_ORD   
                   ,A.DATA_TYPE    AS DDL_DATA_TYPE 
                   ,A.DATA_LEN     AS DDL_DATA_LEN  
                   ,A.DATA_SCAL    AS DDL_DATA_SCAL 
                   ,IFNULL(A.PK_YN,'-')  AS DDL_PK_YN     
                   ,A.PK_ORD       AS DDL_PK_ORD    
                   ,IFNULL(A.NONUL_YN,'-') AS DDL_NONUL_YN  
                   ,A.DEFLT_VAL    AS DDL_DEFLT_VAL 
                   ,B.DDL_TBL_PNM AS DDL_TSF_TBL_PNM
                   ,B.DDL_COL_PNM AS DDL_TSF_COL_PNM
                   ,B.COL_ORD         AS DDL_TSF_COL_ORD
                   ,B.DATA_TYPE   AS DDL_TSF_DATA_TYPE
                   ,B.DATA_LEN   AS DDL_TSF_DATA_LEN
                   ,DECODE(B.DATA_SCAL,0,NULL,B.DATA_SCAL) AS DDL_TSF_DATA_SCAL
                   ,DECODE(IFNULL(B.NONUL_YN,'-'),'N','Y','Y','N','-')    AS DDL_TSF_NONUL_YN 
                   ,B.DEFLT_VAL   AS DDL_TSF_DEFLT_VAL
                   ,B.PK_YN       AS DDL_TSF_PK_YN
                   ,B.PK_ORD      AS DDL_TSF_PK_ORD
                   ,CASE WHEN IFNULL(B.COL_ORD,0)   != IFNULL(A.COL_ORD, 0) 
                           OR IFNULL(B.DATA_TYPE,'-') != IFNULL(A.DATA_TYPE,'-')
                           OR IFNULL(B.DATA_LEN,0)  != IFNULL(A.DATA_LEN ,0)
                           OR IFNULL(B.DATA_SCAL,0) != IFNULL(A.DATA_SCAL,0)
                           OR IFNULL(B.NONUL_YN,'N')  != IFNULL(A.NONUL_YN,'N') 
                           OR IFNULL(REPLACE(B.DEFLT_VAL,CHR(39),NULL),'-') != IFNULL(REPLACE(A.DEFLT_VAL,CHR(39), NULL),'-')
                           OR IFNULL(B.PK_YN ,'N')    != IFNULL(A.PK_YN   ,'N') 
                           OR IFNULL(B.PK_ORD,0)    != IFNULL(A.PK_ORD,0)   THEN 'GAP'
                     ELSE 'NML' END AS GAP_STATUS 
                     , CASE WHEN A.DDL_TBL_PNM IS NULL THEN '[DDL컬럼미존재]' ELSE '' END
                      ||CASE WHEN B.DDL_TBL_PNM IS NULL THEN '[DDL운영컬럼미존재]' ELSE '' END
                      ||CASE WHEN B.DDL_TBL_PNM IS NOT NULL
                              AND A.DDL_TBL_PNM IS NOT NULL
                              AND (IFNULL(B.COL_ORD,0)   != IFNULL(A.COL_ORD, 0) 
                                   OR IFNULL(B.DATA_TYPE,'-') != IFNULL(A.DATA_TYPE,'-')
                                   OR IFNULL(B.DATA_LEN,0)  != IFNULL(A.DATA_LEN ,0)
                                   OR IFNULL(B.DATA_SCAL,0) != IFNULL(A.DATA_SCAL,0)
                                   OR IFNULL(B.NONUL_YN,'N')  != IFNULL(A.NONUL_YN,'N') 
                                   OR IFNULL(REPLACE(B.DEFLT_VAL,CHR(39),NULL),'-') != IFNULL(REPLACE(A.DEFLT_VAL,CHR(39), NULL),'-')
                                   OR IFNULL(B.PK_YN ,'N')    != IFNULL(A.PK_YN   ,'N') 
                                   OR IFNULL(B.PK_ORD,0)    != IFNULL(A.PK_ORD,0))
                      THEN '[컬럼GAP존재]' ELSE '' END
                      AS GAP_CONTS       
                    ,IFNULL(A.DB_SCH_ID , B.SRC_DB_SCH_ID) DB_SCH_ID
                    ,IFNULL(A.DB_SCH_ID , B.TGT_DB_SCH_ID) DB_TSF_SCH_ID
                    ,IFNULL(TRG.DB_CONN_TRG_PNM,DB_CONN_TRG_LNM) AS DB_TSF_CONN_TRG_LNM
                    ,IFNULL(SCH.DB_SCH_PNM,DB_SCH_LNM) AS DB_TSF_SCH_LNM
                  FROM (SELECT   C.DDL_TBL_ID
                        ,C.DDL_TBL_PNM
                        ,C.DDL_TBL_LNM
                        ,D.DDL_COL_ID
                        ,D.DDL_COL_PNM
                        ,D.DDL_COL_LNM
                        ,D.COL_ORD       
                        ,D.DATA_TYPE    
                        ,D.DATA_LEN     
                        ,D.DATA_SCAL    
                        ,D.PK_YN 
                        ,D.PK_ORD  
                        ,D.NONUL_YN
                        ,D.DEFLT_VAL
                        ,C.DB_SCH_ID
                        ,C.APRV_DTM
                        ,TRG.DB_CONN_TRG_ID
                        ,PDM.FULL_PATH
                        FROM WAM_DDL_TBL C
                        INNER JOIN WAM_DDL_COL D
                        ON C.DDL_TBL_ID = D.DDL_TBL_ID
                        LEFT OUTER JOIN WAA_DB_SCH SCH
                        ON C.DB_SCH_ID = SCH.DB_SCH_ID
                        AND SCH.REG_TYP_CD IN ('C', 'U')
                        AND SCH.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')
                        LEFT OUTER JOIN WAA_DB_CONN_TRG TRG
                        ON SCH.DB_CONN_TRG_ID =TRG.DB_CONN_TRG_ID
                        AND TRG.REG_TYP_CD IN ('C', 'U')
                        AND TRG.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')
                        LEFT OUTER JOIN WAM_PDM_TBL PDM
                        ON C.PDM_TBL_ID = PDM.PDM_TBL_ID
                                                            ) A
                   FULL OUTER JOIN (SELECT TBL.DDL_TBL_ID
                                         ,TBL.DDL_TBL_PNM
                                         ,TBL.DDL_TBL_LNM
                                         ,TBL.TGT_DB_SCH_ID 
                                         ,TBL.SRC_DB_SCH_ID      
                                         ,TBL.TBL_SPAC_ID
                                         ,TBL.APRV_DTM
                                         ,COL.DDL_COL_ID
                                         ,COL.DDL_COL_PNM
                                         ,COL.DDL_COL_LNM
                                         ,COL.COL_ORD       
                                         ,COL.DATA_TYPE    
                                         ,COL.DATA_LEN     
                                         ,COL.DATA_SCAL    
                                         ,COL.PK_YN 
                                         ,COL.PK_ORD  
                                         ,COL.NONUL_YN
                                         ,COL.DEFLT_VAL
                                   FROM WAM_DDL_TSF_TBL TBL
                                   INNER JOIN WAM_DDL_TSF_COL COL
                                   ON TBL.DDL_TBL_ID = COL.DDL_TBL_ID
                                   ) B
                  ON A.DB_SCH_ID = B.SRC_DB_SCH_ID
                  AND A.DDL_TBL_ID = B.DDL_TBL_ID
                  AND A.DDL_COL_ID = B.DDL_COL_ID
                  LEFT OUTER JOIN WAA_DB_SCH SCH
                  ON B.TGT_DB_SCH_ID = SCH.DB_SCH_ID
                  AND SCH.REG_TYP_CD IN ('C', 'U')
                  AND SCH.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')
                  LEFT OUTER JOIN WAA_DB_CONN_TRG TRG
                  ON SCH.DB_CONN_TRG_ID = TRG.DB_CONN_TRG_ID
                  AND TRG.REG_TYP_CD IN ('C', 'U')
                  AND TRG.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')
                  WHERE 1=1   
                  AND (A.DDL_TBL_ID = #{ddlTblId,jdbcType=VARCHAR} OR B.DDL_TBL_ID = #{ddlTsfTblId,jdbcType=VARCHAR})
                  AND (A.DB_SCH_ID = #{dbSchId,jdbcType=VARCHAR} OR B.TGT_DB_SCH_ID = #{dbTsfSchId,jdbcType=VARCHAR})
          ) A
ORDER BY DDL_TBL_PNM, DDL_COL_ORD ,DDL_TSF_COL_ORD
</select>

<select id="selectDdlTsfDbcGapList" resultMap="BaseResultMap" parameterType="kr.wise.dq.gap.service.ModelGapVO">
SELECT A.*,                                                          
       IFNULL(SCH.DB_SCH_PNM,SCH.DB_SCH_LNM) DB_TSF_SCH_LNM,
       IFNULL(TRG.DB_CONN_TRG_PNM, TRG.DB_CONN_TRG_LNM) DB_TSF_CONN_TRG_LNM,           
       CASE WHEN A.GAP_STATUS = 'GAP' THEN '#FF0000' END AS FontColor           
       FROM (                                                                    
             SELECT DECODE(SUM(GAP_STATUS),0,'NML', 'GAP') AS GAP_STATUS
                   ,CASE WHEN COUNT(DDL_COL_PNM) = 0 THEN '[DDL운영테이블미존재]'
                         WHEN COUNT(DBC_COL_PNM) = 0 THEN '[DBC운영테이블미존재]'
                   ELSE  MAX(GAP_CONTS) END  GAP_CONTS   
                   ,MAX(DB_SCH_ID)      DB_TSF_SCH_ID               
                   ,MAX(DDL_TBL_ID)     DDL_TSF_TBL_ID                                             
                   ,DDL_TBL_PNM         DDL_TSF_TBL_PNM                                         
                   ,MAX(DDL_TBL_LNM)   DDL_TSF_TBL_LNM                                         
                   ,COUNT(DDL_COL_PNM) DDL_TSF_COL_CNT                                         
                   ,MAX(DBC_TBL_PNM)    DBC_REAL_TBL_NM                                          
                   --,MAX(DBC_TBL_LNM)    DBC_REAL_TBL_LNM                                          
                   ,COUNT(DBC_COL_PNM)  DBC_REAL_COL_CNT   
                   ,MAX(SUBJ_LNM)       SUBJ_LNM     
             FROM (
                  SELECT 
                    C.DDL_TBL_ID
                   ,IFNULL(C.DDL_TBL_PNM,DBC.DBC_TBL_NM) AS DDL_TBL_PNM
                   ,IFNULL(C.DDL_TBL_LNM,DBC.DBC_TBL_KOR_NM) AS DDL_TBL_LNM
                   ,C.DDL_COL_ID
                   ,IFNULL(C.DDL_COL_PNM,DBC.DBC_COL_NM) AS DDL_COL_PNM
                   ,C.DDL_COL_LNM
                   ,C.COL_ORD      AS DDL_COL_ORD   
                   ,C.DATA_TYPE    AS DDL_DATA_TYPE 
                   ,C.DATA_LEN     AS DDL_DATA_LEN  
                   ,C.DATA_SCAL    AS DDL_DATA_SCAL 
                   ,IFNULL(C.PK_YN,'-')  AS DDL_PK_YN     
                   ,C.PK_ORD       AS DDL_PK_ORD    
                   ,IFNULL(C.NONUL_YN,'-') AS DDL_NONUL_YN  
                   ,C.DEFLT_VAL    AS DDL_DEFLT_VAL 
                   ,DBC.DBC_TBL_NM AS DBC_TBL_PNM
                   ,DBC.DBC_COL_NM AS DBC_COL_PNM
                   ,DBC.ORD         AS DBC_COL_ORD
                   ,DBC.DATA_TYPE   AS DBC_DATA_TYPE
                   ,DBC.DATA_LEN   AS DBC_DATA_LEN
                   ,DECODE(DBC.DATA_PNT,0,NULL,DBC.DATA_PNT) AS DBC_DATA_SCAL
                   ,DECODE(IFNULL(DBC.NULL_YN,'-'),'N','Y','Y','N','-')    AS DBC_NONUL_YN 
                   ,DBC.DEFLT_VAL   AS DBC_DEFLT_VAL
                   ,DBC.PK_YN       AS DBC_PK_YN
                   ,DBC.PK_ORD      AS DBC_PK_ORD
                   ,CASE WHEN IFNULL(DBC.ORD,0)   != IFNULL(C.COL_ORD, 0) 
                           OR IFNULL(DBC.DATA_TYPE,'-') != IFNULL(C.DATA_TYPE,'-')
                           OR IFNULL(DBC.DATA_LEN,0)  != IFNULL(C.DATA_LEN ,0)
                           OR IFNULL(DBC.DATA_PNT,0) != IFNULL(C.DATA_SCAL,0)
                           OR DECODE(IFNULL(DBC.NULL_YN,'N'),'N','Y','N') != IFNULL(C.NONUL_YN,'N') 
                           OR IFNULL(REPLACE(DBC.DEFLT_VAL,CHR(39),NULL),'-') != IFNULL(REPLACE(C.DEFLT_VAL,CHR(39), NULL),'-')
                           OR IFNULL(DBC.PK_YN ,'N')    != IFNULL(C.PK_YN   ,'N') 
                           OR IFNULL(DBC.PK_ORD,0)    != IFNULL(C.PK_ORD,0)   THEN 1
                     ELSE 0 END AS GAP_STATUS 
                     , CASE WHEN C.DDL_TBL_PNM IS NULL THEN '[DDL운영컬럼미존재]' ELSE '' END
                      ||CASE WHEN DBC.DBC_TBL_NM IS NULL THEN '[DBC운영컬럼미존재]' ELSE '' END
                      ||CASE WHEN DBC.DBC_TBL_NM IS NOT NULL
                              AND C.DDL_TBL_PNM IS NOT NULL
                              AND (IFNULL(DBC.ORD,0)   != IFNULL(C.COL_ORD, 0) 
                                   OR IFNULL(DBC.DATA_TYPE,'-') != IFNULL(C.DATA_TYPE,'-')
                                   OR IFNULL(DBC.DATA_LEN,0)  != IFNULL(C.DATA_LEN ,0)
                                   OR IFNULL(DBC.DATA_PNT,0) != IFNULL(C.DATA_SCAL,0)
                                   OR DECODE(IFNULL(DBC.NULL_YN,'N'),'N','Y','N') != IFNULL(C.NONUL_YN,'N') 
                                   OR IFNULL(REPLACE(DBC.DEFLT_VAL,CHR(39),NULL),'-') != IFNULL(REPLACE(C.DEFLT_VAL,CHR(39), NULL),'-')
                                   OR IFNULL(DBC.PK_YN ,'N')    != IFNULL(C.PK_YN   ,'N') 
                                   OR IFNULL(DBC.PK_ORD,0)    != IFNULL(C.PK_ORD,0))
                      THEN '[컬럼GAP존재]' ELSE '' END
                      AS GAP_CONTS       
                    ,IFNULL(C.TGT_DB_SCH_ID , DBC.DB_SCH_ID) DB_SCH_ID
                    ,C.SUBJ_LNM
                  FROM (SELECT   C.DDL_TBL_ID
                        ,C.DDL_TBL_PNM
                        ,C.DDL_TBL_LNM
                        ,D.DDL_COL_ID
                        ,D.DDL_COL_PNM
                        ,D.DDL_COL_LNM
                        ,D.COL_ORD       
                        ,D.DATA_TYPE    
                        ,D.DATA_LEN     
                        ,D.DATA_SCAL    
                        ,D.PK_YN 
                        ,D.PK_ORD  
                        ,D.NONUL_YN
                        ,D.DEFLT_VAL
                        ,C.TGT_DB_SCH_ID
                        ,C.APRV_DTM
                        ,TRG.DB_CONN_TRG_ID
                        ,PDM.FULL_PATH
                        ,SUBJ.SUBJ_LNM
                        FROM WAM_DDL_TSF_TBL C
                        INNER JOIN WAM_DDL_TSF_COL D
                        ON C.DDL_TBL_ID = D.DDL_TBL_ID
                        LEFT OUTER JOIN WAA_DB_SCH SCH
                        ON C.TGT_DB_SCH_ID = SCH.DB_SCH_ID
                        AND SCH.REG_TYP_CD IN ('C', 'U')
                        AND SCH.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')
                        LEFT OUTER JOIN WAA_DB_CONN_TRG TRG
                        ON SCH.DB_CONN_TRG_ID =TRG.DB_CONN_TRG_ID
                        AND TRG.REG_TYP_CD IN ('C', 'U')
                        AND TRG.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')
                        LEFT OUTER JOIN WAM_PDM_TBL PDM
                        ON C.PDM_TBL_ID = PDM.PDM_TBL_ID
                        LEFT OUTER JOIN WAA_SUBJ SUBJ
                        ON PDM.SUBJ_ID = SUBJ.SUBJ_ID
                        AND SUBJ.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')
                        AND SUBJ.REG_TYP_CD IN ('C', 'U')
                                                                              ) C
                  FULL OUTER JOIN (SELECT DBC.DB_SCH_ID
                                         ,DBC.DBC_TBL_NM
                                         ,DBC.DBC_TBL_KOR_NM
                                         ,DBCCOL.DBC_COL_NM 
                                         ,DBCCOL.ORD      
                                         ,DBCCOL.DATA_TYPE
                                         ,DBCCOL.DATA_LEN
                                         ,DBCCOL.DATA_PNT
                                         ,DBCCOL.NULL_YN
                                         ,DBCCOL.DEFLT_VAL 
                                         ,DBCCOL.PK_YN     
                                         ,DBCCOL.PK_ORD
                                         ,SCH.DB_CONN_TRG_ID    
                                   FROM WAT_DBC_TBL DBC
                                   INNER JOIN WAT_DBC_COL DBCCOL
                                   ON DBCCOL.DBC_TBL_NM = DBC.DBC_TBL_NM
                                   AND DBC.DB_SCH_ID =DBCCOL.DB_SCH_ID
                                   LEFT OUTER JOIN WAA_DB_SCH SCH
                                   ON DBC.DB_SCH_ID =SCH.DB_SCH_ID
                                   AND SCH.REG_TYP_CD IN ('C', 'U')
                                   AND SCH.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')
                                   WHERE SCH.DDL_TRG_DCD = 'R'  --운영 DB만
                                   ) DBC
                  ON C.TGT_DB_SCH_ID = DBC.DB_SCH_ID
                  AND C.DDL_TBL_PNM = DBC.DBC_TBL_NM
                  AND C.DDL_COL_PNM = DBC.DBC_COL_NM 
                  WHERE 1=1 
                <if test="fullPath != null">
                AND C.FULL_PATH LIKE '%' || #{fullPath,jdbcType=VARCHAR} || '%'
                </if>
                 <if test="dbConnTrgId != null">
                 AND (C.DB_CONN_TRG_ID = #{dbConnTrgId,jdbcType=VARCHAR} OR DBC.DB_CONN_TRG_ID = #{dbConnTrgId,jdbcType=VARCHAR}) 
                </if>
                <if test="dbSchId != null">
                 AND (C.TGT_DB_SCH_ID = #{dbSchId,jdbcType=VARCHAR} OR DBC.DB_SCH_ID = #{dbSchId,jdbcType=VARCHAR})
                </if>
                <if test="searchBgnDe != null">
                <![CDATA[
                AND TO_CHAR(C.APRV_DTM, '%Y-%m-%d') >= #{searchBgnDe,jdbcType=VARCHAR}
                ]]>
                </if>
                <if test="searchEndDe != null">
                <![CDATA[
                AND TO_CHAR(C.APRV_DTM, '%Y-%m-%d') <= #{searchEndDe,jdbcType=VARCHAR}
                ]]>
                </if>
                <if test="tblNm != null">
                AND (  C.DDL_TBL_PNM  LIKE '%' || UPPER(#{tblNm,jdbcType=VARCHAR}) || '%'
                       OR C.DDL_TBL_LNM LIKE '%' || UPPER(#{tblNm,jdbcType=VARCHAR}) || '%'
                       OR DBC.DBC_TBL_NM  LIKE '%' || UPPER(#{tblNm,jdbcType=VARCHAR}) || '%'
                       OR DBC.DBC_TBL_KOR_NM LIKE '%' || UPPER(#{tblNm,jdbcType=VARCHAR}) || '%'
                       )
                       </if>
            ) A
             GROUP BY DDL_TBL_PNM
      ) A
      LEFT OUTER JOIN WAA_DB_SCH SCH
      ON A.DB_TSF_SCH_ID = SCH.DB_SCH_ID
      AND SCH.REG_TYP_CD IN ('C', 'U')
      AND SCH.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')
      LEFT OUTER JOIN WAA_DB_CONN_TRG TRG
      ON SCH.DB_CONN_TRG_ID = TRG.DB_CONN_TRG_ID
      AND TRG.REG_TYP_CD IN ('C', 'U')
      AND TRG.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')
    <where>
     <if test="gapStatus != null">
     AND A.GAP_STATUS = #{gapStatus,jdbcType=VARCHAR}
     </if>
    </where>
     ORDER BY GAP_STATUS, GAP_CONTS, SUBJ_LNM, DDL_TSF_TBL_PNM
</select>

<select id="selectDdlTsfDbcColGapList" resultMap="BaseResultMap" parameterType="kr.wise.dq.gap.service.ModelGapVO">
SELECT A.*
      ,CASE WHEN A.GAP_STATUS = 'GAP' THEN '#FF0000' END AS FontColor
  FROM (
                  SELECT 
                    C.DDL_TBL_ID                      AS DDL_TSF_TBL_ID
                   ,IFNULL(C.DDL_TBL_PNM,DBC.DBC_TBL_NM) AS DDL_TSF_TBL_PNM
                   ,C.DDL_TBL_LNM                     AS DDL_TSF_TBL_LNM
                   ,C.DDL_COL_ID                      AS DDL_TSF_COL_ID
                   ,IFNULL(C.DDL_COL_PNM,DBC.DBC_COL_NM) AS DDL_TSF_COL_PNM
                   ,C.DDL_COL_LNM                     AS DDL_TSF_COL_LNM
                   ,C.COL_ORD           AS DDL_TSF_COL_ORD   
                   ,C.DATA_TYPE    AS DDL_TSF_DATA_TYPE 
                   ,C.DATA_LEN     AS DDL_TSF_DATA_LEN  
                   ,C.DATA_SCAL    AS DDL_TSF_DATA_SCAL 
                   ,IFNULL(C.PK_YN,'-')  AS DDL_TSF_PK_YN     
                   ,C.PK_ORD       AS DDL_TSF_PK_ORD    
                   ,IFNULL(C.NONUL_YN,'-') AS DDL_TSF_NONUL_YN  
                   ,C.DEFLT_VAL    AS DDL_TSF_DEFLT_VAL 
                   ,DBC.DBC_TBL_NM AS DBC_REAL_TBL_PNM
                   ,DBC.DBC_COL_NM AS DBC_REAL_COL_PNM
                   ,DBC.ORD         AS DBC_REAL_COL_ORD
                   ,DBC.DATA_TYPE   AS DBC_REAL_DATA_TYPE
                   ,DBC.DATA_LEN   AS DBC_REAL_DATA_LEN
                   ,DECODE(DBC.DATA_PNT,0,NULL,DBC.DATA_PNT) AS DBC_REAL_DATA_SCAL
                   ,DECODE(IFNULL(DBC.NULL_YN,'-'),'N','Y','Y','N','-')    AS DBC_REAL_NONUL_YN 
                   ,DBC.DEFLT_VAL   AS DBC_REAL_DEFLT_VAL
                   ,DBC.PK_YN       AS DBC_REAL_PK_YN
                   ,DBC.PK_ORD      AS DBC_REAL_PK_ORD
                   ,CASE WHEN IFNULL(DBC.ORD,0)   != IFNULL(C.COL_ORD, 0) 
                           OR IFNULL(DBC.DATA_TYPE,'-') != IFNULL(C.DATA_TYPE,'-')
                           OR IFNULL(DBC.DATA_LEN,0)  != IFNULL(C.DATA_LEN ,0)
                           OR IFNULL(DBC.DATA_PNT,0) != IFNULL(C.DATA_SCAL,0)
                           OR DECODE(IFNULL(DBC.NULL_YN,'N'),'N','Y','N') != IFNULL(C.NONUL_YN,'N') 
                           OR IFNULL(REPLACE(DBC.DEFLT_VAL,CHR(39),NULL),'-') != IFNULL(REPLACE(C.DEFLT_VAL,CHR(39), NULL),'-')
                           OR IFNULL(DBC.PK_YN ,'N')    != IFNULL(C.PK_YN   ,'N') 
                           OR IFNULL(DBC.PK_ORD,0)    != IFNULL(C.PK_ORD,0)   THEN 'GAP'      
                     ELSE 'NML' END AS GAP_STATUS       
                  FROM (SELECT   C.DDL_TBL_ID
                        ,C.DDL_TBL_PNM
                        ,C.DDL_TBL_LNM
                        ,D.DDL_COL_ID
                        ,D.DDL_COL_PNM
                        ,D.DDL_COL_LNM
                        ,D.COL_ORD       
                        ,D.DATA_TYPE    
                        ,D.DATA_LEN     
                        ,D.DATA_SCAL    
                        ,D.PK_YN 
                        ,D.PK_ORD  
                        ,D.NONUL_YN
                        ,D.DEFLT_VAL
                        ,C.TGT_DB_SCH_ID
                        FROM WAM_DDL_TSF_TBL C
                        INNER JOIN WAM_DDL_TSF_COL D
                        ON C.DDL_TBL_ID = D.DDL_TBL_ID) C
                  FULL OUTER JOIN (SELECT DBC.DB_SCH_ID
                                         ,DBC.DBC_TBL_NM
                                         ,DBCCOL.DBC_COL_NM 
                                         ,DBCCOL.ORD      
                                         ,DBCCOL.DATA_TYPE
                                         ,DBCCOL.DATA_LEN
                                         ,DBCCOL.DATA_PNT
                                         ,DBCCOL.NULL_YN
                                         ,DBCCOL.DEFLT_VAL 
                                         ,DBCCOL.PK_YN     
                                         ,DBCCOL.PK_ORD    
                                   FROM WAT_DBC_TBL DBC
                                   INNER JOIN WAT_DBC_COL DBCCOL
                                   ON DBCCOL.DBC_TBL_NM = DBC.DBC_TBL_NM
                                   AND DBC.DB_SCH_ID =DBCCOL.DB_SCH_ID
                                   ) DBC
                  ON C.TGT_DB_SCH_ID = DBC.DB_SCH_ID
                  AND C.DDL_TBL_PNM = DBC.DBC_TBL_NM
                  AND C.DDL_COL_PNM = DBC.DBC_COL_NM 
                  WHERE 1=1 
                    AND (C.DDL_TBL_PNM = #{ddlTsfTblPnm,jdbcType=VARCHAR} OR DBC.DBC_TBL_NM = #{ddlTsfTblPnm,jdbcType=VARCHAR}
                         OR C.DDL_TBL_PNM = #{dbcRealTblNm,jdbcType=VARCHAR} OR DBC.DBC_TBL_NM = #{dbcRealTblNm,jdbcType=VARCHAR})
                    AND (C.TGT_DB_SCH_ID = #{dbTsfSchId,jdbcType=VARCHAR} OR DBC.DB_SCH_ID = #{dbTsfSchId,jdbcType=VARCHAR})
             ) A
             ORDER BY DDL_TSF_TBL_PNM, DDL_TSF_COL_ORD , DBC_REAL_COL_ORD
</select>

<select id="selectDbcGapList" resultMap="BaseResultMap" parameterType="kr.wise.dq.gap.service.ModelGapVO">
SELECT A.*,                                                             
       CASE WHEN A.GAP_STATUS = 'GAP' THEN '#FF0000' END AS FontColor           
       FROM (                                                                    
             SELECT DECODE(SUM(GAP_STATUS),0,'NML', 'GAP') AS GAP_STATUS
                   ,CASE WHEN COUNT(DBC_COL_PNM) = 0 THEN '[DBC테이블미존재]'
                         WHEN COUNT(DBC_REAL_COL_PNM) = 0 THEN '[DBC운영테이블미존재]'
                   ELSE  MAX(GAP_CONTS) END  GAP_CONTS  
                   ,MAX(DBC_DB_SCH_ID)      DB_SCH_ID               
                   ,DBC_TBL_PNM         DBC_TBL_NM                                         
                   ,MAX(DBC_TBL_LNM)    DBC_TBL_LNM                                         
                   ,COUNT(DBC_COL_PNM)  DBC_COL_CNT       
                   ,MAX(DBC_REAL_DB_SCH_ID)  DB_REAL_SCH_ID                                      
                   ,MAX(DBC_REAL_TBL_PNM)    DBC_REAL_TBL_NM                                          
                   --,MAX(DBC_TBL_LNM)    DBC_REAL_TBL_LNM                                          
                   ,COUNT(DBC_REAL_COL_PNM)  DBC_REAL_COL_CNT       
                   ,MAX(DBC_DB_SCH_LNM) AS DBC_DB_SCH_LNM
                   ,MAX(DBC_DB_CONN_TRG_LNM) AS DBC_DB_CONN_TRG_LNM
                   ,MAX(DBC_REAL_DB_SCH_LNM) AS DBC_REAL_DB_SCH_LNM
                   ,MAX(DBC_REAL_DB_CONN_TRG_LNM) AS DBC_REAL_DB_CONN_TRG_LNM
                   ,MAX(SUBJ_LNM) SUBJ_LNM
             FROM (
                  SELECT 
                    IFNULL(DBC.DBC_TBL_NM,DBCR.DBC_TBL_NM) AS DBC_TBL_PNM
                   ,IFNULL(DBC.DBC_TBL_KOR_NM,DBCR.DBC_TBL_KOR_NM) AS DBC_TBL_LNM
                   ,IFNULL(DBC.DBC_COL_NM,DBCR.DBC_COL_NM) AS DBC_COL_PNM
                   ,DBC.DB_SCH_PNM      AS DBC_DB_SCH_LNM
                   ,DBC.DB_CONN_TRG_PNM AS DBC_DB_CONN_TRG_LNM
                   ,IFNULL(DBC.ORD,DBCR.ORD) AS DBC_COL_ORD
                   ,DBC.DATA_TYPE   AS DBC_DATA_TYPE
                   ,DBC.DATA_LEN   AS DBC_DATA_LEN
                   ,DECODE(DBC.DATA_PNT,0,NULL,DBC.DATA_PNT) AS DBC_DATA_SCAL
                   ,DECODE(IFNULL(DBC.NULL_YN,'-'),'N','Y','Y','N','-')    AS DBC_NONUL_YN 
                   ,DBC.DEFLT_VAL   AS DBC_DEFLT_VAL
                   ,DBC.PK_YN       AS DBC_PK_YN
                   ,DBC.PK_ORD      AS DBC_PK_ORD
                   ,DBCR.DBC_TBL_NM AS DBC_REAL_TBL_PNM
                   ,DBCR.DBC_COL_NM AS DBC_REAL_COL_PNM
                   ,DBCR.DB_SCH_PNM      AS DBC_REAL_DB_SCH_LNM
                   ,DBCR.DB_CONN_TRG_PNM AS DBC_REAL_DB_CONN_TRG_LNM
                   ,DBCR.ORD         AS DBC_REAL_COL_ORD
                   ,DBCR.DATA_TYPE   AS DBC_REAL_DATA_TYPE
                   ,DBCR.DATA_LEN   AS DBC_REAL_DATA_LEN
                   ,DECODE(DBCR.DATA_PNT,0,NULL,DBCR.DATA_PNT) AS DBC_REAL_DATA_SCAL
                   ,DECODE(IFNULL(DBCR.NULL_YN,'-'),'N','Y','Y','N','-')    AS DBC_REAL_NONUL_YN 
                   ,DBCR.DEFLT_VAL   AS DBC_REAL_DEFLT_VAL
                   ,DBCR.PK_YN       AS DBC_REAL_PK_YN
                   ,DBCR.PK_ORD      AS DBC_REAL_PK_ORD
                   ,CASE WHEN IFNULL(DBC.ORD,0)   != IFNULL(DBCR.ORD,0)
                           OR IFNULL(DBC.DATA_TYPE,'-') != IFNULL(DBCR.DATA_TYPE,'-') 
                           OR IFNULL(DBC.DATA_LEN,0)  != IFNULL(DBCR.DATA_LEN,0)
                           OR IFNULL(DBC.DATA_PNT,0) != IFNULL(DBCR.DATA_PNT,0)
                           OR DECODE(IFNULL(DBC.NULL_YN,'N'),'N','Y','N') != DECODE(IFNULL(DBCR.NULL_YN,'N'),'N','Y','N') 
                           OR IFNULL(REPLACE(DBC.DEFLT_VAL,CHR(39),NULL),'-') != IFNULL(REPLACE(DBCR.DEFLT_VAL,CHR(39), NULL),'-')
                           OR IFNULL(DBC.PK_YN ,'N')    != IFNULL(DBCR.PK_YN   ,'N') 
                           OR IFNULL(DBC.PK_ORD,0)    != IFNULL(DBCR.PK_ORD,0) THEN 1
                     ELSE 0 END AS GAP_STATUS 
                     , CASE WHEN DBC.DBC_TBL_NM IS NULL THEN '[DBC개발컬럼미존재]' ELSE '' END
                      ||CASE WHEN DBCR.DBC_TBL_NM IS NULL THEN '[DBC운영컬럼미존재]' ELSE '' END
                      ||CASE WHEN DBC.DBC_TBL_NM IS NOT NULL
                              AND DBCR.DBC_TBL_NM IS NOT NULL
                              AND (IFNULL(DBC.ORD,0)   != IFNULL(DBCR.ORD,0)
                                   OR IFNULL(DBC.DATA_TYPE,'-') != IFNULL(DBCR.DATA_TYPE,'-') 
                                   OR IFNULL(DBC.DATA_LEN,0)  != IFNULL(DBCR.DATA_LEN,0)
                                   OR IFNULL(DBC.DATA_PNT,0) != IFNULL(DBCR.DATA_PNT,0)
                                   OR DECODE(IFNULL(DBC.NULL_YN,'N'),'N','Y','N') != DECODE(IFNULL(DBCR.NULL_YN,'N'),'N','Y','N') 
                                   OR IFNULL(REPLACE(DBC.DEFLT_VAL,CHR(39),NULL),'-') != IFNULL(REPLACE(DBCR.DEFLT_VAL,CHR(39), NULL),'-')
                                   OR IFNULL(DBC.PK_YN ,'N')    != IFNULL(DBCR.PK_YN   ,'N') 
                                   OR IFNULL(DBC.PK_ORD,0)    != IFNULL(DBCR.PK_ORD,0))
                      THEN '[컬럼GAP존재]' ELSE '' END
                      AS GAP_CONTS       
                    ,DBC.DB_SCH_ID AS DBC_DB_SCH_ID
                    ,DBCR.DB_SCH_ID AS DBC_REAL_DB_SCH_ID
                    ,DBC.SUBJ_LNM
                  FROM (SELECT DBC.DB_SCH_ID
                             ,DBC.DBC_TBL_NM
                             ,DBC.DBC_TBL_KOR_NM
                             ,DBCCOL.DBC_COL_NM 
                             ,DBCCOL.ORD      
                             ,DBCCOL.DATA_TYPE
                             ,DBCCOL.DATA_LEN
                             ,DBCCOL.DATA_PNT
                             ,DBCCOL.NULL_YN
                             ,DBCCOL.DEFLT_VAL 
                             ,DBCCOL.PK_YN     
                             ,DBCCOL.PK_ORD
                             ,SCH.DB_CONN_TRG_ID
                             ,PDM.FULL_PATH
                             ,MAP.SRC_DB_SCH_ID
                             ,MAP.TGT_DB_SCH_ID
                             ,SCH.DB_SCH_PNM
                             ,TRG.DB_CONN_TRG_PNM
                             ,SUBJ.SUBJ_LNM
                        FROM WAT_DBC_TBL DBC
                        INNER JOIN WAT_DBC_COL DBCCOL
                        ON DBCCOL.DBC_TBL_NM = DBC.DBC_TBL_NM
                        AND DBC.DB_SCH_ID =DBCCOL.DB_SCH_ID
                        INNER JOIN WAA_DB_MAP MAP
                        ON MAP.SRC_DB_SCH_ID = DBC.DB_SCH_ID
                        AND MAP.REG_TYP_CD IN ('C', 'U')
                        AND MAP.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')
                        LEFT OUTER JOIN WAA_DB_SCH SCH
                        ON DBC.DB_SCH_ID = SCH.DB_SCH_ID
                        AND SCH.REG_TYP_CD IN ('C', 'U')
                        AND SCH.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')
                        LEFT OUTER JOIN WAA_DB_CONN_TRG TRG
                        ON SCH.DB_CONN_TRG_ID =TRG.DB_CONN_TRG_ID
                        AND TRG.REG_TYP_CD IN ('C', 'U')
                        AND TRG.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')
                        LEFT OUTER JOIN WAM_PDM_TBL PDM
                        ON DBC.PDM_TBL_ID = PDM.PDM_TBL_ID
                        LEFT OUTER JOIN WAA_SUBJ SUBJ
                        ON PDM.SUBJ_ID = SUBJ.SUBJ_ID
                        AND SUBJ.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')
                        AND SUBJ.REG_TYP_CD IN ('C', 'U')
                        WHERE SCH.DDL_TRG_DCD = 'D'  --개발 DB만
                        ) DBC
                  FULL OUTER JOIN (SELECT DBC.DB_SCH_ID
                                         ,DBC.DBC_TBL_NM
                                         ,DBC.DBC_TBL_KOR_NM
                                         ,DBCCOL.DBC_COL_NM 
                                         ,DBCCOL.ORD      
                                         ,DBCCOL.DATA_TYPE
                                         ,DBCCOL.DATA_LEN
                                         ,DBCCOL.DATA_PNT
                                         ,DBCCOL.NULL_YN
                                         ,DBCCOL.DEFLT_VAL 
                                         ,DBCCOL.PK_YN     
                                         ,DBCCOL.PK_ORD
                                         ,SCH.DB_CONN_TRG_ID  
                                         ,MAP.SRC_DB_SCH_ID
                                         ,MAP.TGT_DB_SCH_ID
                                         ,SCH.DB_SCH_PNM
                                         ,TRG.DB_CONN_TRG_PNM
                                   FROM WAT_DBC_TBL DBC
                                   INNER JOIN WAT_DBC_COL DBCCOL
                                   ON DBCCOL.DBC_TBL_NM = DBC.DBC_TBL_NM
                                   AND DBC.DB_SCH_ID =DBCCOL.DB_SCH_ID
                                   INNER JOIN WAA_DB_MAP MAP
                                   ON MAP.TGT_DB_SCH_ID = DBC.DB_SCH_ID
                                   AND MAP.REG_TYP_CD IN ('C', 'U')
                                   LEFT OUTER JOIN WAA_DB_SCH SCH
                                   ON DBC.DB_SCH_ID =SCH.DB_SCH_ID
                                   AND SCH.REG_TYP_CD IN ('C', 'U')
                                   AND SCH.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')
                                   LEFT OUTER JOIN WAA_DB_CONN_TRG TRG
                                   ON SCH.DB_CONN_TRG_ID =TRG.DB_CONN_TRG_ID
                                   AND TRG.REG_TYP_CD IN ('C', 'U')
                                   AND TRG.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')
                                   WHERE SCH.DDL_TRG_DCD = 'R'  --운영 DB만
                                   ) DBCR
                  ON DBC.SRC_DB_SCH_ID = DBCR.SRC_DB_SCH_ID
                  AND DBC.TGT_DB_SCH_ID = DBCR.TGT_DB_SCH_ID
                  AND DBC.DBC_TBL_NM = DBCR.DBC_TBL_NM
                  AND DBC.DBC_COL_NM = DBCR.DBC_COL_NM 
                  WHERE 1=1 
                <if test="fullPath != null">
                AND DBC.FULL_PATH LIKE '%' || #{fullPath,jdbcType=VARCHAR} || '%'
                </if>
                 <if test="dbConnTrgId != null">
                 AND (DBC.DB_CONN_TRG_ID = #{dbConnTrgId,jdbcType=VARCHAR} OR DBCR.DB_CONN_TRG_ID = #{dbConnTrgId,jdbcType=VARCHAR}) 
                </if>
                <if test="dbSchId != null">
                 AND (DBC.DB_SCH_ID = #{dbSchId,jdbcType=VARCHAR} OR DBCR.DB_SCH_ID = #{dbSchId,jdbcType=VARCHAR})
                </if>
<!--                 <if test="searchBgnDe != null"> -->
<!--                 <![CDATA[ -->
<!--                 AND TO_CHAR(C.APRV_DTM, '%Y-%m-%d') >= #{searchBgnDe,jdbcType=VARCHAR} -->
<!--                 ]]> -->
<!--                 </if> -->
<!--                 <if test="searchEndDe != null"> -->
<!--                 <![CDATA[ -->
<!--                 AND TO_CHAR(C.APRV_DTM, '%Y-%m-%d') <= #{searchEndDe,jdbcType=VARCHAR} -->
<!--                 ]]> -->
<!--                 </if> -->
                <if test="tblNm != null">
                AND (  DBC.DBC_TBL_NM  LIKE '%' || UPPER(#{tblNm,jdbcType=VARCHAR}) || '%'
                       OR DBC.DBC_TBL_KOR_NM LIKE '%' || UPPER(#{tblNm,jdbcType=VARCHAR}) || '%'
                       OR DBCR.DBC_TBL_NM  LIKE '%' || UPPER(#{tblNm,jdbcType=VARCHAR}) || '%'
                       OR DBCR.DBC_TBL_KOR_NM LIKE '%' || UPPER(#{tblNm,jdbcType=VARCHAR}) || '%'
                       )
                       </if>
            ) A
             GROUP BY DBC_TBL_PNM
      ) A
    <where>
     <if test="gapStatus != null">
     AND A.GAP_STATUS = #{gapStatus,jdbcType=VARCHAR}
     </if>
    </where>
     ORDER BY GAP_STATUS , GAP_CONTS,SUBJ_LNM, DBC_TBL_NM
</select>

<select id="selectDbcColGapList" resultMap="BaseResultMap" parameterType="kr.wise.dq.gap.service.ModelGapVO">
SELECT A.*
      ,CASE WHEN A.GAP_STATUS = 'GAP' THEN '#FF0000' END AS FontColor
  FROM (
                 SELECT 
                    IFNULL(DBC.DBC_TBL_NM,DBCR.DBC_TBL_NM) AS DBC_TBL_NM
                   ,IFNULL(DBC.DBC_TBL_KOR_NM,DBCR.DBC_TBL_KOR_NM) AS DBC_TBL_LNM
                   ,IFNULL(DBC.DBC_COL_NM,DBCR.DBC_COL_NM) AS DBC_COL_PNM
                   ,DBC.DB_SCH_PNM      AS DBC_DB_SCH_LNM
                   ,DBC.DB_CONN_TRG_PNM AS DBC_DB_CONN_TRG_LNM
                   ,DBC.ORD            AS DBC_COL_ORD
                   ,DBC.DATA_TYPE   AS DBC_DATA_TYPE
                   ,DBC.DATA_LEN   AS DBC_DATA_LEN
                   ,DECODE(DBC.DATA_PNT,0,NULL,DBC.DATA_PNT) AS DBC_DATA_SCAL
                   ,DECODE(IFNULL(DBC.NULL_YN,'-'),'N','Y','Y','N','-')    AS DBC_NONUL_YN 
                   ,DBC.DEFLT_VAL   AS DBC_DEFLT_VAL
                   ,DBC.PK_YN       AS DBC_PK_YN
                   ,DBC.PK_ORD      AS DBC_PK_ORD
                   ,DBCR.DBC_TBL_NM AS DBC_REAL_TBL_NM
                   ,DBCR.DBC_COL_NM AS DBC_REAL_COL_PNM
                   ,DBCR.DB_SCH_PNM      AS DBC_REAL_DB_SCH_LNM
                   ,DBCR.DB_CONN_TRG_PNM AS DBC_REAL_DB_CONN_TRG_LNM
                   ,DBCR.ORD         AS DBC_REAL_COL_ORD
                   ,DBCR.DATA_TYPE   AS DBC_REAL_DATA_TYPE
                   ,DBCR.DATA_LEN   AS DBC_REAL_DATA_LEN
                   ,DECODE(DBCR.DATA_PNT,0,NULL,DBCR.DATA_PNT) AS DBC_REAL_DATA_SCAL
                   ,DECODE(IFNULL(DBCR.NULL_YN,'-'),'N','Y','Y','N','-')    AS DBC_REAL_NONUL_YN 
                   ,DBCR.DEFLT_VAL   AS DBC_REAL_DEFLT_VAL
                   ,DBCR.PK_YN       AS DBC_REAL_PK_YN
                   ,DBCR.PK_ORD      AS DBC_REAL_PK_ORD
                   ,CASE WHEN IFNULL(DBC.ORD,0)   != IFNULL(DBCR.ORD,0)
                           OR IFNULL(DBC.DATA_TYPE,'-') != IFNULL(DBCR.DATA_TYPE,'-') 
                           OR IFNULL(DBC.DATA_LEN,0)  != IFNULL(DBCR.DATA_LEN,0)
                           OR IFNULL(DBC.DATA_PNT,0) != IFNULL(DBCR.DATA_PNT,0)
                           OR DECODE(IFNULL(DBC.NULL_YN,'N'),'N','Y','N') != DECODE(IFNULL(DBCR.NULL_YN,'N'),'N','Y','N') 
                           OR IFNULL(REPLACE(DBC.DEFLT_VAL,CHR(39),NULL),'-') != IFNULL(REPLACE(DBCR.DEFLT_VAL,CHR(39), NULL),'-')
                           OR IFNULL(DBC.PK_YN ,'N')    != IFNULL(DBCR.PK_YN   ,'N') 
                           OR IFNULL(DBC.PK_ORD,0)    != IFNULL(DBCR.PK_ORD,0) THEN 'GAP'
                     ELSE 'NML' END AS GAP_STATUS 
                    ,DBC.DB_SCH_ID AS DBC_DB_SCH_ID
                    ,DBCR.DB_SCH_ID AS DBC_REAL_DB_SCH_ID
                  FROM (SELECT DBC.DB_SCH_ID
                             ,DBC.DBC_TBL_NM
                             ,DBC.DBC_TBL_KOR_NM
                             ,DBCCOL.DBC_COL_NM 
                             ,DBCCOL.ORD      
                             ,DBCCOL.DATA_TYPE
                             ,DBCCOL.DATA_LEN
                             ,DBCCOL.DATA_PNT
                             ,DBCCOL.NULL_YN
                             ,DBCCOL.DEFLT_VAL 
                             ,DBCCOL.PK_YN     
                             ,DBCCOL.PK_ORD
                             ,SCH.DB_CONN_TRG_ID
                             ,PDM.FULL_PATH
                             ,MAP.SRC_DB_SCH_ID
                             ,MAP.TGT_DB_SCH_ID
                             ,SCH.DB_SCH_PNM
                             ,TRG.DB_CONN_TRG_PNM
                        FROM WAT_DBC_TBL DBC
                        INNER JOIN WAT_DBC_COL DBCCOL
                        ON DBCCOL.DBC_TBL_NM = DBC.DBC_TBL_NM
                        AND DBC.DB_SCH_ID =DBCCOL.DB_SCH_ID
                        INNER JOIN WAA_DB_MAP MAP
                        ON MAP.SRC_DB_SCH_ID = DBC.DB_SCH_ID
                        AND MAP.REG_TYP_CD IN ('C', 'U')
                        AND MAP.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')
                        LEFT OUTER JOIN WAA_DB_SCH SCH
                        ON DBC.DB_SCH_ID = SCH.DB_SCH_ID
                        AND SCH.REG_TYP_CD IN ('C', 'U')
                        AND SCH.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')
                        LEFT OUTER JOIN WAA_DB_CONN_TRG TRG
                        ON SCH.DB_CONN_TRG_ID =TRG.DB_CONN_TRG_ID
                        AND TRG.REG_TYP_CD IN ('C', 'U')
                        AND TRG.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')
                        LEFT OUTER JOIN WAM_PDM_TBL PDM
                        ON DBC.PDM_TBL_ID = PDM.PDM_TBL_ID
                        WHERE SCH.DDL_TRG_DCD = 'D'  --개발 DB만
                        ) DBC
                  FULL OUTER JOIN (SELECT DBC.DB_SCH_ID
                                         ,DBC.DBC_TBL_NM
                                         ,DBC.DBC_TBL_KOR_NM
                                         ,DBCCOL.DBC_COL_NM 
                                         ,DBCCOL.ORD      
                                         ,DBCCOL.DATA_TYPE
                                         ,DBCCOL.DATA_LEN
                                         ,DBCCOL.DATA_PNT
                                         ,DBCCOL.NULL_YN
                                         ,DBCCOL.DEFLT_VAL 
                                         ,DBCCOL.PK_YN     
                                         ,DBCCOL.PK_ORD
                                         ,SCH.DB_CONN_TRG_ID  
                                         ,MAP.SRC_DB_SCH_ID
                                         ,MAP.TGT_DB_SCH_ID
                                         ,SCH.DB_SCH_PNM
                                         ,TRG.DB_CONN_TRG_PNM
                                   FROM WAT_DBC_TBL DBC
                                   INNER JOIN WAT_DBC_COL DBCCOL
                                   ON DBCCOL.DBC_TBL_NM = DBC.DBC_TBL_NM
                                   AND DBC.DB_SCH_ID =DBCCOL.DB_SCH_ID
                                   INNER JOIN WAA_DB_MAP MAP
                                   ON MAP.TGT_DB_SCH_ID = DBC.DB_SCH_ID
                                   AND MAP.REG_TYP_CD IN ('C', 'U')
                                   LEFT OUTER JOIN WAA_DB_SCH SCH
                                   ON DBC.DB_SCH_ID =SCH.DB_SCH_ID
                                   AND SCH.REG_TYP_CD IN ('C', 'U')
                                   AND SCH.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')
                                   LEFT OUTER JOIN WAA_DB_CONN_TRG TRG
                                   ON SCH.DB_CONN_TRG_ID =TRG.DB_CONN_TRG_ID
                                   AND TRG.REG_TYP_CD IN ('C', 'U')
                                   AND TRG.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')
                                   WHERE SCH.DDL_TRG_DCD = 'R'  -- 운영 DB만
                                   ) DBCR
                  ON DBC.SRC_DB_SCH_ID = DBCR.SRC_DB_SCH_ID
                  AND DBC.TGT_DB_SCH_ID = DBCR.TGT_DB_SCH_ID
                  AND DBC.DBC_TBL_NM = DBCR.DBC_TBL_NM
                  AND DBC.DBC_COL_NM = DBCR.DBC_COL_NM 
                  WHERE 1=1 
                    AND (DBC.DBC_TBL_NM = #{dbcTblNm,jdbcType=VARCHAR} OR DBC.DBC_TBL_KOR_NM = #{dbcTblNm,jdbcType=VARCHAR}
                         OR DBCR.DBC_TBL_NM = #{dbcRealTblNm,jdbcType=VARCHAR} OR DBCR.DBC_TBL_KOR_NM = #{dbcRealTblNm,jdbcType=VARCHAR})
                    AND (DBC.DB_SCH_ID = #{dbSchId,jdbcType=VARCHAR} OR DBCR.DB_SCH_ID = #{dbRealSchId,jdbcType=VARCHAR})
             ) A
             ORDER BY DBC_TBL_NM, DBC_COL_ORD , DBC_REAL_COL_ORD
</select>


<resultMap id="MdlDevDdlGapMap" type="kr.wise.dq.gap.service.ModelGapVO">

    <result column="GAP_STATUS"  property="gapStatus" jdbcType="VARCHAR" />
	<result column="PDM_TBL_CNT" property="pdmTblCnt" jdbcType="VARCHAR" />
    <result column="GAP_CNT"     property="gapCnt"    jdbcType="VARCHAR" />
    <result column="COL_GAP_CNT" property="colGapCnt" jdbcType="VARCHAR" />
    <result column="NML_CNT"     property="nmlCnt"    jdbcType="VARCHAR" />
    <result column="PDM_COL_CNT" property="pdmColCnt" jdbcType="VARCHAR" />
    <result column="DDL_COL_CNT" property="ddlColCnt" jdbcType="VARCHAR" />
    <result column="APRV_DTM"    property="aprvDtm"   jdbcType="VARCHAR" />
      
    <result column="FULL_PATH"       property="fullPath"      jdbcType="VARCHAR" />
    <result column="DB_SCH_ID"       property="dbSchId"       jdbcType="VARCHAR" />
    <result column="PDM_TBL_ID"      property="pdmTblId"      jdbcType="VARCHAR" />
    <result column="PDM_TBL_PNM"     property="pdmTblPnm"     jdbcType="VARCHAR" />
    <result column="PDM_TBL_LNM"     property="pdmTblLnm"     jdbcType="VARCHAR" />   
    <result column="PDM_COL_PNM"     property="pdmColPnm"     jdbcType="VARCHAR" />
    <result column="PDM_COL_LNM"     property="pdmColLnm"     jdbcType="VARCHAR" />
    <result column="PDM_COL_SPNM"    property="pdmColSpnm"    jdbcType="VARCHAR" />
    <result column="PDM_COL_ORD"     property="pdmColOrd"     jdbcType="VARCHAR" />
    <result column="PDM_PK_YN"       property="pdmPkYn"       jdbcType="VARCHAR" />
    <result column="PDM_DATA_TYPE"   property="pdmDataType"   jdbcType="VARCHAR" />
    <result column="PDM_DATA_LEN"    property="pdmDataLen"    jdbcType="VARCHAR" />
    <result column="PDM_DATA_SCAL"   property="pdmDataScal"   jdbcType="VARCHAR" />
    <result column="PDM_NONUL_YN"    property="pdmNonulYn"    jdbcType="VARCHAR" />
    <result column="PDM_DEFLT_VAL"   property="pdmDefltVal"   jdbcType="VARCHAR" />
    
    <result column="DDL_COL_PNM"     property="ddlColPnm"     jdbcType="VARCHAR" />
    <result column="DDL_COL_LNM"     property="ddlColLnm"     jdbcType="VARCHAR" />
    <result column="DDL_COL_ORD"     property="ddlColOrd"     jdbcType="VARCHAR" />
    <result column="DDL_PK_YN"       property="ddlPkYn"       jdbcType="VARCHAR" />
    <result column="DDL_DATA_TYPE"   property="ddlDataType"   jdbcType="VARCHAR" />
    <result column="DDL_DATA_LEN"    property="ddlDataLen"    jdbcType="VARCHAR" />
    <result column="DDL_DATA_SCAL"   property="ddlDataScal"   jdbcType="VARCHAR" />
    <result column="DDL_NONUL_YN"    property="ddlNonulYn"    jdbcType="VARCHAR" />
    <result column="DDL_DEFLT_VAL"   property="ddlDefltVal"   jdbcType="VARCHAR" />
</resultMap>


<select id="selectMdlDevDdlTblGapList" resultMap="MdlDevDdlGapMap" parameterType="kr.wise.dq.gap.service.ModelGapVO">
	SELECT FULL_PATH	
	     , SUBJ_ID    
	     , PDM_TBL_ID
	     , DB_SCH_ID
         , TBL_NM      AS PDM_TBL_PNM          
         , IFNULL(PDM_TBL_LNM, DDL_TBL_LNM) AS PDM_TBL_LNM        
         , GAP_STATUS     
         , COL_GAP_CNT   
         , PDM_COL_CNT        
         , DDL_COL_CNT   
         , APRV_DTM     
      FROM (
        SELECT MAX(A.FULL_PATH)                  AS FULL_PATH
             , MAX(A.SUBJ_ID)                    AS SUBJ_ID
             , IFNULL(A.DB_SCH_ID, B.DB_SCH_ID)     AS DB_SCH_ID		   
             , IFNULL(A.PDM_TBL_PNM, B.PDM_TBL_PNM) AS TBL_NM
             , MAX(A.APRV_DTM)                   AS APRV_DTM
             , CASE WHEN MAX(B.PDM_TBL_PNM)  IS NULL THEN 'NTGT'                -- 개발DDL 테이블미존재 
                    WHEN MAX(A.PDM_TBL_PNM)  IS NULL THEN 'NPDM'                -- '메타테이블미존재' 
                    WHEN COUNT(CASE WHEN    IFNULL(A.PDM_COL_LNM,'_') != IFNULL(B.PDM_COL_LNM,'_')
                                         OR A.DATA_TYPE != B.DATA_TYPE
                                         OR IFNULL(A.DATA_LEN, 0)   != IFNULL(B.DATA_LEN, 0)
                                         OR IFNULL(A.DATA_SCAL,0)   != IFNULL( B.DATA_SCAL,0)
                                         OR A.COL_ORD            != B.COL_ORD
                                         OR IFNULL(A.NONUL_YN,'N')  != IFNULL(B.NONUL_YN,'N')
                                         OR IFNULL(A.DEFLT_VAL,'_') != IFNULL(B.DEFLT_VAL,'_')
                                         OR IFNULL(A.PK_YN,'N')     != IFNULL(B.PK_YN,'N')      THEN 1
                                END) > 0 THEN 'CGAP' 
                    ELSE 'NOR'             
                END AS GAP_STATUS     
             , COUNT(CASE WHEN      IFNULL(A.PDM_COL_LNM,'_') != IFNULL(B.PDM_COL_LNM,'_')  
                                 OR A.DATA_TYPE != B.DATA_TYPE
                                 OR A.DATA_LEN  != B.DATA_LEN
                                 OR A.DATA_SCAL != B.DATA_SCAL
                                 OR A.COL_ORD   != B.COL_ORD
                                 OR IFNULL(A.NONUL_YN,'N')  != IFNULL(B.NONUL_YN,'N')
                                 OR IFNULL(A.DEFLT_VAL,'_') != IFNULL(B.DEFLT_VAL,'_')
                                 OR IFNULL(A.PK_YN,'N')     != IFNULL(B.PK_YN,'N')   THEN 1
                     END) AS COL_GAP_CNT   
             , COUNT(A.PDM_TBL_PNM)  AS PDM_COL_CNT        
             , COUNT(B.PDM_TBL_PNM)  AS DDL_COL_CNT
             , MAX(B.PDM_TBL_PNM)    AS DDL_TBL_PNM
             , MAX(B.PDM_TBL_LNM)    AS DDL_TBL_LNM
             , MAX(B.PDM_COL_PNM)    AS DDL_COL_PNM
             , MAX(B.PDM_COL_LNM)    AS DDL_COL_LNM
             , MAX(B.COL_ORD)        AS ORD
             , MAX(B.DATA_TYPE)      AS DATA_TYPE
             , MAX(B.DATA_LEN)       AS DATA_LEN
             , MAX(B.DATA_SCAL)      AS DATA_SCAL
             , MAX(A.PDM_TBL_ID)     AS PDM_TBL_ID
             , MAX(A.PDM_TBL_PNM)    AS PDM_TBL_PNM
             , MAX(A.PDM_TBL_LNM)    AS PDM_TBL_LNM
             , MAX(A.PDM_COL_PNM)    AS PDM_COL_PNM
             , MAX(A.PDM_COL_LNM)    AS PDM_COL_LNM         
          FROM (SELECT  D.DB_SCH_ID   
                      , A.FULL_PATH
                      , A.SUBJ_ID
                      , A.PDM_TBL_ID                   
                      , A.PDM_TBL_PNM
                      , A.PDM_TBL_LNM
                      , A.APRV_DTM 
                      , B.PDM_COL_PNM
                      , B.PDM_COL_LNM              
                      , B.COL_ORD
                      , B.PK_YN
                      , B.DATA_TYPE
                      , B.DATA_LEN
                      , B.DATA_SCAL	
                      , B.NONUL_YN
                      , B.DEFLT_VAL                      
                   FROM WAM_PDM_TBL A
                        INNER JOIN WAM_PDM_COL B
                           ON B.PDM_TBL_ID = A.PDM_TBL_ID
                        INNER JOIN WAA_SUBJ C
                           ON C.EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d')
                          AND C.SUBJ_ID = A.SUBJ_ID                             
                        INNER JOIN WAA_SUBJ_DB_SCH_MAP D
                           ON D.EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d')
                          AND D.SUBJ_ID = C.SUBJ_ID
                  WHERE 1 = 1
                    AND D.DB_SCH_ID = #{dbSchId, jdbcType=VARCHAR}     
                    
                    <if test="subjId != null">
				   	   AND A.SUBJ_ID LIKE #{subjId, jdbcType=VARCHAR} ||'%'
				    </if>   	                                   
                        
                ) A
               FULL JOIN 
               (
                SELECT A.DB_SCH_ID	
                     , ''               AS FULL_PATH
                     , ''               AS SUBJ_ID
                     , A.DDL_TBL_PNM    AS PDM_TBL_PNM
                     , A.DDL_TBL_LNM    AS PDM_TBL_LNM                                 
                     , B.DDL_COL_PNM    AS PDM_COL_PNM
                     , B.DDL_COL_LNM    AS PDM_COL_LNM		             
                     , B.COL_ORD
                     , B.PK_YN
                     , B.DATA_TYPE      AS DATA_TYPE  
                     , (CASE WHEN B.DATA_TYPE NOT IN ('SDO_GEOMETRY','CLOB','BLOB') THEN B.DATA_LEN END) AS DATA_LEN
                     , B.DATA_SCAL 
                     , B.NONUL_YN
                     , REPLACE(REPLACE(B.DEFLT_VAL,CHR(10),''),CHR(13),'') AS DEFLT_VAL
                  FROM WAM_DDL_TBL A
                       INNER JOIN WAM_DDL_COL B
                          ON B.DDL_TBL_ID  = A.DDL_TBL_ID                         
                 WHERE 1 = 1		                                       
                   AND A.DB_SCH_ID = #{dbSchId, jdbcType=VARCHAR}    
                ) B                
                ON 1 = 1
               AND A.DB_SCH_ID   = B.DB_SCH_ID 
               AND A.PDM_TBL_PNM = B.PDM_TBL_PNM
               AND IFNULL(A.PDM_COL_PNM,'_') = IFNULL(B.PDM_COL_PNM,'_')  
         WHERE 1 = 1  
         GROUP BY IFNULL(A.DB_SCH_ID, B.DB_SCH_ID)
                , IFNULL(A.PDM_TBL_PNM, B.PDM_TBL_PNM) 
       ) X
    WHERE 1 = 1                  
      <if test="gapStatus != null">
	   	   AND X.GAP_STATUS = #{gapStatus, jdbcType=VARCHAR}
	  </if>     
	  <if test="subjId != null">
	   	   AND X.SUBJ_ID LIKE #{subjId, jdbcType=VARCHAR} ||'%'
	  </if>   		
	  <if test="pdmTblPnm != null">
	   	   AND X.TBL_NM LIKE #{pdmTblPnm, jdbcType=VARCHAR} ||'%'
	  </if>   		                 
    ORDER BY TBL_NM  
	
</select>


<select id="selectMdlDevDdlColGapList" resultMap="MdlDevDdlGapMap" parameterType="kr.wise.dq.gap.service.ModelGapVO"> 
    SELECT IFNULL(A.FULL_PATH, B.FULL_PATH)       AS FULL_PATH	 	     
	     ,   CASE WHEN B.PDM_COL_PNM IS NULL                            THEN 'DDL컬럼미존재' END
	      || CASE WHEN A.PDM_COL_PNM IS NULL                            THEN '메타컬럼미존재' END
	      || CASE WHEN IFNULL(A.PDM_COL_LNM,'_') != IFNULL(B.PDM_COL_LNM,'_') THEN '컬럼한글명불일치' END
	      || CASE WHEN IFNULL(A.PK_YN,'N') != IFNULL(B.PK_YN,'N')             THEN 'PK여부불일치' END
	      || CASE WHEN A.DATA_TYPE != B.DATA_TYPE                       THEN '데이터타입불일치' END
	      || CASE WHEN IFNULL(A.DATA_LEN,0)   != IFNULL(B.DATA_LEN,0)         THEN '데이터길이불일치' END 
	      || CASE WHEN IFNULL(A.DATA_SCAL,-1) != IFNULL(B.DATA_SCAL,-1)       THEN '소수점불일치' END
	      || CASE WHEN A.COL_ORD   != B.COL_ORD                         THEN '컬럼순서불일치' END
	      || CASE WHEN IFNULL(A.NONUL_YN,'N')  != IFNULL(B.NONUL_YN,'N')      THEN 'NOT NULL여부불일치' END
	      || CASE WHEN IFNULL(A.DEFLT_VAL,'_') != IFNULL(B.DEFLT_VAL,'_')     THEN 'DEFAULT불일치' END   AS GAP_STATUS   
	     , IFNULL(A.PDM_TBL_PNM, B.PDM_TBL_PNM)     AS DBC_TBL_NM       
	     , A.PDM_TBL_LNM     AS PDM_TBL_NM   
	     , A.PDM_COL_PNM     AS PDM_COL_PNM
	     , A.PDM_COL_LNM     AS PDM_COL_LNM
	     , A.COL_ORD         AS PDM_COL_ORD
	     , A.PK_YN           AS PDM_PK_YN
	     , A.DATA_TYPE       AS PDM_DATA_TYPE
	     , A.DATA_LEN        AS PDM_DATA_LEN
	     , A.DATA_SCAL       AS PDM_DATA_SCAL
	     , A.NONUL_YN        AS PDM_NONUL_YN
	     , A.DEFLT_VAL       AS PDM_DEFLT_VAL         
	     , B.PDM_TBL_PNM     AS DDL_TBL_PNM
	     , B.PDM_COL_PNM     AS DDL_COL_PNM
	     , B.PDM_COL_LNM     AS DDL_COL_LNM         
	     , B.COL_ORD         AS DDL_COL_ORD
	     , B.PK_YN           AS DDL_PK_YN
	     , B.DATA_TYPE       AS DDL_DATA_TYPE
	     , B.DATA_LEN        AS DDL_DATA_LEN
	     , B.DATA_SCAL       AS DDL_DATA_SCAL
	     , B.NONUL_YN        AS DDL_NONUL_YN
	     , B.DEFLT_VAL       AS DDL_DEFLT_VAL         
	  FROM (SELECT  A.FULL_PATH	              
                  , D.DB_SCH_ID
	              , A.PDM_TBL_PNM
	              , A.PDM_TBL_LNM
	              , B.PDM_COL_PNM
	              , B.PDM_COL_LNM              
	              , B.COL_ORD
	              , IFNULL(B.PK_YN,'N') AS PK_YN 
	              , B.DATA_TYPE
	              , B.DATA_LEN
	              , B.DATA_SCAL	
	              , IFNULL(B.NONUL_YN,'N') AS NONUL_YN 
	              , B.DEFLT_VAL
	           FROM WAM_PDM_TBL A
	                INNER JOIN WAM_PDM_COL B
	                   ON B.PDM_TBL_ID = A.PDM_TBL_ID
	                INNER JOIN WAA_SUBJ C
	                   ON C.EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d')
	                  AND C.SUBJ_ID = A.SUBJ_ID   
	                INNER JOIN WAA_SUBJ_DB_SCH_MAP D
	                   ON D.EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d')
	                  AND D.SUBJ_ID = C.SUBJ_ID	               
	          WHERE 1 = 1
	            AND D.DB_SCH_ID  = #{dbSchId, jdbcType=VARCHAR}        
                AND A.PDM_TBL_ID = #{pdmTblId, jdbcType=VARCHAR}                            	           
	        ) A
	       FULL JOIN 
	       (
	        SELECT A.DB_SCH_ID	
                 , ''               AS FULL_PATH
                 , ''               AS SUBJ_ID
                 , A.DDL_TBL_PNM    AS PDM_TBL_PNM
                 , A.DDL_TBL_LNM    AS PDM_TBL_LNM                                 
                 , B.DDL_COL_PNM    AS PDM_COL_PNM
                 , B.DDL_COL_LNM    AS PDM_COL_LNM		             
                 , B.COL_ORD
                 , B.PK_YN
                 , B.DATA_TYPE      AS DATA_TYPE  
                 , (CASE WHEN B.DATA_TYPE NOT IN ('SDO_GEOMETRY','CLOB','BLOB') THEN B.DATA_LEN END) AS DATA_LEN
                 , B.DATA_SCAL 
                 , B.NONUL_YN
                 , REPLACE(REPLACE(B.DEFLT_VAL,CHR(10),''),CHR(13),'') AS DEFLT_VAL
              FROM WAM_DDL_TBL A
                   INNER JOIN WAM_DDL_COL B
                      ON B.DDL_TBL_ID  = A.DDL_TBL_ID                         
             WHERE 1 = 1		                                       
               AND A.DB_SCH_ID   = #{dbSchId, jdbcType=VARCHAR}                           
               AND A.DDL_TBL_PNM = #{ddlTblPnm, jdbcType=VARCHAR}  
	       ) B                
	        ON 1 = 1
           AND A.DB_SCH_ID   = B.DB_SCH_ID 
           AND A.PDM_TBL_PNM = B.PDM_TBL_PNM
           AND IFNULL(A.PDM_COL_PNM,'_') = IFNULL(B.PDM_COL_PNM,'_')  
	 WHERE 1 = 1  
	 ORDER BY IFNULL(A.FULL_PATH, B.FULL_PATH) 
	        , IFNULL(A.PDM_TBL_PNM, B.PDM_TBL_PNM) 
	        , IFNULL(A.COL_ORD, B.COL_ORD)
	        	      
</select>



<resultMap id="MdlDevDbGapMap" type="kr.wise.dq.gap.service.ModelGapVO">

    <result column="GAP_STATUS"  property="gapStatus" jdbcType="VARCHAR" />
	<result column="PDM_TBL_CNT" property="pdmTblCnt" jdbcType="VARCHAR" />
    <result column="GAP_CNT"     property="gapCnt"    jdbcType="VARCHAR" />
    <result column="COL_GAP_CNT" property="colGapCnt" jdbcType="VARCHAR" />
    <result column="NML_CNT"     property="nmlCnt"    jdbcType="VARCHAR" />
    <result column="PDM_COL_CNT" property="pdmColCnt" jdbcType="VARCHAR" />
    <result column="DBC_COL_CNT" property="dbcColCnt" jdbcType="VARCHAR" />
    <result column="APRV_DTM"    property="aprvDtm"   jdbcType="VARCHAR" />
      
    <result column="FULL_PATH"       property="fullPath"      jdbcType="VARCHAR" />
    <result column="DB_SCH_ID"       property="dbSchId"       jdbcType="VARCHAR" />
    <result column="PDM_TBL_ID"      property="pdmTblId"      jdbcType="VARCHAR" />
    <result column="PDM_TBL_PNM"     property="pdmTblPnm"     jdbcType="VARCHAR" />
    <result column="PDM_TBL_LNM"     property="pdmTblLnm"     jdbcType="VARCHAR" />   
    <result column="PDM_COL_PNM"     property="pdmColPnm"     jdbcType="VARCHAR" />
    <result column="PDM_COL_LNM"     property="pdmColLnm"     jdbcType="VARCHAR" />
    <result column="PDM_COL_SPNM"    property="pdmColSpnm"    jdbcType="VARCHAR" />
    <result column="PDM_COL_ORD"     property="pdmColOrd"     jdbcType="VARCHAR" />
    <result column="PDM_PK_YN"       property="pdmPkYn"       jdbcType="VARCHAR" />
    <result column="PDM_DATA_TYPE"   property="pdmDataType"   jdbcType="VARCHAR" />
    <result column="PDM_DATA_LEN"    property="pdmDataLen"    jdbcType="VARCHAR" />
    <result column="PDM_DATA_SCAL"   property="pdmDataScal"   jdbcType="VARCHAR" />
    <result column="PDM_NONUL_YN"    property="pdmNonulYn"    jdbcType="VARCHAR" />
    <result column="PDM_DEFLT_VAL"   property="pdmDefltVal"   jdbcType="VARCHAR" />
    
    <result column="DBC_COL_PNM"     property="dbcColPnm"     jdbcType="VARCHAR" />
    <result column="DBC_COL_LNM"     property="dbcColLnm"     jdbcType="VARCHAR" />
    <result column="DBC_COL_ORD"     property="dbcColOrd"     jdbcType="VARCHAR" />
    <result column="DBC_PK_YN"       property="dbcPkYn"       jdbcType="VARCHAR" />
    <result column="DBC_DATA_TYPE"   property="dbcDataType"   jdbcType="VARCHAR" />
    <result column="DBC_DATA_LEN"    property="dbcDataLen"    jdbcType="VARCHAR" />
    <result column="DBC_DATA_SCAL"   property="dbcDataScal"   jdbcType="VARCHAR" />
    <result column="DBC_NONUL_YN"    property="dbcNonulYn"    jdbcType="VARCHAR" />
    <result column="DBC_DEFLT_VAL"   property="dbcDefltVal"   jdbcType="VARCHAR" />
</resultMap>


<select id="selectMdlDevDbTblGapList" resultMap="MdlDevDbGapMap" parameterType="kr.wise.dq.gap.service.ModelGapVO">
SELECT * 
 FROM (
 SELECT CASE WHEN MAX(DBC_TBL_PNM)  IS NULL THEN 'NTGT'   
             WHEN MAX(PDM_TBL_PNM)  IS NULL THEN 'NPDM' 
			 WHEN COUNT(GAP_STATUS) > 0 THEN 'CGAP'
			 ELSE 'NOR'
		 END AS GAP_STATUS
	   ,MAX(DBC_TBL_PNM) AS PDM_TBL_PNM
	   ,MAX(IFNULL(PDM_TBL_NM, DBC_TBL_LNM)) AS PDM_TBL_LNM
	   ,COUNT(GAP_STATUS) AS COL_GAP_CNT
	   ,COUNT(PDM_COL_PNM) AS PDM_COL_CNT
	   ,COUNT(DBC_COL_PNM) AS DBC_COL_CNT
       ,MAX(DB_SCH_ID) AS DB_SCH_ID
       ,MAX(PDM_TBL_ID) AS PDM_TBL_ID
   FROM (
			SELECT CASE WHEN B.DBC_COL_NM IS NULL                            THEN 'DB컬럼미존재' 
					    WHEN A.PDM_COL_PNM IS NULL                            THEN '메타컬럼미존재' 
					    WHEN IFNULL(A.PDM_COL_LNM,'_') != IFNULL(B.DBC_COL_KOR_NM,'_') THEN '컬럼한글명불일치' 
					    WHEN IFNULL(A.PK_YN,'N') != IFNULL(B.PK_YN,'N')             THEN 'PK여부불일치' 
					    WHEN A.DATA_TYPE != B.DATA_TYPE                       THEN '데이터타입불일치' 
					    WHEN IFNULL(A.DATA_LEN,0)   != IFNULL(B.DATA_LEN,0)         THEN '데이터길이불일치'  
					    WHEN IFNULL(A.DATA_SCAL,-1) != IFNULL(B.DATA_SCAL,-1)       THEN '소수점불일치' 
					    WHEN A.COL_ORD   != B.ORD                         THEN '컬럼순서불일치' 
					    WHEN IFNULL(A.NONUL_YN,'N')  != IFNULL(B.NONUL_YN,'N')      THEN 'NOT NULL여부불일치' 
					    WHEN IFNULL(A.DEFLT_VAL,'_') != IFNULL(B.DEFLT_VAL,'_')     THEN 'DEFAULT불일치'
					END AS GAP_STATUS
				  , B.DBC_TBL_NM     AS PDM_TBL_PNM       
				  , A.PDM_TBL_LNM     AS PDM_TBL_NM   
				  , A.PDM_COL_PNM     AS PDM_COL_PNM
				  , A.PDM_COL_LNM     AS PDM_COL_LNM
				  , A.COL_ORD         AS PDM_COL_ORD
				  , A.PK_YN           AS PDM_PK_YN
				  , A.DATA_TYPE       AS PDM_DATA_TYPE
				  , A.DATA_LEN        AS PDM_DATA_LEN
				  , A.DATA_SCAL       AS PDM_DATA_SCAL
				  , A.NONUL_YN        AS PDM_NONUL_YN
				  , A.DEFLT_VAL       AS PDM_DEFLT_VAL         
				  , B.DBC_TBL_NM     AS DBC_TBL_PNM
				  , B.DBC_TBL_KOR_NM     AS DBC_TBL_LNM
				  , B.DBC_COL_NM     AS DBC_COL_PNM
				  , B.DBC_COL_KOR_NM     AS DBC_COL_LNM         
				  , B.ORD         AS DBC_COL_ORD
				  , B.PK_YN           AS DBC_PK_YN
				  , B.DATA_TYPE       AS DBC_DATA_TYPE
				  , B.DATA_LEN        AS DBC_DATA_LEN
				  , B.DATA_SCAL       AS DBC_DATA_SCAL
				  , B.NONUL_YN        AS DBC_NONUL_YN
				  , B.DEFLT_VAL       AS DBC_DEFLT_VAL         
			      , A.DB_SCH_ID       AS DB_SCH_ID
			      , A.PDM_TBL_ID      AS PDM_TBL_ID
			  FROM (SELECT A.DB_SCH_ID
				         , A.PDM_TBL_PNM
				         , A.PDM_TBL_LNM
				         , B.PDM_COL_PNM
				         , B.PDM_COL_LNM              
				         , B.COL_ORD
				         , IFNULL(B.PK_YN,'N') AS PK_YN 
				         , B.DATA_TYPE
				         , B.DATA_LEN
				         , B.DATA_SCAL	
				         , IFNULL(B.NONUL_YN,'N') AS NONUL_YN 
				         , B.DEFLT_VAL
				         , A.PDM_TBL_ID
				      FROM WAM_PDM_TBL A
				     INNER JOIN WAM_PDM_COL B
				        ON B.PDM_TBL_ID = A.PDM_TBL_ID
				     WHERE 1 = 1     
					   AND A.DB_SCH_ID = #{dbSchId, jdbcType=VARCHAR}                          	           
				     ) A
			  LEFT JOIN 
				   (
				   SELECT A.DB_SCH_ID	
			            , A.DBC_TBL_NM     
			            , A.DBC_TBL_KOR_NM                                  
			            , B.DBC_COL_NM     
			            , B.DBC_COL_KOR_NM 		             
			            , B.ORD            
			            , B.PK_YN
			            , B.DATA_TYPE AS DATA_TYPE
			            , (CASE WHEN B.DATA_TYPE NOT IN ('SDO_GEOMETRY','CLOB','BLOB') THEN B.DATA_LEN END) AS DATA_LEN
			            , (CASE WHEN B.DATA_PNT != 0 THEN B.DATA_PNT END)   AS DATA_SCAL 
			            , (CASE WHEN B.NULL_YN = 'Y' THEN 'N' ELSE 'Y' END) AS NONUL_YN
			            , REPLACE(REPLACE(B.DEFLT_VAL,CHR(10),''),CHR(13),'') AS DEFLT_VAL
			         FROM WAT_DBC_TBL A
			        INNER JOIN WAT_DBC_COL B
			           ON B.DB_SCH_ID  = A.DB_SCH_ID
			          AND B.DBC_TBL_NM = A.DBC_TBL_NM 
			        WHERE 1 = 1	
			          AND A.DB_SCH_ID = #{dbSchId, jdbcType=VARCHAR}	              
				    ) B                
				 ON 1 = 1
			    AND A.DB_SCH_ID   = B.DB_SCH_ID 
			    AND A.PDM_TBL_PNM = B.DBC_TBL_NM
			    AND A.PDM_COL_PNM = B.DBC_COL_NM 
  UNION ALL
		    SELECT	 	'모델미존재' AS GAP_STATUS
			     , B.DBC_TBL_NM     AS DBC_TBL_NM       
			     , ''    AS PDM_TBL_NM   
			     , ''    AS PDM_COL_PNM
			     , ''    AS PDM_COL_LNM
			     , ''    AS PDM_COL_ORD
			     , ''    AS PDM_PK_YN
			     , ''    AS PDM_DATA_TYPE
			     , ''    AS PDM_DATA_LEN
			     , ''    AS PDM_DATA_SCAL
			     , ''    AS PDM_NONUL_YN
			     , ''    AS PDM_DEFLT_VAL         
			     , B.DBC_TBL_NM     AS DBC_TBL_PNM
			     , B.DBC_TBL_KOR_NM     AS DBC_TBL_LNM
			     , B.DBC_COL_NM     AS DBC_COL_PNM
			     , B.DBC_COL_KOR_NM     AS DBC_COL_LNM         
			     , B.ORD         AS DBC_COL_ORD
			     , B.PK_YN           AS DBC_PK_YN
			     , B.DATA_TYPE       AS DBC_DATA_TYPE
			     , B.DATA_LEN        AS DBC_DATA_LEN
			     , B.DATA_SCAL       AS DBC_DATA_SCAL
			     , B.NONUL_YN        AS DBC_NONUL_YN
			     , B.DEFLT_VAL       AS DBC_DEFLT_VAL      
		         , B.DB_SCH_ID       AS DB_SCH_ID
		         , ''                AS PDM_TBL_ID
			  FROM 
			       (
			        SELECT A.DB_SCH_ID	
		                 , A.DBC_TBL_NM     
		                 , A.DBC_TBL_KOR_NM                                 
		                 , B.DBC_COL_NM     
		                 , B.DBC_COL_KOR_NM 		             
		                 , B.ORD            
		                 , B.PK_YN
		                 , B.DATA_TYPE
		                 , (CASE WHEN B.DATA_TYPE NOT IN ('SDO_GEOMETRY','CLOB','BLOB') THEN B.DATA_LEN END) AS DATA_LEN
		                 , (CASE WHEN B.DATA_PNT != 0 THEN B.DATA_PNT END)   AS DATA_SCAL 
		                 , (CASE WHEN B.NULL_YN = 'Y' THEN 'N' ELSE 'Y' END) AS NONUL_YN
		                 , REPLACE(REPLACE(B.DEFLT_VAL,CHR(10),''),CHR(13),'') AS DEFLT_VAL
		              FROM WAT_DBC_TBL A
		                   INNER JOIN WAT_DBC_COL B
		                      ON B.DB_SCH_ID  = A.DB_SCH_ID
		                     AND B.DBC_TBL_NM = A.DBC_TBL_NM 
		             WHERE 1 = 1
		               AND A.DB_SCH_ID = #{dbSchId, jdbcType=VARCHAR}   
		               AND NOT EXISTS ( SELECT  1
								          FROM WAT_DBC_TBL A
										 INNER JOIN WAT_DBC_COL B
											ON B.DB_SCH_ID  = A.DB_SCH_ID
										   AND B.DBC_TBL_NM = A.DBC_TBL_NM
										  LEFT OUTER JOIN WAM_PDM_TBL AA
											ON AA.DB_SCH_ID   = B.DB_SCH_ID 
										   AND AA.PDM_TBL_PNM = B.DBC_TBL_NM
								         INNER JOIN WAM_PDM_COL BB
								            ON BB.PDM_TBL_ID = AA.PDM_TBL_ID
								         WHERE 1 = 1
									       AND BB.PDM_COL_PNM = B.DBC_COL_NM             	           
								         )
			       ) B     
  ) X
  WHERE 1 = 1                  
  GROUP BY DB_SCH_ID, PDM_TBL_NM
  ) Z
  WHERE 1=1
    <if test="gapStatus != null">
	AND Z.GAP_STATUS = #{gapStatus, jdbcType=VARCHAR}
	</if>     
	<if test="pdmTblPnm != null">
	AND (Z.PDM_TBL_PNM LIKE CONCAT('%', #{pdmTblPnm, jdbcType=VARCHAR}, '%')
	  OR Z.PDM_TBL_LNM LIKE CONCAT('%', #{pdmTblPnm, jdbcType=VARCHAR}, '%'))
	</if>   
</select>


<select id="selectMdlDevDbColGapList" resultMap="MdlDevDbGapMap" parameterType="kr.wise.dq.gap.service.ModelGapVO"> 
SELECT	 	CASE WHEN B.PDM_COL_PNM IS NULL                            THEN 'DB컬럼미존재' 
			         WHEN A.PDM_COL_PNM IS NULL                            THEN '메타컬럼미존재' 
			         WHEN IFNULL(A.PDM_COL_LNM,'_') != IFNULL(B.PDM_COL_LNM,'_') THEN '컬럼한글명불일치' 
			         WHEN IFNULL(A.PK_YN,'N') != IFNULL(B.PK_YN,'N')             THEN 'PK여부불일치' 
			         WHEN A.DATA_TYPE != B.DATA_TYPE                       THEN '데이터타입불일치' 
			         WHEN IFNULL(A.DATA_LEN,0)   != IFNULL(B.DATA_LEN,0)         THEN '데이터길이불일치'  
			         WHEN IFNULL(A.DATA_SCAL,-1) != IFNULL(B.DATA_SCAL,-1)       THEN '소수점불일치' 
			         WHEN A.COL_ORD   != B.COL_ORD                         THEN '컬럼순서불일치' 
			         WHEN IFNULL(A.NONUL_YN,'N')  != IFNULL(B.NONUL_YN,'N')      THEN 'NOT NULL여부불일치' 
			         WHEN IFNULL(A.DEFLT_VAL,'_') != IFNULL(B.DEFLT_VAL,'_')     THEN 'DEFAULT불일치' END     AS GAP_STATUS
	     , IFNULL(A.PDM_TBL_PNM, B.PDM_TBL_PNM)     AS DBC_TBL_NM       
	     , A.PDM_TBL_LNM     AS PDM_TBL_NM   
	     , A.PDM_COL_PNM     AS PDM_COL_PNM
	     , A.PDM_COL_LNM     AS PDM_COL_LNM
	     , A.COL_ORD         AS PDM_COL_ORD
	     , A.PK_YN           AS PDM_PK_YN
	     , A.DATA_TYPE       AS PDM_DATA_TYPE
	     , A.DATA_LEN        AS PDM_DATA_LEN
	     , A.DATA_SCAL       AS PDM_DATA_SCAL
	     , A.NONUL_YN        AS PDM_NONUL_YN
	     , A.DEFLT_VAL       AS PDM_DEFLT_VAL         
	     , B.PDM_TBL_PNM     AS DBC_TBL_PNM
	     , B.PDM_COL_PNM     AS DBC_COL_PNM
	     , B.PDM_COL_LNM     AS DBC_COL_LNM         
	     , B.COL_ORD         AS DBC_COL_ORD
	     , B.PK_YN           AS DBC_PK_YN
	     , B.DATA_TYPE       AS DBC_DATA_TYPE
	     , B.DATA_LEN        AS DBC_DATA_LEN
	     , B.DATA_SCAL       AS DBC_DATA_SCAL
	     , B.NONUL_YN        AS DBC_NONUL_YN
	     , B.DEFLT_VAL       AS DBC_DEFLT_VAL         
	  FROM (SELECT  A.DB_SCH_ID
	              , A.PDM_TBL_PNM
	              , A.PDM_TBL_LNM
	              , B.PDM_COL_PNM
	              , B.PDM_COL_LNM              
	              , B.COL_ORD
	              , IFNULL(B.PK_YN,'N') AS PK_YN 
	              , B.DATA_TYPE
	              , B.DATA_LEN
	              , B.DATA_SCAL	
	              , IFNULL(B.NONUL_YN,'N') AS NONUL_YN 
	              , B.DEFLT_VAL
	           FROM WAM_PDM_TBL A
	                INNER JOIN WAM_PDM_COL B
	                   ON B.PDM_TBL_ID = A.PDM_TBL_ID
	          WHERE 1 = 1          
	            AND A.DB_SCH_ID  = #{dbSchId, jdbcType=VARCHAR}        
                AND A.PDM_TBL_PNM = #{pdmTblPnm, jdbcType=VARCHAR}                           	           
	        ) A
	       LEFT JOIN 
	       (
	        SELECT A.DB_SCH_ID	
                 , ''               AS FULL_PATH
                 , A.DBC_TBL_NM     AS PDM_TBL_PNM
                 , A.DBC_TBL_KOR_NM AS PDM_TBL_LNM                                 
                 , B.DBC_COL_NM     AS PDM_COL_PNM
                 , B.DBC_COL_KOR_NM AS PDM_COL_LNM		             
                 , B.ORD            AS COL_ORD
                 , B.PK_YN
                 , B.DATA_TYPE AS DATA_TYPE
                 , (CASE WHEN B.DATA_TYPE NOT IN ('SDO_GEOMETRY','CLOB','BLOB') THEN B.DATA_LEN END) AS DATA_LEN
                 , (CASE WHEN B.DATA_PNT != 0 THEN B.DATA_PNT END)   AS DATA_SCAL 
                 , (CASE WHEN B.NULL_YN = 'Y' THEN 'N' ELSE 'Y' END) AS NONUL_YN
                 , REPLACE(REPLACE(B.DEFLT_VAL,CHR(10),''),CHR(13),'') AS DEFLT_VAL
              FROM WAT_DBC_TBL A
                   INNER JOIN WAT_DBC_COL B
                      ON B.DB_SCH_ID  = A.DB_SCH_ID
                     AND B.DBC_TBL_NM = A.DBC_TBL_NM 
             WHERE 1 = 1		                    
	            AND A.DB_SCH_ID  = #{dbSchId, jdbcType=VARCHAR}        
                AND A.DBC_TBL_NM = #{pdmTblPnm, jdbcType=VARCHAR}        
	       ) B                
	        ON 1 = 1
           AND A.DB_SCH_ID   = B.DB_SCH_ID 
           AND A.PDM_TBL_PNM = B.PDM_TBL_PNM
           AND A.PDM_COL_PNM = B.PDM_COL_PNM 
           UNION ALL
    SELECT	 	'모델미존재' AS GAP_STATUS
	     , B.PDM_TBL_PNM     AS DBC_TBL_NM       
	     , ''    AS PDM_TBL_NM   
	     , ''    AS PDM_COL_PNM
	     , ''    AS PDM_COL_LNM
	     , ''    AS PDM_COL_ORD
	     , ''    AS PDM_PK_YN
	     , ''    AS PDM_DATA_TYPE
	     , ''    AS PDM_DATA_LEN
	     , ''    AS PDM_DATA_SCAL
	     , ''    AS PDM_NONUL_YN
	     , ''    AS PDM_DEFLT_VAL         
	     , B.PDM_TBL_PNM     AS DBC_TBL_PNM
	     , B.PDM_COL_PNM     AS DBC_COL_PNM
	     , B.PDM_COL_LNM     AS DBC_COL_LNM         
	     , B.COL_ORD         AS DBC_COL_ORD
	     , B.PK_YN           AS DBC_PK_YN
	     , B.DATA_TYPE       AS DBC_DATA_TYPE
	     , B.DATA_LEN        AS DBC_DATA_LEN
	     , B.DATA_SCAL       AS DBC_DATA_SCAL
	     , B.NONUL_YN        AS DBC_NONUL_YN
	     , B.DEFLT_VAL       AS DBC_DEFLT_VAL         
	  FROM 
	       (
	        SELECT A.DB_SCH_ID	
                 , ''               AS FULL_PATH
                 , A.DBC_TBL_NM     AS PDM_TBL_PNM
                 , A.DBC_TBL_KOR_NM AS PDM_TBL_LNM                                 
                 , B.DBC_COL_NM     AS PDM_COL_PNM
                 , B.DBC_COL_KOR_NM AS PDM_COL_LNM		             
                 , B.ORD            AS COL_ORD
                 , B.PK_YN
                 , B.DATA_TYPE AS DATA_TYPE
                 , (CASE WHEN B.DATA_TYPE NOT IN ('SDO_GEOMETRY','CLOB','BLOB') THEN B.DATA_LEN END) AS DATA_LEN
                 , (CASE WHEN B.DATA_PNT != 0 THEN B.DATA_PNT END)   AS DATA_SCAL 
                 , (CASE WHEN B.NULL_YN = 'Y' THEN 'N' ELSE 'Y' END) AS NONUL_YN
                 , REPLACE(REPLACE(B.DEFLT_VAL,CHR(10),''),CHR(13),'') AS DEFLT_VAL
              FROM WAT_DBC_TBL A
                   INNER JOIN WAT_DBC_COL B
                      ON B.DB_SCH_ID  = A.DB_SCH_ID
                     AND B.DBC_TBL_NM = A.DBC_TBL_NM 
             WHERE 1 = 1		                    
	            AND A.DB_SCH_ID  = #{dbSchId, jdbcType=VARCHAR}        
                AND A.DBC_TBL_NM = #{pdmTblPnm, jdbcType=VARCHAR}     
	       ) B         
	       WHERE NOT EXISTS ( SELECT  1
						           FROM WAM_PDM_TBL AA
						                INNER JOIN WAM_PDM_COL BB
						                   ON BB.PDM_TBL_ID = AA.PDM_TBL_ID
						          WHERE 1 = 1
							       AND AA.DB_SCH_ID   = B.DB_SCH_ID 
							       AND AA.PDM_TBL_PNM = B.PDM_TBL_PNM
							       AND BB.PDM_COL_PNM = B.PDM_COL_PNM      
						            AND AA.DB_SCH_ID  = #{dbSchId, jdbcType=VARCHAR}        
					                AND AA.PDM_TBL_PNM = #{pdmTblPnm, jdbcType=VARCHAR}             	           
						         )
	 ORDER BY PDM_COL_ORD
</select>


<select id="selectNonStndPdmColGapList" resultMap="BaseResultMap" parameterType="kr.wise.dq.gap.service.ModelGapVO">
		SELECT /*+ LEADING(D A) */  
		 LTRIM(CASE 
		        WHEN B.DBC_COL_KOR_NM IS NULL THEN '컬럼한글명 미존재'
		        WHEN C.SDITM_LNM IS NULL THEN '용어미존재'
		          WHEN B.DBC_COL_KOR_NM != C.SDITM_LNM THEN '컬럼한글명불일치'
		          WHEN B.DATA_TYPE != D.DATA_TYPE THEN '데이터타입 불일치'
		          WHEN B.DATA_LEN != D.DATA_LEN THEN '데이터길이 불일치'
		          WHEN B.DATA_PNT != D.DATA_SCAL THEN '데이터소수점 자리수 불일치'
		         END
		   )  AS GAP_STATUS
		  , DB.DB_CONN_TRG_PNM
		  , DB.DB_CONN_TRG_ID
		  , SCH.DB_SCH_PNM
		  , SCH.DB_SCH_ID
		  , A.DBC_TBL_NM            AS PDM_TBL_PNM
		  , A.DBC_TBL_KOR_NM        AS PDM_TBL_LNM
		  , B.DBC_COL_NM            AS PDM_COL_PNM
		  , B.DBC_COL_KOR_NM        AS PDM_COL_LNM
		  , B.DATA_TYPE				AS PDM_DATA_TYPE
		  , B.DATA_LEN				AS PDM_DATA_LEN
		  , B.DATA_PNT				AS PDM_DATA_SCAL
		  , C.SDITM_LNM
		  , C.SDITM_PNM
		  , C.SDITM_ID
		  , D.DMN_ID
		  , D.DMN_PNM
		  , D.DMN_LNM
		  , D.DATA_TYPE				AS SDITM_DATA_TYPE
		  , D.DATA_LEN				AS SDITM_DATA_LEN
		  , D.DATA_SCAL				AS SDITM_DATA_SCAL
		FROM WAA_DB_CONN_TRG DB
		 INNER JOIN WAA_DB_SCH SCH
		   ON SCH.DB_CONN_TRG_ID = DB.DB_CONN_TRG_ID
		   AND SCH.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')
		   AND SCH.REG_TYP_CD IN ('C', 'U')
		 INNER JOIN WAT_DBC_TBL A
		   ON A.DB_SCH_ID = SCH.DB_SCH_ID
		   AND A.DB_CONN_TRG_ID = DB.DB_CONN_TRG_ID
		INNER JOIN WAT_DBC_COL B
		  ON B.DBC_TBL_NM = A.DBC_TBL_NM 
		 AND B.DB_SCH_ID = A.DB_SCH_ID
		LEFT JOIN WAM_SDITM C
		  ON C.SDITM_PNM = RTRIM(REPLACE(B.DBC_COL_NM,'_0123456789','')) 
		 AND C.REG_TYP_CD IN ('C', 'U')
		LEFT JOIN WAM_DMN D
		   ON D.DMN_PNM = C.DMN_PNM
		  AND D.REG_TYP_CD IN ('C', 'U')
		WHERE 1 = 1   
		  AND DB.EXP_DTM = STR_TO_DATE('99991231', '%Y%m%d')
		  AND DB.REG_TYP_CD IN ('C', 'U')

	   <if test="dbConnTrgId != null">
   	   	  AND A.DB_CONN_TRG_ID = #{dbConnTrgId, jdbcType=VARCHAR}
	   </if> 
	   <if test="dbSchId != null">
   	   	  AND A.DB_SCH_ID = #{dbSchId, jdbcType=VARCHAR}
	   </if> 
	   <if test="gapStatus != null">
   	   	  AND A.GAP_STATUS = #{gapStatus, jdbcType=VARCHAR}
	   </if>     
	   <if test="pdmTblLnm != null">
   	   	  AND (A.DBC_TBL_NM LIKE CONCAT('%', #{pdmTblLnm, jdbcType=VARCHAR}, '%') 
   	   	   OR A.DBC_TBL_KOR_NM LIKE CONCAT('%', #{pdmTblLnm, jdbcType=VARCHAR}, '%'))
	   </if>   		           
	 ORDER BY 
	 	   A.DBC_TBL_NM
	     , A.DBC_TBL_KOR_NM
	     , B.DBC_COL_NM
	     , B.DBC_COL_KOR_NM
</select>



<resultMap id="MdlErwinGapMap" type="kr.wise.dq.gap.service.ModelGapVO">

    <result column="GAP_STATUS"  property="gapStatus" jdbcType="VARCHAR" />
	<result column="PDM_TBL_CNT" property="pdmTblCnt" jdbcType="VARCHAR" />
    <result column="GAP_CNT"     property="gapCnt"    jdbcType="VARCHAR" />
    <result column="COL_GAP_CNT" property="colGapCnt" jdbcType="VARCHAR" />
    <result column="NML_CNT"     property="nmlCnt"    jdbcType="VARCHAR" />
    <result column="PDM_COL_CNT" property="pdmColCnt" jdbcType="VARCHAR" />
    <result column="DBC_COL_CNT" property="dbcColCnt" jdbcType="VARCHAR" />
    <result column="APRV_DTM"    property="aprvDtm"   jdbcType="VARCHAR" />
      
    <result column="FULL_PATH"       property="fullPath"      jdbcType="VARCHAR" />
    <result column="DB_SCH_ID"       property="dbSchId"       jdbcType="VARCHAR" />
    <result column="PDM_TBL_ID"      property="pdmTblId"      jdbcType="VARCHAR" />
    <result column="PDM_TBL_PNM"     property="pdmTblPnm"     jdbcType="VARCHAR" />
    <result column="PDM_TBL_LNM"     property="pdmTblLnm"     jdbcType="VARCHAR" />   
    <result column="PDM_COL_PNM"     property="pdmColPnm"     jdbcType="VARCHAR" />
    <result column="PDM_COL_LNM"     property="pdmColLnm"     jdbcType="VARCHAR" />
    <result column="PDM_COL_SPNM"    property="pdmColSpnm"    jdbcType="VARCHAR" />
    <result column="PDM_COL_ORD"     property="pdmColOrd"     jdbcType="VARCHAR" />
    <result column="PDM_PK_YN"       property="pdmPkYn"       jdbcType="VARCHAR" />
    <result column="PDM_DATA_TYPE"   property="pdmDataType"   jdbcType="VARCHAR" />
    <result column="PDM_DATA_LEN"    property="pdmDataLen"    jdbcType="VARCHAR" />
    <result column="PDM_DATA_SCAL"   property="pdmDataScal"   jdbcType="VARCHAR" />
    <result column="PDM_NONUL_YN"    property="pdmNonulYn"    jdbcType="VARCHAR" />
    <result column="PDM_DEFLT_VAL"   property="pdmDefltVal"   jdbcType="VARCHAR" />
    
    <result column="ERWIN_COL_PNM"     property="erwinColPnm"     jdbcType="VARCHAR" />
    <result column="ERWIN_COL_LNM"     property="erwinColLnm"     jdbcType="VARCHAR" />
    <result column="ERWIN_COL_ORD"     property="erwinColOrd"     jdbcType="VARCHAR" />
    <result column="ERWIN_PK_YN"       property="erwinPkYn"       jdbcType="VARCHAR" />
    <result column="ERWIN_DATA_TYPE"   property="erwinDataType"   jdbcType="VARCHAR" />
    <result column="ERWIN_DATA_LEN"    property="erwinDataLen"    jdbcType="VARCHAR" />
    <result column="ERWIN_DATA_SCAL"   property="erwinDataScal"   jdbcType="VARCHAR" />
    <result column="ERWIN_NONUL_YN"    property="erwinNonulYn"    jdbcType="VARCHAR" />
    <result column="ERWIN_DEFLT_VAL"   property="erwinDefltVal"   jdbcType="VARCHAR" />
</resultMap>



<select id="selectErwinPdmTblGapList" resultMap="MdlErwinGapMap" parameterType="kr.wise.dq.gap.service.ModelGapVO">
	SELECT FULL_PATH	    
	     , PDM_TBL_ID
         , TBL_NM      AS PDM_TBL_PNM          
         , IFNULL(PDM_TBL_LNM, ERWIN_TBL_KOR_NM) AS PDM_TBL_LNM        
         , GAP_STATUS     
         , COL_GAP_CNT   
         , PDM_COL_CNT        
         , ERWIN_COL_CNT   
         , APRV_DTM     
      FROM (
        SELECT IFNULL(B.FULL_PATH, A.FULL_PATH)     AS FULL_PATH		   
             , IFNULL(B.PDM_TBL_PNM, A.PDM_TBL_PNM) AS TBL_NM
             , MAX(B.APRV_DTM)                   AS APRV_DTM
             , CASE WHEN MAX(A.PDM_TBL_PNM)  IS NULL THEN 'NERW'  -- ER-WIN테이블미존재 
                    WHEN MAX(B.PDM_TBL_PNM)  IS NULL THEN 'NPDM'                -- '메타테이블미존재' 
                    WHEN COUNT(CASE WHEN    IFNULL(A.PDM_COL_LNM,'_') != IFNULL(B.PDM_COL_LNM,'_')
                                         OR A.DATA_TYPE != B.DATA_TYPE
                                         OR A.DATA_LEN  != B.DATA_LEN
                                         OR IFNULL(A.DATA_SCAL,-1) != IFNULL(B.DATA_SCAL,-1)
                                         OR A.COL_ORD   != B.COL_ORD
                                         OR IFNULL(A.NONUL_YN,'N')  != IFNULL(B.NONUL_YN,'N')
                                         OR IFNULL(A.DEFLT_VAL,'_') != IFNULL(B.DEFLT_VAL,'_')
                                         OR IFNULL(A.PK_YN,'N')     != IFNULL(B.PK_YN,'N')      THEN 1
                                END) > 0 THEN 'CGAP' 
                    ELSE 'NOR'             
                END AS GAP_STATUS     
             , COUNT(CASE WHEN      IFNULL(A.PDM_COL_LNM,'_') != IFNULL(B.PDM_COL_LNM,'_')  
                                 OR A.DATA_TYPE != B.DATA_TYPE
                                 OR A.DATA_LEN  != B.DATA_LEN
                                 OR IFNULL(A.DATA_SCAL,-1) != IFNULL(B.DATA_SCAL,-1)
                                 OR A.COL_ORD   != B.COL_ORD
                                 OR IFNULL(A.NONUL_YN,'N')  != IFNULL(B.NONUL_YN,'N')
                                 OR IFNULL(A.DEFLT_VAL,'_') != IFNULL(B.DEFLT_VAL,'_')
                                 OR IFNULL(A.PK_YN,'N')     != IFNULL(B.PK_YN,'N')   THEN 1
                     END) AS COL_GAP_CNT   
             , COUNT(B.PDM_TBL_PNM)  AS PDM_COL_CNT        
             , COUNT(A.PDM_TBL_PNM)  AS ERWIN_COL_CNT
             , MAX(A.PDM_TBL_PNM)    AS ERWIN_TBL_NM
             , MAX(A.PDM_TBL_LNM)    AS ERWIN_TBL_KOR_NM
             , MAX(A.PDM_COL_PNM)    AS ERWIN_COL_NM
             , MAX(A.PDM_COL_LNM)    AS ERWIN_COL_KOR_NM
             , MAX(A.COL_ORD)        AS ORD
             , MAX(A.DATA_TYPE)      AS DATA_TYPE
             , MAX(A.DATA_LEN)       AS DATA_LEN
             , MAX(A.DATA_SCAL)      AS DATA_SCAL
             , MAX(B.PDM_TBL_ID)     AS PDM_TBL_ID
             , MAX(B.PDM_TBL_PNM)    AS PDM_TBL_PNM
             , MAX(B.PDM_TBL_LNM)    AS PDM_TBL_LNM
             , MAX(B.PDM_COL_PNM)    AS PDM_COL_PNM
             , MAX(B.PDM_COL_LNM)    AS PDM_COL_LNM         
          FROM (SELECT  A.FULL_PATH   
                      , A.PDM_TBL_ID                   
                      , A.PDM_TBL_PNM
                      , A.PDM_TBL_LNM
                      , A.APRV_DTM 
                      , B.PDM_COL_PNM
                      , B.PDM_COL_LNM              
                      , B.COL_ORD
                      , B.PK_YN
                      , B.DATA_TYPE
                      , B.DATA_LEN
                      , B.DATA_SCAL	
                      , B.NONUL_YN
                      , B.DEFLT_VAL                      
                   FROM WAM_PDM_TBL A
                        INNER JOIN WAM_PDM_COL B
                           ON B.PDM_TBL_ID = A.PDM_TBL_ID
                        INNER JOIN WAA_SUBJ C
                           ON C.EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d')
                          AND C.SUBJ_ID = A.SUBJ_ID                           
                  WHERE A.FULL_PATH LIKE  #{fullPath, jdbcType=VARCHAR} ||'%'   
                        
                ) B
               FULL JOIN 
               (
                SELECT MDL_LNM || '>' || UPP_SUBJ_LNM || '>' || SUBJ_LNM AS 	FULL_PATH		             
                     , A.PDM_TBL_PNM
                     , A.PDM_TBL_LNM                                 
                     , A.PDM_COL_PNM
                     , A.PDM_COL_LNM		             
                     , A.COL_ORD
                     , A.PK_YN
<!--                      , GET_DATA_TYPE_SPLIT(A.DATA_TYPE,'DATA_TYPE') AS DATA_TYPE -->
<!--                      , GET_DATA_TYPE_SPLIT(A.DATA_TYPE,'DATA_LEN')  AS DATA_LEN -->
<!--                      , GET_DATA_TYPE_SPLIT(A.DATA_TYPE,'DATA_SCAL') AS DATA_SCAL  -->
                     , A.DATA_TYPE
                     , A.DATA_LEN
                     , A.DATA_SCAL 
                     , A.NONUL_YN
                     , A.DEFLT_VAL
                  FROM WAE_ERMART_R7_COL A
<!--                   FROM WAE_ERWIN_COL A -->
                 WHERE 1 = 1		 
<!--                    AND A.LIB_NM = #{sysAreaLnm, jdbcType=VARCHAR} -->
<!--                    AND SUBSTR(A.PDM_TBL_PNM,1,2) = 'TB'   -->
                   AND EXISTS (SELECT 1
                                 FROM WAA_SUBJ X
                                WHERE X.EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d')
                                  AND X.FULL_PATH   = MDL_LNM ||'>'|| UPP_SUBJ_LNM ||'>'|| SUBJ_LNM
<!--                                   AND X.FULL_PATH   = LIB_NM ||'>'|| MDL_NM ||'>'|| SUBJ_NM -->
<!--                                   AND X.SUBJ_ABR_NM = SUBSTR(A.PDM_TBL_PNM,3,5)   -->
                              )
                          
                ) A                
                ON A.FULL_PATH   = B.FULL_PATH
               AND A.PDM_TBL_PNM = B.PDM_TBL_PNM
               AND A.PDM_COL_PNM = B.PDM_COL_PNM 
         WHERE 1 = 1  
         GROUP BY IFNULL(B.FULL_PATH, A.FULL_PATH) 
                , IFNULL(B.PDM_TBL_PNM, A.PDM_TBL_PNM) 
         -- HAVING MAX(B.FULL_PATH) IS NOT NULL
       ) X
    WHERE 1 = 1      
      <if test="gapStatus != null">
	   	   AND X.GAP_STATUS = #{gapStatus, jdbcType=VARCHAR}
	  </if>     
	  <if test="fullPath != null">
	   	   AND X.FULL_PATH LIKE #{fullPath, jdbcType=VARCHAR} ||'%'
	  </if>   		
	  <if test="pdmTblPnm != null">
	   	   AND X.PDM_TBL_PNM LIKE #{pdmTblPnm, jdbcType=VARCHAR} ||'%'
	  </if>   		                 
    ORDER BY TBL_NM  
	
</select>


<select id="selectErwinPdmColGapList" resultMap="MdlErwinGapMap" parameterType="kr.wise.dq.gap.service.ModelGapVO">
	SELECT IFNULL(B.FULL_PATH, A.FULL_PATH)       AS FULL_PATH	 	     
	     ,   CASE WHEN A.PDM_COL_PNM IS NULL                THEN 'ERWIN컬럼미존재' END
	      || CASE WHEN B.PDM_COL_PNM IS NULL                THEN '메타컬럼미존재' END
	      || CASE WHEN IFNULL(A.PK_YN,'N') != IFNULL(B.PK_YN,'N') THEN 'PK여부불일치' END
	      || CASE WHEN A.DATA_TYPE != B.DATA_TYPE           THEN '데이터타입불일치' END
	      || CASE WHEN A.DATA_LEN  != B.DATA_LEN            THEN '데이터길이불일치' END
	      || CASE WHEN IFNULL(A.DATA_SCAL,-1) != IFNULL(B.DATA_SCAL,-1)   THEN '소수점불일치' END
	      || CASE WHEN A.COL_ORD   != B.COL_ORD                     THEN '컬럼순서불일치' END
	      || CASE WHEN IFNULL(A.NONUL_YN,'N')  != IFNULL(B.NONUL_YN,'N')  THEN 'NOT NULL여부불일치' END
	      || CASE WHEN IFNULL(A.DEFLT_VAL,'_') != IFNULL(B.DEFLT_VAL,'_') THEN 'DEFAULT불일치' END   AS GAP_STATUS   
	     , IFNULL(A.PDM_TBL_PNM, B.PDM_TBL_PNM)     AS ERWIN_TBL_NM       
	     , B.PDM_TBL_LNM     AS ERWIN_TBL_NM   
	     , A.PDM_COL_PNM     AS ERWIN_COL_PNM
	     , A.PDM_COL_LNM     AS ERWIN_COL_LNM
	     , A.COL_ORD         AS ERWIN_COL_ORD
	     , A.PK_YN           AS ERWIN_PK_YN
	     , A.DATA_TYPE       AS ERWIN_DATA_TYPE
	     , A.DATA_LEN        AS ERWIN_DATA_LEN
	     , A.DATA_SCAL       AS ERWIN_DATA_SCAL
	     , A.NONUL_YN        AS ERWIN_NONUL_YN
	     , A.DEFLT_VAL       AS ERWIN_DEFLT_VAL         
	     , B.PDM_TBL_PNM     AS PDM_TBL_PNM
	     , B.PDM_COL_PNM     AS PDM_COL_PNM
	     , B.PDM_COL_LNM     AS PDM_COL_LNM         
	     , B.COL_ORD         AS PDM_COL_ORD
	     , B.PK_YN           AS PDM_PK_YN
	     , B.DATA_TYPE       AS PDM_DATA_TYPE
	     , B.DATA_LEN        AS PDM_DATA_LEN
	     , B.DATA_SCAL       AS PDM_DATA_SCAL
	     , B.NONUL_YN        AS PDM_NONUL_YN
	     , B.DEFLT_VAL       AS PDM_DEFLT_VAL         
	  FROM (SELECT  A.FULL_PATH	              
	              , A.PDM_TBL_PNM
	              , A.PDM_TBL_LNM
	              , B.PDM_COL_PNM
	              , B.PDM_COL_LNM              
	              , B.COL_ORD
	              , IFNULL(B.PK_YN,'N') AS PK_YN 
	              , B.DATA_TYPE
	              , B.DATA_LEN
	              , B.DATA_SCAL	
	              , IFNULL(B.NONUL_YN,'N') AS NONUL_YN 
	              , B.DEFLT_VAL
	           FROM WAM_PDM_TBL A
	                INNER JOIN WAM_PDM_COL B
	                   ON B.PDM_TBL_ID = A.PDM_TBL_ID
	                INNER JOIN WAA_SUBJ C
	                   ON C.EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d')
	                  AND C.SUBJ_ID = A.SUBJ_ID    	                
	          WHERE A.PDM_TBL_ID =  #{pdmTblId, jdbcType=VARCHAR}           
	           
	        ) B
	       FULL JOIN 
	       (
	        SELECT MDL_LNM || '>' || UPP_SUBJ_LNM || '>' || SUBJ_LNM AS 	FULL_PATH		            
	             , A.PDM_TBL_PNM                          
	             , A.PDM_COL_PNM
	             , A.PDM_COL_LNM		             
	             , A.COL_ORD
	             , A.PK_YN
	             , A.DATA_TYPE
	             , A.DATA_LEN
	             , A.DATA_SCAL 
<!-- 	             , GET_DATA_TYPE_SPLIT(A.DATA_TYPE,'DATA_TYPE') AS DATA_TYPE -->
<!-- 	             , GET_DATA_TYPE_SPLIT(A.DATA_TYPE,'DATA_LEN')  AS DATA_LEN -->
<!-- 	             , GET_DATA_TYPE_SPLIT(A.DATA_TYPE,'DATA_SCAL') AS DATA_SCAL  -->
	             , A.NONUL_YN
	             , A.DEFLT_VAL
	          FROM WAE_ERMART_R7_COL A 	                
<!-- 	          FROM WAE_ERWIN_COL A 	                 -->
	         WHERE 1 = 1
	           AND A.MDL_LNM      =  #{sysAreaLnm, jdbcType=VARCHAR} 		     
	           AND A.UPP_SUBJ_LNM =  #{uppSubjLnm, jdbcType=VARCHAR}  
	           AND A.SUBJ_LNM     =  #{subjLnm, jdbcType=VARCHAR}
	           AND A.PDM_TBL_PNM =  #{pdmTblPnm, jdbcType=VARCHAR}         	           
	       ) A                
	        ON A.PDM_TBL_PNM = B.PDM_TBL_PNM
	       AND A.PDM_COL_PNM = B.PDM_COL_PNM 
	 WHERE 1 = 1  
	 ORDER BY IFNULL(A.FULL_PATH, B.FULL_PATH) 
	        , IFNULL(A.PDM_TBL_PNM, B.PDM_TBL_PNM) 
	        , IFNULL(B.COL_ORD, A.COL_ORD)
</select>

<select id="selectSrcDbSchList" resultMap="BaseResultMap" parameterType="kr.wise.dq.gap.service.ModelGapVO">
		
	SELECT DISTINCT
	       A.SRC_DB_SCH_ID    AS DB_SCH_ID 
	     , C.DB_CONN_TRG_PNM 
	     , B.DB_SCH_PNM 
	     ,  GET_CMCD_DTL_NM('DDL_TRG_DCD', B.DDL_TRG_DCD)  AS DDL_TRG_DCD
	  FROM WAA_DB_MAP A
	       INNER JOIN WAA_DB_SCH B
	          ON B.EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d')         
	         AND B.DB_SCH_ID = A.SRC_DB_SCH_ID  	         
	       INNER JOIN WAA_DB_CONN_TRG C
	          ON C.EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d') 
	         AND C.DB_CONN_TRG_ID = B.DB_CONN_TRG_ID          
	       INNER JOIN WAA_DB_SCH D
	          ON D.EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d')         
	         AND D.DB_SCH_ID = A.TGT_DB_SCH_ID 
	 WHERE A.EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d') 
	   AND A.REG_TYP_CD IN ('C','U')
	 ORDER BY DB_SCH_PNM  
	    	                   
</select>



<select id="selectTgtDbSchList" resultMap="BaseResultMap" parameterType="kr.wise.dq.gap.service.ModelGapVO"> 
		
	SELECT DISTINCT
	       A.TGT_DB_SCH_ID    AS DB_SCH_ID 
	     , E.DB_CONN_TRG_PNM 
	     , D.DB_SCH_PNM 
	     , GET_CMCD_DTL_NM('DDL_TRG_DCD', D.DDL_TRG_DCD) AS DDL_TRG_DCD  
	  FROM WAA_DB_MAP A
	       INNER JOIN WAA_DB_SCH B
	          ON B.EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d')         
	         AND B.DB_SCH_ID = A.SRC_DB_SCH_ID  	         
	       INNER JOIN WAA_DB_CONN_TRG C
	          ON C.EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d') 
	         AND C.DB_CONN_TRG_ID = B.DB_CONN_TRG_ID          
	       INNER JOIN WAA_DB_SCH D
	          ON D.EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d')         
	         AND D.DB_SCH_ID = A.TGT_DB_SCH_ID 
	       INNER JOIN WAA_DB_CONN_TRG E
	          ON E.EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d') 
	         AND E.DB_CONN_TRG_ID = D.DB_CONN_TRG_ID       
	 WHERE A.EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d') 
	   AND A.REG_TYP_CD IN ('C','U')
	   AND A.SRC_DB_SCH_ID = #{srcDbSchId, jdbcType=VARCHAR} 
	 ORDER BY DB_SCH_PNM  
	    	                   
</select>


<resultMap id="DbSrcTgtGapMap" type="kr.wise.dq.gap.service.ModelGapVO">

    <result column="GAP_STATUS"  property="gapStatus" jdbcType="VARCHAR" />
	<result column="PDM_TBL_CNT" property="pdmTblCnt" jdbcType="VARCHAR" />
    <result column="GAP_CNT"     property="gapCnt"    jdbcType="VARCHAR" />
    <result column="COL_GAP_CNT" property="colGapCnt" jdbcType="VARCHAR" />
    <result column="NML_CNT"     property="nmlCnt"    jdbcType="VARCHAR" />
    <result column="PDM_COL_CNT" property="pdmColCnt" jdbcType="VARCHAR" />
    <result column="DBC_COL_CNT" property="dbcColCnt" jdbcType="VARCHAR" />
    <result column="APRV_DTM"    property="aprvDtm"   jdbcType="VARCHAR" />
          
    <result column="SRC_DB_SCH_ID"      property="srcDbSchId"       jdbcType="VARCHAR" />
    <result column="SRC_DB_SCH_PNM"     property="srcDbSchPnm"      jdbcType="VARCHAR" />
    <result column="TGT_DB_SCH_ID"      property="tgtDbSchId"       jdbcType="VARCHAR" />
    <result column="TGT_DB_SCH_PNM"     property="tgtDbSchPnm"      jdbcType="VARCHAR" />
    <result column="DBC_TBL_NM"         property="dbcTblNm"         jdbcType="VARCHAR" />
    <result column="DBC_TBL_LNM"        property="dbcTblLnm"        jdbcType="VARCHAR" />
    
    <result column="SRC_DBC_COL_CNT"    property="srcDbcColCnt"     jdbcType="VARCHAR" /> 
    <result column="TGT_DBC_COL_CNT"    property="tgtDbcColCnt"     jdbcType="VARCHAR" />
    
    <result column="SRC_DBC_TBL_ID"     property="srcDbcTblId"      jdbcType="VARCHAR" />
    <result column="SRC_DBC_TBL_PNM"    property="srcDbcTblPnm"     jdbcType="VARCHAR" />
    <result column="SRC_DBC_TBL_LNM"    property="srcDbcTblLnm"     jdbcType="VARCHAR" />   
    <result column="SRC_DBC_COL_PNM"    property="srcDbcColPnm"     jdbcType="VARCHAR" />
    <result column="SRC_DBC_COL_LNM"    property="srcDbcColLnm"     jdbcType="VARCHAR" />
    <result column="SRC_DBC_COL_SPNM"   property="srcDbcColSpnm"    jdbcType="VARCHAR" />
    <result column="SRC_DBC_COL_ORD"    property="srcDbcColOrd"     jdbcType="VARCHAR" />
    <result column="SRC_DBC_PK_YN"      property="srcDbcPkYn"       jdbcType="VARCHAR" />
    <result column="SRC_DBC_DATA_TYPE"  property="srcDbcDataType"   jdbcType="VARCHAR" />
    <result column="SRC_DBC_DATA_LEN"   property="srcDbcDataLen"    jdbcType="VARCHAR" />
    <result column="SRC_DBC_DATA_SCAL"  property="srcDbcDataScal"   jdbcType="VARCHAR" />
    <result column="SRC_DBC_NONUL_YN"   property="srcDbcNonulYn"    jdbcType="VARCHAR" />
    <result column="SRC_DBC_DEFLT_VAL"  property="srcDbcDefltVal"   jdbcType="VARCHAR" />
    
    <result column="TGT_DBC_COL_PNM"    property="tgtDbcColPnm"     jdbcType="VARCHAR" />
    <result column="TGT_DBC_COL_LNM"    property="tgtDbcColLnm"     jdbcType="VARCHAR" />
    <result column="TGT_DBC_COL_ORD"    property="tgtDbcColOrd"     jdbcType="VARCHAR" />
    <result column="TGT_DBC_PK_YN"      property="tgtDbcPkYn"       jdbcType="VARCHAR" /> 
    <result column="TGT_DBC_DATA_TYPE"  property="tgtDbcDataType"   jdbcType="VARCHAR" />
    <result column="TGT_DBC_DATA_LEN"   property="tgtDbcDataLen"    jdbcType="VARCHAR" />
    <result column="TGT_DBC_DATA_SCAL"  property="tgtDbcDataScal"   jdbcType="VARCHAR" />
    <result column="TGT_DBC_NONUL_YN"   property="tgtDbcNonulYn"    jdbcType="VARCHAR" />
    <result column="TGT_DBC_DEFLT_VAL"  property="tgtDbcDefltVal"   jdbcType="VARCHAR" />
</resultMap>


<select id="selectDbSrcTgtTblGapList" resultMap="DbSrcTgtGapMap" parameterType="kr.wise.dq.gap.service.ModelGapVO">
    SELECT SRC_DB_CONN_TRG_PNM ||'.'|| SRC_DB_SCH_PNM AS SRC_DB_SCH_PNM
	     , TGT_DB_CONN_TRG_PNM ||'.'|| TGT_DB_SCH_PNM AS TGT_DB_SCH_PNM
	     , DBC_TBL_NM                            AS DBC_TBL_NM          
         , IFNULL(SRC_DBC_TBL_LNM, TGT_DBC_TBL_LNM) AS DBC_TBL_LNM        
         , GAP_STATUS     
         , COL_GAP_CNT   
         , SRC_DBC_COL_CNT        
         , TGT_DBC_COL_CNT   
         , APRV_DTM     
         , SRC_DB_SCH_ID
         , TGT_DB_SCH_ID
      FROM (
        SELECT MAX(A.DB_CONN_TRG_PNM)            AS SRC_DB_CONN_TRG_PNM
             , MAX(A.DB_SCH_ID)                  AS SRC_DB_SCH_ID		   
             , MAX(A.DB_SCH_PNM)                 AS SRC_DB_SCH_PNM
             , MAX(B.DB_CONN_TRG_PNM)            AS TGT_DB_CONN_TRG_PNM
             , MAX(B.DB_SCH_ID)                  AS TGT_DB_SCH_ID
             , MAX(B.DB_SCH_PNM)                 AS TGT_DB_SCH_PNM
             , IFNULL(A.DBC_TBL_PNM, B.DBC_TBL_PNM) AS DBC_TBL_NM
             , MAX(A.APRV_DTM)                   AS APRV_DTM
             , CASE WHEN MAX(B.DBC_TBL_PNM)  IS NULL THEN 'NTGT'   -- 타겟 테이블미존재 
                    WHEN MAX(A.DBC_TBL_PNM)  IS NULL THEN 'NSRC'   -- '소스 테이블미존재' 
                    WHEN COUNT(CASE WHEN    IFNULL(A.DBC_COL_LNM,'_') != IFNULL(B.DBC_COL_LNM,'_')
                                         OR A.DATA_TYPE != B.DATA_TYPE
                                         OR IFNULL(A.DATA_LEN, 0)   != IFNULL(B.DATA_LEN, 0)
                                         OR IFNULL(A.DATA_SCAL,0)   != IFNULL( B.DATA_SCAL,0)
                                         OR A.COL_ORD            != B.COL_ORD
                                         OR IFNULL(A.NONUL_YN,'N')  != IFNULL(B.NONUL_YN,'N')
                                         OR IFNULL(A.DEFLT_VAL,'_') != IFNULL(B.DEFLT_VAL,'_')
                                         OR IFNULL(A.PK_YN,'N')     != IFNULL(B.PK_YN,'N')      THEN 1
                                END) > 0 THEN 'CGAP' 
                    ELSE 'NOR'             
                END AS GAP_STATUS     
             , COUNT(CASE WHEN      IFNULL(A.DBC_COL_LNM,'_') != IFNULL(B.DBC_COL_LNM,'_')  
                                 OR A.DATA_TYPE != B.DATA_TYPE
                                 OR A.DATA_LEN  != B.DATA_LEN
                                 OR A.DATA_SCAL != B.DATA_SCAL
                                 OR A.COL_ORD   != B.COL_ORD
                                 OR IFNULL(A.NONUL_YN,'N')  != IFNULL(B.NONUL_YN,'N')
                                 OR IFNULL(A.DEFLT_VAL,'_') != IFNULL(B.DEFLT_VAL,'_')
                                 OR IFNULL(A.PK_YN,'N')     != IFNULL(B.PK_YN,'N')   THEN 1
                     END) AS COL_GAP_CNT   
             , COUNT(A.DBC_TBL_PNM)  AS SRC_DBC_COL_CNT        
             , COUNT(B.DBC_TBL_PNM)  AS TGT_DBC_COL_CNT
             , MAX(B.DBC_TBL_PNM)    AS TGT_DBC_TBL_PNM
             , MAX(B.DBC_TBL_LNM)    AS TGT_DBC_TBL_LNM            
             , MAX(A.DBC_TBL_PNM)    AS SRC_DBC_TBL_PNM
             , MAX(A.DBC_TBL_LNM)    AS SRC_DBC_TBL_LNM
             , MAX(A.DBC_COL_PNM)    AS TGT_DBC_COL_PNM
             , MAX(A.DBC_COL_LNM)    AS TGT_DBC_COL_LNM         
          FROM (SELECT  A.DB_SCH_ID 
                      , D.DB_CONN_TRG_PNM
                      , C.DB_SCH_PNM                                                                    
                      , A.DBC_TBL_NM     AS DBC_TBL_PNM
                      , A.DBC_TBL_KOR_NM AS DBC_TBL_LNM
                      , A.REG_DTM        AS APRV_DTM 
                      , B.DBC_COL_NM     AS DBC_COL_PNM
                      , B.DBC_COL_KOR_NM AS DBC_COL_LNM              
                      , B.ORD            AS COL_ORD
                      , B.PK_YN
                      , B.DATA_TYPE
                      , B.DATA_LEN
                      , B.DATA_PNT AS DATA_SCAL	
                      , CASE WHEN B.NULL_YN = 'Y' THEN 'N' ELSE 'Y' END  AS NONUL_YN
                      , B.DEFLT_VAL                      
                   FROM WAT_DBC_TBL A
                        INNER JOIN WAT_DBC_COL B
                           ON B.DB_SCH_ID  = A.DB_SCH_ID
                          AND B.DBC_TBL_NM = A.DBC_TBL_NM 
                        INNER JOIN WAA_DB_SCH C
                           ON C.EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d')
                          AND C.DB_SCH_ID = A.DB_SCH_ID 
                        INNER JOIN WAA_DB_CONN_TRG D
	                       ON D.EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d') 
	                      AND D.DB_CONN_TRG_ID = C.DB_CONN_TRG_ID         
                  WHERE 1 = 1
                    AND A.DB_SCH_ID = #{srcDbSchId, jdbcType=VARCHAR} 
                                                                
                ) A
               FULL JOIN 
               (
                SELECT  A.DB_SCH_ID 
                      , D.DB_CONN_TRG_PNM
                      , C.DB_SCH_PNM                                                                    
                      , A.DBC_TBL_NM     AS DBC_TBL_PNM
                      , A.DBC_TBL_KOR_NM AS DBC_TBL_LNM
                      , A.REG_DTM        AS APRV_DTM 
                      , B.DBC_COL_NM     AS DBC_COL_PNM
                      , B.DBC_COL_KOR_NM AS DBC_COL_LNM              
                      , B.ORD            AS COL_ORD
                      , B.PK_YN
                      , B.DATA_TYPE
                      , B.DATA_LEN
                      , B.DATA_PNT AS DATA_SCAL	
                      , CASE WHEN B.NULL_YN = 'Y' THEN 'N' ELSE 'Y' END  AS NONUL_YN
                      , B.DEFLT_VAL                      
                   FROM WAT_DBC_TBL A
                        INNER JOIN WAT_DBC_COL B
                           ON B.DB_SCH_ID  = A.DB_SCH_ID
                          AND B.DBC_TBL_NM = A.DBC_TBL_NM 
                        INNER JOIN WAA_DB_SCH C
                           ON C.EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d')
                          AND C.DB_SCH_ID = A.DB_SCH_ID 
                        INNER JOIN WAA_DB_CONN_TRG D
	                       ON D.EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d') 
	                      AND D.DB_CONN_TRG_ID = C.DB_CONN_TRG_ID         
                  WHERE 1 = 1 
                   AND A.DB_SCH_ID = #{tgtDbSchId, jdbcType=VARCHAR}            
                ) B                
                ON 1 = 1              
<!--                AND A.DB_SCH_PNM  = B.DB_SCH_PNM  -->
               AND A.DBC_TBL_PNM = B.DBC_TBL_PNM
               AND A.DBC_COL_PNM = B.DBC_COL_PNM 
         WHERE 1 = 1  
         GROUP BY IFNULL(A.DB_SCH_PNM, B.DB_SCH_PNM) 
                , IFNULL(A.DBC_TBL_PNM, B.DBC_TBL_PNM) 
       ) X
     WHERE 1 = 1        
                 
      <if test="gapStatus != null">
	   	   AND X.GAP_STATUS = #{gapStatus, jdbcType=VARCHAR}
	  </if>     	  
	  <if test="dbcTblNm != null">
	   	   AND UPPER(X.DBC_TBL_NM) LIKE '%'|| UPPER(#{dbcTblNm, jdbcType=VARCHAR}) ||'%'
	  </if>   		                 
    ORDER BY DBC_TBL_NM  
	
</select>


<select id="selectDbSrcTgtColGapList" resultMap="DbSrcTgtGapMap" parameterType="kr.wise.dq.gap.service.ModelGapVO">
	SELECT IFNULL(B.DB_SCH_PNM, A.DB_SCH_PNM)       AS DB_SCH_PNM	 	     
	     ,   CASE WHEN A.DBC_COL_PNM IS NULL                THEN '소스컬럼미존재' END
	      || CASE WHEN B.DBC_COL_PNM IS NULL                THEN '타겟컬럼미존재' END
	      || CASE WHEN IFNULL(A.PK_YN,'N') != IFNULL(B.PK_YN,'N') THEN 'PK여부불일치' END
	      || CASE WHEN A.DATA_TYPE != B.DATA_TYPE           THEN '데이터타입불일치' END
	      || CASE WHEN A.DATA_LEN  != B.DATA_LEN            THEN '데이터길이불일치' END
	      || CASE WHEN IFNULL(A.DATA_SCAL,-1) != IFNULL(B.DATA_SCAL,-1)   THEN '소수점불일치' END
	      || CASE WHEN A.COL_ORD   != B.COL_ORD                     THEN '컬럼순서불일치' END
	      || CASE WHEN IFNULL(A.NONUL_YN,'N')  != IFNULL(B.NONUL_YN,'N')  THEN 'NOT NULL여부불일치' END
	      || CASE WHEN IFNULL(A.DEFLT_VAL,'_') != IFNULL(B.DEFLT_VAL,'_') THEN 'DEFAULT불일치' END   AS GAP_STATUS   
	     , IFNULL(A.DBC_TBL_PNM, B.DBC_TBL_PNM)     AS DBC_TBL_NM       
	     , A.DBC_TBL_LNM     AS SRC_DBC_TBL_LNM    
	     , A.DBC_COL_PNM     AS SRC_DBC_COL_PNM
	     , A.DBC_COL_LNM     AS SRC_DBC_COL_LNM
	     , A.COL_ORD         AS SRC_DBC_COL_ORD
	     , A.PK_YN           AS SRC_DBC_PK_YN
	     , A.DATA_TYPE       AS SRC_DBC_DATA_TYPE
	     , A.DATA_LEN        AS SRC_DBC_DATA_LEN
	     , A.DATA_SCAL       AS SRC_DBC_DATA_SCAL
	     , A.NONUL_YN        AS SRC_DBC_NONUL_YN
	     , A.DEFLT_VAL       AS SRC_DBC_DEFLT_VAL         
	     , B.DBC_TBL_PNM     AS TGT_DBC_TBL_PNM
	     , B.DBC_COL_PNM     AS TGT_DBC_COL_PNM
	     , B.DBC_COL_LNM     AS TGT_DBC_COL_LNM         
	     , B.COL_ORD         AS TGT_DBC_COL_ORD
	     , B.PK_YN           AS TGT_DBC_PK_YN
	     , B.DATA_TYPE       AS TGT_DBC_DATA_TYPE
	     , B.DATA_LEN        AS TGT_DBC_DATA_LEN
	     , B.DATA_SCAL       AS TGT_DBC_DATA_SCAL
	     , B.NONUL_YN        AS TGT_DBC_NONUL_YN
	     , B.DEFLT_VAL       AS TGT_DBC_DEFLT_VAL         
	  FROM (SELECT  A.DB_SCH_ID 
                  , D.DB_CONN_TRG_PNM
                  , C.DB_SCH_PNM                                                                    
                  , A.DBC_TBL_NM     AS DBC_TBL_PNM
                  , A.DBC_TBL_KOR_NM AS DBC_TBL_LNM
                  , A.REG_DTM        AS APRV_DTM 
                  , B.DBC_COL_NM     AS DBC_COL_PNM
                  , B.DBC_COL_KOR_NM AS DBC_COL_LNM              
                  , B.ORD            AS COL_ORD
                  , B.PK_YN
                  , B.DATA_TYPE
                  , B.DATA_LEN
                  , B.DATA_PNT AS DATA_SCAL	
                  , CASE WHEN B.NULL_YN = 'Y' THEN 'N' ELSE 'Y' END  AS NONUL_YN
                  , B.DEFLT_VAL                      
               FROM WAT_DBC_TBL A
                    INNER JOIN WAT_DBC_COL B
                       ON B.DB_SCH_ID  = A.DB_SCH_ID
                      AND B.DBC_TBL_NM = A.DBC_TBL_NM 
                    INNER JOIN WAA_DB_SCH C
                       ON C.EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d')
                      AND C.DB_SCH_ID = A.DB_SCH_ID 
                    INNER JOIN WAA_DB_CONN_TRG D
                    ON D.EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d') 
                   AND D.DB_CONN_TRG_ID = C.DB_CONN_TRG_ID         
              WHERE 1 = 1
                AND A.DB_SCH_ID  = #{srcDbSchId, jdbcType=VARCHAR}
                AND A.DBC_TBL_NM = #{dbcTblNm, jdbcType=VARCHAR}  
                                                            
            ) A
           FULL JOIN 
           (
            SELECT  A.DB_SCH_ID 
                  , D.DB_CONN_TRG_PNM
                  , C.DB_SCH_PNM                                                                    
                  , A.DBC_TBL_NM     AS DBC_TBL_PNM
                  , A.DBC_TBL_KOR_NM AS DBC_TBL_LNM
                  , A.REG_DTM        AS APRV_DTM 
                  , B.DBC_COL_NM     AS DBC_COL_PNM
                  , B.DBC_COL_KOR_NM AS DBC_COL_LNM              
                  , B.ORD            AS COL_ORD
                  , B.PK_YN
                  , B.DATA_TYPE
                  , B.DATA_LEN
                  , B.DATA_PNT AS DATA_SCAL	
                  , CASE WHEN B.NULL_YN = 'Y' THEN 'N' ELSE 'Y' END  AS NONUL_YN
                  , B.DEFLT_VAL                      
               FROM WAT_DBC_TBL A
                    INNER JOIN WAT_DBC_COL B
                       ON B.DB_SCH_ID  = A.DB_SCH_ID
                      AND B.DBC_TBL_NM = A.DBC_TBL_NM 
                    INNER JOIN WAA_DB_SCH C
                       ON C.EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d')
                      AND C.DB_SCH_ID = A.DB_SCH_ID 
                    INNER JOIN WAA_DB_CONN_TRG D
                    ON D.EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d') 
                   AND D.DB_CONN_TRG_ID = C.DB_CONN_TRG_ID         
              WHERE 1 = 1 
               AND A.DB_SCH_ID = #{tgtDbSchId, jdbcType=VARCHAR}  
               AND A.DBC_TBL_NM = #{dbcTblNm, jdbcType=VARCHAR}          
            ) B                
            ON 1 = 1              
<!--            AND A.DB_SCH_PNM  = B.DB_SCH_PNM  -->
           AND A.DBC_TBL_PNM = B.DBC_TBL_PNM
           AND A.DBC_COL_PNM = B.DBC_COL_PNM 
    WHERE 1 = 1  
    ORDER BY IFNULL(A.DB_SCH_PNM, B.DB_SCH_PNM) 
           , IFNULL(A.DBC_TBL_PNM, B.DBC_TBL_PNM) 
           , IFNULL(B.COL_ORD, A.COL_ORD)
</select>



<resultMap id="DdlSrcTgtGapMap" type="kr.wise.dq.gap.service.ModelGapVO">

    <result column="GAP_STATUS"  property="gapStatus" jdbcType="VARCHAR" />
	<result column="PDM_TBL_CNT" property="pdmTblCnt" jdbcType="VARCHAR" />
    <result column="GAP_CNT"     property="gapCnt"    jdbcType="VARCHAR" />
    <result column="COL_GAP_CNT" property="colGapCnt" jdbcType="VARCHAR" />
    <result column="NML_CNT"     property="nmlCnt"    jdbcType="VARCHAR" />
    <result column="PDM_COL_CNT" property="pdmColCnt" jdbcType="VARCHAR" />
    <result column="DBC_COL_CNT" property="dbcColCnt" jdbcType="VARCHAR" />
    <result column="APRV_DTM"    property="aprvDtm"   jdbcType="VARCHAR" />
          
    <result column="SRC_DB_SCH_ID"      property="srcDbSchId"       jdbcType="VARCHAR" />
    <result column="SRC_DB_SCH_PNM"     property="srcDbSchPnm"      jdbcType="VARCHAR" />
    <result column="TGT_DB_SCH_ID"      property="tgtDbSchId"       jdbcType="VARCHAR" />
    <result column="TGT_DB_SCH_PNM"     property="tgtDbSchPnm"      jdbcType="VARCHAR" />
    <result column="DBC_TBL_NM"         property="dbcTblNm"         jdbcType="VARCHAR" />
    
    <result column="SRC_DDL_COL_CNT"    property="srcDdlColCnt"     jdbcType="VARCHAR" /> 
    <result column="TGT_DDL_COL_CNT"    property="tgtDdlColCnt"     jdbcType="VARCHAR" />
    
    <result column="DDL_TBL_PNM"        property="ddlTblPnm"        jdbcType="VARCHAR" />
    <result column="DDL_TBL_LNM"        property="ddlTblLnm"        jdbcType="VARCHAR" />
    <result column="SRC_DDL_TBL_ID"     property="srcDdlTblId"      jdbcType="VARCHAR" />
    <result column="SRC_DDL_TBL_PNM"    property="srcDdlTblPnm"     jdbcType="VARCHAR" />
    <result column="SRC_DDL_TBL_LNM"    property="srcDdlTblLnm"     jdbcType="VARCHAR" />   
    <result column="SRC_DDL_COL_PNM"    property="srcDdlColPnm"     jdbcType="VARCHAR" />
    <result column="SRC_DDL_COL_LNM"    property="srcDdlColLnm"     jdbcType="VARCHAR" />
    <result column="SRC_DDL_COL_SPNM"   property="srcDdlColSpnm"    jdbcType="VARCHAR" />
    <result column="SRC_DDL_COL_ORD"    property="srcDdlColOrd"     jdbcType="VARCHAR" />
    <result column="SRC_DDL_PK_YN"      property="srcDdlPkYn"       jdbcType="VARCHAR" />
    <result column="SRC_DDL_DATA_TYPE"  property="srcDdlDataType"   jdbcType="VARCHAR" />
    <result column="SRC_DDL_DATA_LEN"   property="srcDdlDataLen"    jdbcType="VARCHAR" />
    <result column="SRC_DDL_DATA_SCAL"  property="srcDdlDataScal"   jdbcType="VARCHAR" />
    <result column="SRC_DDL_NONUL_YN"   property="srcDdlNonulYn"    jdbcType="VARCHAR" />
    <result column="SRC_DDL_DEFLT_VAL"  property="srcDdlDefltVal"   jdbcType="VARCHAR" />
    
    <result column="TGT_DDL_COL_PNM"    property="tgtDdlColPnm"     jdbcType="VARCHAR" />
    <result column="TGT_DDL_COL_LNM"    property="tgtDdlColLnm"     jdbcType="VARCHAR" />
    <result column="TGT_DDL_COL_ORD"    property="tgtDdlColOrd"     jdbcType="VARCHAR" />
    <result column="TGT_DDL_PK_YN"      property="tgtDdlPkYn"       jdbcType="VARCHAR" /> 
    <result column="TGT_DDL_DATA_TYPE"  property="tgtDdlDataType"   jdbcType="VARCHAR" />
    <result column="TGT_DDL_DATA_LEN"   property="tgtDdlDataLen"    jdbcType="VARCHAR" />
    <result column="TGT_DDL_DATA_SCAL"  property="tgtDdlDataScal"   jdbcType="VARCHAR" />
    <result column="TGT_DDL_NONUL_YN"   property="tgtDdlNonulYn"    jdbcType="VARCHAR" />
    <result column="TGT_DDL_DEFLT_VAL"  property="tgtDdlDefltVal"   jdbcType="VARCHAR" />
</resultMap>


<select id="selectDdlSrcTgtTblGapList" resultMap="DdlSrcTgtGapMap" parameterType="kr.wise.dq.gap.service.ModelGapVO">
    SELECT SRC_DB_CONN_TRG_PNM ||'.'|| SRC_DB_SCH_PNM AS SRC_DB_SCH_PNM
	     , TGT_DB_CONN_TRG_PNM ||'.'|| TGT_DB_SCH_PNM AS TGT_DB_SCH_PNM
	     , DDL_TBL_PNM 
         , IFNULL(SRC_DDL_TBL_LNM, TGT_DDL_TBL_LNM) AS DDL_TBL_LNM        
         , GAP_STATUS     
         , COL_GAP_CNT   
         , SRC_DDL_COL_CNT        
         , TGT_DDL_COL_CNT   
         , APRV_DTM     
         , SRC_DB_SCH_ID
         , TGT_DB_SCH_ID
      FROM (
        SELECT MAX(A.DB_CONN_TRG_PNM)            AS SRC_DB_CONN_TRG_PNM
             , MAX(A.DB_SCH_ID)                  AS SRC_DB_SCH_ID		   
             , MAX(A.DB_SCH_PNM)                 AS SRC_DB_SCH_PNM
             , MAX(B.DB_CONN_TRG_PNM)            AS TGT_DB_CONN_TRG_PNM
             , MAX(B.DB_SCH_ID)                  AS TGT_DB_SCH_ID
             , MAX(B.DB_SCH_PNM)                 AS TGT_DB_SCH_PNM
             , IFNULL(A.DDL_TBL_PNM, B.DDL_TBL_PNM) AS DDL_TBL_PNM
             , MAX(A.APRV_DTM)                   AS APRV_DTM
             , CASE WHEN MAX(B.DDL_TBL_PNM)  IS NULL THEN 'NTGT'   -- 타겟 테이블미존재 
                    WHEN MAX(A.DDL_TBL_PNM)  IS NULL THEN 'NSRC'   -- '소스 테이블미존재' 
                    WHEN COUNT(CASE WHEN    IFNULL(A.DDL_COL_LNM,'_') != IFNULL(B.DDL_COL_LNM,'_')
                                         OR A.DATA_TYPE != B.DATA_TYPE
                                         OR IFNULL(A.DATA_LEN, 0)   != IFNULL(B.DATA_LEN, 0)
                                         OR IFNULL(A.DATA_SCAL,0)   != IFNULL( B.DATA_SCAL,0)
                                         OR A.COL_ORD            != B.COL_ORD
                                         OR IFNULL(A.NONUL_YN,'N')  != IFNULL(B.NONUL_YN,'N')
                                         OR IFNULL(A.DEFLT_VAL,'_') != IFNULL(B.DEFLT_VAL,'_')
                                         OR IFNULL(A.PK_YN,'N')     != IFNULL(B.PK_YN,'N')      THEN 1
                                END) > 0 THEN 'CGAP' 
                    ELSE 'NOR'             
                END AS GAP_STATUS     
             , COUNT(CASE WHEN      IFNULL(A.DDL_COL_LNM,'_') != IFNULL(B.DDL_COL_LNM,'_')  
                                 OR A.DATA_TYPE != B.DATA_TYPE
                                 OR A.DATA_LEN  != B.DATA_LEN
                                 OR A.DATA_SCAL != B.DATA_SCAL
                                 OR A.COL_ORD   != B.COL_ORD
                                 OR IFNULL(A.NONUL_YN,'N')  != IFNULL(B.NONUL_YN,'N')
                                 OR IFNULL(A.DEFLT_VAL,'_') != IFNULL(B.DEFLT_VAL,'_')
                                 OR IFNULL(A.PK_YN,'N')     != IFNULL(B.PK_YN,'N')   THEN 1
                     END) AS COL_GAP_CNT   
             , COUNT(A.DDL_TBL_PNM)  AS SRC_DDL_COL_CNT        
             , COUNT(B.DDL_TBL_PNM)  AS TGT_DDL_COL_CNT
             , MAX(B.DDL_TBL_PNM)    AS TGT_DDL_TBL_PNM
             , MAX(B.DDL_TBL_LNM)    AS TGT_DDL_TBL_LNM            
             , MAX(A.DDL_TBL_PNM)    AS SRC_DDL_TBL_PNM
             , MAX(A.DDL_TBL_LNM)    AS SRC_DDL_TBL_LNM
             , MAX(A.DDL_COL_PNM)    AS TGT_DDL_COL_PNM
             , MAX(A.DDL_COL_LNM)    AS TGT_DDL_COL_LNM         
          FROM (SELECT   A.DB_SCH_ID 
                      , D.DB_CONN_TRG_PNM
                      , C.DB_SCH_PNM                                                                    
                      , A.DDL_TBL_PNM    
                      , A.DDL_TBL_LNM    
                      , A.APRV_DTM        
                      , B.DDL_COL_PNM    
                      , B.DDL_COL_LNM                  
                      , B.COL_ORD
                      , B.PK_YN
                      , B.DATA_TYPE
                      , B.DATA_LEN
                      , B.DATA_SCAL	
                      , B.NONUL_YN
                      , B.DEFLT_VAL                     
                   FROM WAM_DDL_TBL A
                        INNER JOIN WAM_DDL_COL B
                           ON B.DDL_TBL_ID   = A.DDL_TBL_ID                           
                        INNER JOIN WAA_DB_SCH C
                           ON C.EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d')
                          AND C.DB_SCH_ID = A.DB_SCH_ID 
                        INNER JOIN WAA_DB_CONN_TRG D
	                       ON D.EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d') 
	                      AND D.DB_CONN_TRG_ID = C.DB_CONN_TRG_ID         
                  WHERE 1 = 1
                    AND A.DB_SCH_ID = #{srcDbSchId, jdbcType=VARCHAR}   
                                                                
                ) A
               FULL JOIN 
               (
                SELECT  A.DB_SCH_ID 
                      , D.DB_CONN_TRG_PNM
                      , C.DB_SCH_PNM                                                                    
                      , A.DDL_TBL_PNM    AS DDL_TBL_PNM
                      , A.DDL_TBL_LNM    AS DDL_TBL_LNM
                      , A.APRV_DTM       AS APRV_DTM 
                      , B.DDL_COL_PNM    AS DDL_COL_PNM
                      , B.DDL_COL_LNM    AS DDL_COL_LNM              
                      , B.COL_ORD
                      , B.PK_YN
                      , B.DATA_TYPE
                      , B.DATA_LEN
                      , B.DATA_SCAL	
                      , B.NONUL_YN
                      , B.DEFLT_VAL                      
                   FROM WAM_DDL_TBL A
                        INNER JOIN WAM_DDL_COL B
                           ON B.DDL_TBL_ID   = A.DDL_TBL_ID   
                        INNER JOIN WAA_DB_SCH C
                           ON C.EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d')
                          AND C.DB_SCH_ID = A.DB_SCH_ID 
                        INNER JOIN WAA_DB_CONN_TRG D
	                       ON D.EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d') 
	                      AND D.DB_CONN_TRG_ID = C.DB_CONN_TRG_ID         
                  WHERE 1 = 1 
                   AND A.DB_SCH_ID = #{tgtDbSchId, jdbcType=VARCHAR}   
                ) B                
                ON 1 = 1              
<!--                AND A.DB_SCH_PNM  = B.DB_SCH_PNM  -->
               AND A.DDL_TBL_PNM = B.DDL_TBL_PNM
               AND A.DDL_COL_PNM = B.DDL_COL_PNM 
         WHERE 1 = 1  
         GROUP BY IFNULL(A.DB_SCH_PNM, B.DB_SCH_PNM) 
                , IFNULL(A.DDL_TBL_PNM, B.DDL_TBL_PNM) 
       ) X
     WHERE 1 = 1  
      <if test="gapStatus != null">
	   	   AND X.GAP_STATUS = #{gapStatus, jdbcType=VARCHAR}
	  </if>     	  
	  <if test="ddlTblPnm != null">
	   	   AND UPPER(X.DDL_TBL_PNM) LIKE '%' || UPPER(#{ddlTblPnm, jdbcType=VARCHAR}) ||'%'
	  </if>   		                 
    ORDER BY DDL_TBL_PNM  
	
</select>


<select id="selectDdlSrcTgtColGapList" resultMap="DdlSrcTgtGapMap" parameterType="kr.wise.dq.gap.service.ModelGapVO">

	SELECT IFNULL(B.DB_SCH_PNM, A.DB_SCH_PNM)       AS DB_SCH_PNM	 	     
	     ,   CASE WHEN A.DDL_COL_PNM IS NULL                THEN '소스컬럼미존재' END
	      || CASE WHEN B.DDL_COL_PNM IS NULL                THEN '타겟컬럼미존재' END
	      || CASE WHEN IFNULL(A.PK_YN,'N') != IFNULL(B.PK_YN,'N') THEN 'PK여부불일치' END
	      || CASE WHEN A.DATA_TYPE != B.DATA_TYPE           THEN '데이터타입불일치' END
	      || CASE WHEN A.DATA_LEN  != B.DATA_LEN            THEN '데이터길이불일치' END
	      || CASE WHEN IFNULL(A.DATA_SCAL,-1) != IFNULL(B.DATA_SCAL,-1)   THEN '소수점불일치' END
	      || CASE WHEN A.COL_ORD   != B.COL_ORD                     THEN '컬럼순서불일치' END
	      || CASE WHEN IFNULL(A.NONUL_YN,'N')  != IFNULL(B.NONUL_YN,'N')  THEN 'NOT NULL여부불일치' END
	      || CASE WHEN IFNULL(A.DEFLT_VAL,'_') != IFNULL(B.DEFLT_VAL,'_') THEN 'DEFAULT불일치' END   AS GAP_STATUS   
	     , IFNULL(A.DDL_TBL_PNM, B.DDL_TBL_PNM)     AS DDL_TBL_NM       
	     , A.DDL_TBL_LNM     AS SRC_DDL_TBL_LNM    
	     , A.DDL_COL_PNM     AS SRC_DDL_COL_PNM
	     , A.DDL_COL_LNM     AS SRC_DDL_COL_LNM
	     , A.COL_ORD         AS SRC_DDL_COL_ORD
	     , A.PK_YN           AS SRC_DDL_PK_YN
	     , A.DATA_TYPE       AS SRC_DDL_DATA_TYPE
	     , A.DATA_LEN        AS SRC_DDL_DATA_LEN
	     , A.DATA_SCAL       AS SRC_DDL_DATA_SCAL
	     , A.NONUL_YN        AS SRC_DDL_NONUL_YN
	     , A.DEFLT_VAL       AS SRC_DDL_DEFLT_VAL         
	     , B.DDL_TBL_PNM     AS TGT_DDL_TBL_PNM
	     , B.DDL_COL_PNM     AS TGT_DDL_COL_PNM
	     , B.DDL_COL_LNM     AS TGT_DDL_COL_LNM         
	     , B.COL_ORD         AS TGT_DDL_COL_ORD
	     , B.PK_YN           AS TGT_DDL_PK_YN
	     , B.DATA_TYPE       AS TGT_DDL_DATA_TYPE
	     , B.DATA_LEN        AS TGT_DDL_DATA_LEN
	     , B.DATA_SCAL       AS TGT_DDL_DATA_SCAL
	     , B.NONUL_YN        AS TGT_DDL_NONUL_YN
	     , B.DEFLT_VAL       AS TGT_DDL_DEFLT_VAL         
	  FROM (SELECT  A.DB_SCH_ID 
                  , D.DB_CONN_TRG_PNM
                  , C.DB_SCH_PNM                                                                    
                  , A.DDL_TBL_PNM    
                  , A.DDL_TBL_LNM    
                  , A.APRV_DTM        
                  , B.DDL_COL_PNM    
                  , B.DDL_COL_LNM                  
                  , B.COL_ORD
                  , B.PK_YN
                  , B.DATA_TYPE
                  , B.DATA_LEN
                  , B.DATA_SCAL	
                  , B.NONUL_YN
                  , B.DEFLT_VAL       
               FROM WAM_DDL_TBL A
                    INNER JOIN WAM_DDL_COL B
                       ON B.DDL_TBL_ID   = A.DDL_TBL_ID   
                    INNER JOIN WAA_DB_SCH C
                       ON C.EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d')
                      AND C.DB_SCH_ID = A.DB_SCH_ID 
                    INNER JOIN WAA_DB_CONN_TRG D
	                   ON D.EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d') 
	                  AND D.DB_CONN_TRG_ID = C.DB_CONN_TRG_ID         
              WHERE 1 = 1
                AND A.DB_SCH_ID   = #{srcDbSchId, jdbcType=VARCHAR}   
                AND A.DDL_TBL_PNM = #{ddlTblPnm, jdbcType=VARCHAR}   
                                                            
            ) A
           FULL JOIN 
           (
            SELECT  A.DB_SCH_ID 
                  , D.DB_CONN_TRG_PNM
                  , C.DB_SCH_PNM                                                                    
                  , A.DDL_TBL_PNM    
                  , A.DDL_TBL_LNM    
                  , A.APRV_DTM        
                  , B.DDL_COL_PNM    
                  , B.DDL_COL_LNM                  
                  , B.COL_ORD
                  , B.PK_YN
                  , B.DATA_TYPE
                  , B.DATA_LEN
                  , B.DATA_SCAL	
                  , B.NONUL_YN
                  , B.DEFLT_VAL     
               FROM WAM_DDL_TBL A
                    INNER JOIN WAM_DDL_COL B
                       ON B.DDL_TBL_ID   = A.DDL_TBL_ID   
                    INNER JOIN WAA_DB_SCH C
                       ON C.EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d')
                      AND C.DB_SCH_ID = A.DB_SCH_ID 
                    INNER JOIN WAA_DB_CONN_TRG D
	                   ON D.EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d') 
	                  AND D.DB_CONN_TRG_ID = C.DB_CONN_TRG_ID         
              WHERE 1 = 1 
               AND A.DB_SCH_ID   = #{tgtDbSchId, jdbcType=VARCHAR}   
               AND A.DDL_TBL_PNM = #{ddlTblPnm, jdbcType=VARCHAR}   
            ) B                
            ON 1 = 1              
<!--            AND A.DB_SCH_PNM  = B.DB_SCH_PNM  -->
           AND A.DDL_TBL_PNM = B.DDL_TBL_PNM
           AND A.DDL_COL_PNM = B.DDL_COL_PNM 
    WHERE 1 = 1  
    ORDER BY IFNULL(A.DB_SCH_PNM, B.DB_SCH_PNM) 
           , IFNULL(A.DDL_TBL_PNM, B.DDL_TBL_PNM) 
           , IFNULL(B.COL_ORD, A.COL_ORD)
           
</select>



<resultMap id="DdlIdxSrcTgtGapMap" type="kr.wise.dq.gap.service.ModelGapVO">

    <result column="GAP_STATUS"          property="gapStatus"       jdbcType="VARCHAR" />
	<result column="DDL_TBL_CNT"         property="ddlTblCnt"       jdbcType="VARCHAR" />
    <result column="GAP_CNT"             property="gapCnt"          jdbcType="VARCHAR" />
    <result column="COL_GAP_CNT"         property="colGapCnt"       jdbcType="VARCHAR" />
    <result column="NML_CNT"             property="nmlCnt"          jdbcType="VARCHAR" />
    <result column="SRC_DDL_IDX_COL_CNT" property="srcDdlIdxColCnt" jdbcType="VARCHAR" />
    <result column="TGT_DDL_IDX_COL_CNT" property="tgtDdlIdxColCnt" jdbcType="VARCHAR" /> 
    <result column="APRV_DTM"            property="aprvDtm"         jdbcType="VARCHAR" />
          
    <result column="SRC_DB_SCH_ID"      property="srcDbSchId"       jdbcType="VARCHAR" />
    <result column="SRC_DB_SCH_PNM"     property="srcDbSchPnm"      jdbcType="VARCHAR" />
    <result column="TGT_DB_SCH_ID"      property="tgtDbSchId"       jdbcType="VARCHAR" />
    <result column="TGT_DB_SCH_PNM"     property="tgtDbSchPnm"      jdbcType="VARCHAR" />
    <result column="DDL_TBL_PNM"        property="ddlTblPnm"        jdbcType="VARCHAR" />
    <result column="DDL_TBL_LNM"        property="ddlTbLnm"         jdbcType="VARCHAR" />
    <result column="DDL_IDX_PNM"        property="ddlIdxPnm"        jdbcType="VARCHAR" />
    
   
    <result column="DDL_TBL_PNM"        property="ddlTblPnm"        jdbcType="VARCHAR" />
    <result column="DDL_TBL_LNM"        property="ddlTblLnm"        jdbcType="VARCHAR" />
        
    <result column="SRC_DDL_TBL_PNM"      property="srcDdlTblPnm"     jdbcType="VARCHAR" />    
    <result column="SRC_DDL_TBL_LNM"      property="srcDdlTblLnm"     jdbcType="VARCHAR" />   
    <result column="SRC_DDL_IDX_PNM"      property="srcDdlIdxPnm"     jdbcType="VARCHAR" />
    <result column="SRC_DDL_IDX_LNM"      property="srcDdlIdxLnm"     jdbcType="VARCHAR" />
    <result column="SRC_UK_IDX_YN"        property="srcUkIdxYn"       jdbcType="VARCHAR" />           
    <result column="SRC_DDL_IDX_COL_PNM"  property="srcDdlIdxColPnm"  jdbcType="VARCHAR" />
    <result column="SRC_DDL_IDX_COL_LNM"  property="srcDdlIdxColLnm"  jdbcType="VARCHAR" />    
    <result column="SRC_DDL_IDX_COL_ORD"  property="srcDdlIdxColOrd"  jdbcType="VARCHAR" />
    <result column="SRC_SORT_TYP"         property="srcSortTyp"       jdbcType="VARCHAR" />    
    
    <result column="TGT_DDL_TBL_PNM"      property="tgtDdlTblPnm"     jdbcType="VARCHAR" />
    <result column="TGT_DDL_TBL_LNM"      property="tgtDdlTblLnm"     jdbcType="VARCHAR" />
    <result column="TGT_DDL_IDX_PNM"      property="tgtDdlIdxPnm"     jdbcType="VARCHAR" />
    <result column="TGT_DDL_IDX_LNM"      property="tgtDdlIdxLnm"     jdbcType="VARCHAR" />
    <result column="TGT_UK_IDX_YN"        property="tgtUkIdxYn"       jdbcType="VARCHAR" />
    <result column="TGT_DDL_IDX_COL_PNM"  property="tgtDdlIdxColPnm"  jdbcType="VARCHAR" />
    <result column="TGT_DDL_IDX_COL_LNM"  property="tgtDdlIdxColLnm"  jdbcType="VARCHAR" />
    <result column="TGT_DDL_IDX_COL_ORD"  property="tgtDdlIdxColOrd"  jdbcType="VARCHAR" /> 
    <result column="TGT_SORT_TYP"         property="tgtSortTyp"       jdbcType="VARCHAR" />
    
</resultMap>


<select id="selectDdlIdxSrcTgtTblGapList" resultMap="DdlIdxSrcTgtGapMap" parameterType="kr.wise.dq.gap.service.ModelGapVO">
    SELECT SRC_DB_CONN_TRG_PNM ||'.'|| SRC_DB_SCH_PNM AS SRC_DB_SCH_PNM
	     , TGT_DB_CONN_TRG_PNM ||'.'|| TGT_DB_SCH_PNM AS TGT_DB_SCH_PNM
	     , DDL_TBL_PNM
	     , DDL_IDX_PNM                  
         , GAP_STATUS     
         , COL_GAP_CNT   
         , SRC_DDL_IDX_COL_CNT        
         , TGT_DDL_IDX_COL_CNT   
         , APRV_DTM     
         , SRC_DB_SCH_ID
         , TGT_DB_SCH_ID
      FROM (
        SELECT MAX(X.DB_CONN_TRG_PNM)            AS SRC_DB_CONN_TRG_PNM
             , MAX(X.DB_SCH_ID)                  AS SRC_DB_SCH_ID		   
             , MAX(X.DB_SCH_PNM)                 AS SRC_DB_SCH_PNM
             , MAX(Y.DB_CONN_TRG_PNM)            AS TGT_DB_CONN_TRG_PNM
             , MAX(Y.DB_SCH_ID)                  AS TGT_DB_SCH_ID
             , MAX(Y.DB_SCH_PNM)                 AS TGT_DB_SCH_PNM
             , IFNULL(X.DDL_TBL_PNM, Y.DDL_TBL_PNM) AS DDL_TBL_PNM
             , IFNULL(X.DDL_IDX_PNM, Y.DDL_IDX_PNM) AS DDL_IDX_PNM
             , MAX(X.APRV_DTM)                   AS APRV_DTM
             , CASE WHEN MAX(Y.DDL_IDX_PNM)  IS NULL THEN 'NTGT'   -- 타겟 DDL인덱스 미존재 
                    WHEN MAX(X.DDL_IDX_PNM)  IS NULL THEN 'NSRC'   -- '소스 DDL인덱스 미존재' 
                    WHEN COUNT(CASE WHEN    IFNULL(X.DDL_IDX_COL_ORD, 0) != IFNULL(Y.DDL_IDX_COL_ORD, 0)  
                                         OR X.SORT_TYP != Y.SORT_TYP  THEN 1
                                END) > 0 THEN 'CGAP' 
                    ELSE 'NOR'             
                END AS GAP_STATUS     
             , COUNT(CASE WHEN      IFNULL(X.DDL_IDX_COL_ORD, 0) != IFNULL(Y.DDL_IDX_COL_ORD, 0)  
                                 OR X.SORT_TYP != Y.SORT_TYP  THEN 1
                     END) AS COL_GAP_CNT   
             , COUNT(X.DDL_IDX_PNM)   AS SRC_DDL_IDX_COL_CNT        
             , COUNT(Y.DDL_IDX_PNM)   AS TGT_DDL_IDX_COL_CNT
             , MAX(Y.DDL_IDX_PNM)     AS TGT_DDL_IDX_PNM                        
             , MAX(X.DDL_IDX_PNM)     AS SRC_DDL_IDX_PNM             
             , MAX(X.DDL_IDX_COL_PNM) AS TGT_DDL_IDX_COL_PNM                      
          FROM ( SELECT A.DB_SCH_ID 
                      , D.DB_CONN_TRG_PNM
                      , C.DB_SCH_PNM                     
                      , E.DDL_TBL_PNM
                      , E.DDL_TBL_LNM                                               
                      , A.DDL_IDX_PNM    
                      , A.DDL_IDX_LNM    
                      , A.APRV_DTM        
                      , B.DDL_IDX_COL_PNM    
                      , B.DDL_IDX_COL_LNM                  
                      , B.DDL_IDX_COL_ORD
                      , B.SORT_TYP
                   FROM WAM_DDL_IDX A
                        INNER JOIN WAM_DDL_IDX_COL B
                           ON B.DDL_IDX_ID   = A.DDL_IDX_ID                           
                        INNER JOIN WAA_DB_SCH C
                           ON C.EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d')
                          AND C.DB_SCH_ID = A.DB_SCH_ID 
                        INNER JOIN WAA_DB_CONN_TRG D
	                       ON D.EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d') 
	                      AND D.DB_CONN_TRG_ID = C.DB_CONN_TRG_ID         
	                    INNER JOIN WAM_DDL_TBL E
	                       ON E.DDL_TBL_ID = A.DDL_TBL_ID  
                  WHERE 1 = 1
                    AND A.DB_SCH_ID = #{srcDbSchId, jdbcType=VARCHAR}   
                                                                
                ) X
               FULL JOIN 
               (
                SELECT A.DB_SCH_ID 
                      , D.DB_CONN_TRG_PNM
                      , C.DB_SCH_PNM                     
                      , E.DDL_TBL_PNM
                      , E.DDL_TBL_LNM                                               
                      , A.DDL_IDX_PNM    
                      , A.DDL_IDX_LNM    
                      , A.APRV_DTM        
                      , B.DDL_IDX_COL_PNM    
                      , B.DDL_IDX_COL_LNM                  
                      , B.DDL_IDX_COL_ORD
                      , B.SORT_TYP
                   FROM WAM_DDL_IDX A
                        INNER JOIN WAM_DDL_IDX_COL B
                           ON B.DDL_IDX_ID   = A.DDL_IDX_ID                           
                        INNER JOIN WAA_DB_SCH C
                           ON C.EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d')
                          AND C.DB_SCH_ID = A.DB_SCH_ID 
                        INNER JOIN WAA_DB_CONN_TRG D
	                       ON D.EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d') 
	                      AND D.DB_CONN_TRG_ID = C.DB_CONN_TRG_ID         
	                    INNER JOIN WAM_DDL_TBL E
	                       ON E.DDL_TBL_ID = A.DDL_TBL_ID  
                  WHERE 1 = 1
                   AND A.DB_SCH_ID = #{tgtDbSchId, jdbcType=VARCHAR}   
                ) Y                
                ON 1 = 1              
               AND X.DB_SCH_PNM      = Y.DB_SCH_PNM 
               AND X.DDL_IDX_PNM     = Y.DDL_IDX_PNM
               AND X.DDL_IDX_COL_PNM = Y.DDL_IDX_COL_PNM 
         WHERE 1 = 1  
         GROUP BY IFNULL(X.DB_SCH_PNM,  Y.DB_SCH_PNM) 
                , IFNULL(X.DDL_TBL_PNM, Y.DDL_TBL_PNM)
                , IFNULL(X.DDL_IDX_PNM, Y.DDL_IDX_PNM) 
       ) X
     WHERE 1 = 1  
      <if test="gapStatus != null">
	   	   AND X.GAP_STATUS = #{gapStatus, jdbcType=VARCHAR}
	  </if>     	  
	  <if test="dbcTblNm != null">
	   	   AND X.DBC_TBL_NM LIKE #{dbcTblNm, jdbcType=VARCHAR} ||'%'
	  </if>   		                 
    ORDER BY DDL_TBL_PNM  
	
</select>


<select id="selectDdlIdxSrcTgtColGapList" resultMap="DdlIdxSrcTgtGapMap" parameterType="kr.wise.dq.gap.service.ModelGapVO">

	SELECT IFNULL(X.DB_SCH_PNM, Y.DB_SCH_PNM)       AS DB_SCH_PNM	 	     
	      ,  CASE WHEN X.DDL_IDX_COL_PNM IS NULL                    THEN '소스컬럼미존재' END
	      || CASE WHEN Y.DDL_IDX_COL_PNM IS NULL                    THEN '타겟컬럼미존재' END
	      || CASE WHEN IFNULL(X.UK_IDX_YN,'N') != IFNULL(Y.UK_IDX_YN,'N')  THEN 'UK여부불일치' END	   
	      || CASE WHEN X.DDL_IDX_COL_ORD    != Y.DDL_IDX_COL_ORD     THEN '컬럼순서불일치' END
	      || CASE WHEN IFNULL(X.SORT_TYP,'N')  != IFNULL(Y.SORT_TYP,'N')   THEN 'SORT유형불일치' END	      
	      AS GAP_STATUS  
	     , IFNULL(X.DDL_TBL_PNM, Y.DDL_TBL_PNM)     AS DDL_TBL_PNM
	     , IFNULL(X.DDL_IDX_PNM, Y.DDL_IDX_PNM)     AS DDL_IDX_PNM     
	     , X.DDL_TBL_PNM        AS SRC_DDL_TBL_PNM         
	     , X.DDL_TBL_LNM        AS SRC_DDL_TBL_LNM
	     , X.DDL_IDX_PNM        AS SRC_DDL_IDX_PNM    
	     , IFNULL(X.UK_IDX_YN,'N') AS SRC_UK_IDX_YN
	     , X.DDL_IDX_COL_PNM    AS SRC_DDL_IDX_COL_PNM
	     , X.DDL_IDX_COL_ORD    AS SRC_DDL_IDX_COL_ORD
	     , X.SORT_TYP           AS SRC_SORT_TYP  
	     , Y.DDL_TBL_PNM        AS TGT_DDL_TBL_PNM         
	     , Y.DDL_TBL_LNM        AS TGT_DDL_TBL_LNM
	     , Y.DDL_IDX_PNM        AS TGT_DDL_IDX_PNM    
	     , IFNULL(Y.UK_IDX_YN,'N') AS TGT_UK_IDX_YN
	     , Y.DDL_IDX_COL_PNM    AS TGT_DDL_IDX_COL_PNM
	     , Y.DDL_IDX_COL_ORD    AS TGT_DDL_IDX_COL_ORD
	     , Y.SORT_TYP           AS TGT_SORT_TYP	    
	  FROM ( SELECT A.DB_SCH_ID 
                  , D.DB_CONN_TRG_PNM
                  , C.DB_SCH_PNM                     
                  , E.DDL_TBL_PNM
                  , E.DDL_TBL_LNM                                               
                  , A.DDL_IDX_PNM    
                  , A.DDL_IDX_LNM    
                  , A.UK_IDX_YN
                  , A.APRV_DTM        
                  , B.DDL_IDX_COL_PNM    
                  , B.DDL_IDX_COL_LNM                  
                  , B.DDL_IDX_COL_ORD
                  , B.SORT_TYP
               FROM WAM_DDL_IDX A
                    INNER JOIN WAM_DDL_IDX_COL B
                       ON B.DDL_IDX_ID   = A.DDL_IDX_ID                           
                    INNER JOIN WAA_DB_SCH C
                       ON C.EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d')
                      AND C.DB_SCH_ID = A.DB_SCH_ID 
                    INNER JOIN WAA_DB_CONN_TRG D
	                   ON D.EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d') 
	                  AND D.DB_CONN_TRG_ID = C.DB_CONN_TRG_ID         
	                INNER JOIN WAM_DDL_TBL E
	                   ON E.DDL_TBL_ID = A.DDL_TBL_ID  
              WHERE 1 = 1                
                AND A.DB_SCH_ID   = #{srcDbSchId, jdbcType=VARCHAR}   
                AND A.DDL_IDX_PNM = #{ddlIdxPnm, jdbcType=VARCHAR}
                                                            
            ) X
           FULL JOIN 
           (
            SELECT A.DB_SCH_ID 
                  , D.DB_CONN_TRG_PNM
                  , C.DB_SCH_PNM                     
                  , E.DDL_TBL_PNM
                  , E.DDL_TBL_LNM                                               
                  , A.DDL_IDX_PNM    
                  , A.DDL_IDX_LNM    
                  , A.UK_IDX_YN
                  , A.APRV_DTM        
                  , B.DDL_IDX_COL_PNM    
                  , B.DDL_IDX_COL_LNM                  
                  , B.DDL_IDX_COL_ORD
                  , B.SORT_TYP
               FROM WAM_DDL_IDX A
                    INNER JOIN WAM_DDL_IDX_COL B
                       ON B.DDL_IDX_ID   = A.DDL_IDX_ID                           
                    INNER JOIN WAA_DB_SCH C
                       ON C.EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d')
                      AND C.DB_SCH_ID = A.DB_SCH_ID 
                    INNER JOIN WAA_DB_CONN_TRG D
	                   ON D.EXP_DTM = STR_TO_DATE('9999-12-31','%Y-%m-%d') 
	                  AND D.DB_CONN_TRG_ID = C.DB_CONN_TRG_ID         
	                INNER JOIN WAM_DDL_TBL E
	                   ON E.DDL_TBL_ID = A.DDL_TBL_ID  
              WHERE 1 = 1                
                AND A.DB_SCH_ID   = #{tgtDbSchId, jdbcType=VARCHAR}   
                AND A.DDL_IDX_PNM = #{ddlIdxPnm, jdbcType=VARCHAR}   
            ) Y                
            ON 1 = 1              
           AND X.DB_SCH_PNM      = Y.DB_SCH_PNM 
           AND X.DDL_IDX_PNM     = Y.DDL_IDX_PNM
           AND X.DDL_IDX_COL_PNM = Y.DDL_IDX_COL_PNM 
    WHERE 1 = 1  
    ORDER BY IFNULL(X.DB_SCH_PNM,  Y.DB_SCH_PNM) 
           , IFNULL(X.DDL_TBL_PNM, Y.DDL_TBL_PNM)
           , IFNULL(X.DDL_IDX_PNM, Y.DDL_IDX_PNM)  
           , IFNULL(X.DDL_IDX_COL_ORD, Y.DDL_IDX_COL_ORD)
           
</select>
<select id="getGapChartDateJSON" resultMap="BaseResultMap">
	SELECT REG_DTM
	FROM(
	SELECT TO_CHAR(REG_DTM,'%Y-%m-%d HH24') AS REG_DTM
	FROM WAM_PDM_TBL PDM
	LEFT OUTER JOIN WAT_DBC_TBL T
	ON PDM.PDM_TBL_ID = T.PDM_TBL_ID
    WHERE TO_CHAR(REG_DTM,'%Y-%m-%d HH24') IS NOT NULL
	GROUP BY TO_CHAR(REG_DTM,'%Y-%m-%d HH24')
    )
    ORDER BY REG_DTM DESC
</select>
</mapper>