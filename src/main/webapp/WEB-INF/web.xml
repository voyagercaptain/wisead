<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" version="2.5">
  <!-- encoding설정 -->
  <filter>
    <filter-name>CharacterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>CharacterEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <!-- 로그인 세션 시간 설정 -->
  <session-config>
  	<session-timeout>6000</session-timeout>
  </session-config>
  
  <!-- 적용할 디폴트 profile 설정 -->
	<context-param>
		<param-name>spring.profiles.active</param-name>
		<param-value>local</param-value>
	</context-param>
  <!-- DI를 선언할 applicationContext 파일을 로딩하기 위해서 listener와 context-param을 설정  -->
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:/spring/app-context.xml</param-value>
  </context-param>
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  
  <!-- DispatcherServlet설정 및 Controller어댑터 설정 -->
  <servlet>
    <servlet-name>dispatcherServlet</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath:/spring/servlet-context.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  <servlet-mapping>
    <servlet-name>default</servlet-name>
    <url-pattern>*.js</url-pattern>
    <url-pattern>*.css</url-pattern>
    <url-pattern>*.jpg</url-pattern>
    <url-pattern>*.gif</url-pattern>
    <url-pattern>*.png</url-pattern>
    <url-pattern>*.ico</url-pattern>
    <url-pattern>*.swf</url-pattern>
  </servlet-mapping>
  <servlet-mapping>
    <servlet-name>dispatcherServlet</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>
  
  <!-- hwp문서(메뉴얼) 다운로드를 위한 mime-mapping(크롬에서는 불필요하나 ie에서 필요) yeonho -->
  <mime-mapping>
	    <extension>hwp</extension>
	    <mime-type>application/x-hwp</mime-type>
  </mime-mapping>	
  
  <!-- PageFilter설정하여 decorators사용설정  -->
<!--   <filter> -->
<!--     <filter-name>sitemesh</filter-name> -->
<!--     <filter-class>com.opensymphony.module.sitemesh.filter.PageFilter</filter-class> -->
<!--     <filter-class>com.opensymphony.sitemesh.webapp.SiteMeshFilter</filter-class> -->
<!--   </filter> -->
<!--   <filter-mapping> -->
<!--     <filter-name>sitemesh</filter-name> -->
<!--     <url-pattern>/*</url-pattern> -->
<!--   </filter-mapping> -->
</web-app>
