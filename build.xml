<?xml version="1.0" encoding="UTF-8"?>
<!-- ====================================================================== 
     2014. 04. 03.                                                         

     wiseda build    
                   
     Insomnia                                                                
     ====================================================================== -->
<project name="wiseda" default="build" xmlns:artifact="antlib:org.apache.maven.artifact.ant">
    <description>
	    <![CDATA[
    	WISE DA(portal), META, DQ product build  
	    ]]>     
    </description>
	
	<!--퍼로퍼티 파일 지정 -->
	<property file="build.properties" />
	
	<property name="project.name" value="wiseda"/>

	 <condition property="build.env" value="${build.env}" else="dev">
	         <isset property="build.env" />
	 </condition>

	<!--퍼로퍼티 설정 : 각종 폴더 & 생성파일 -->
	<property name="base.dir" value="."/>
	<property name="src.dir" value="src/main/java" />
	<property name="resources.dir" value="src/main/resources" />
	<property name="web.dir" value="src/main/webapp"/>
	<property name="dist.dir" value="target"/>
	<property name="build.dir" value="${web.dir}/WEB-INF/classes"/>
	<property name="wls.lib.path" value="${wls.home}/server/lib"/>
	<property name="war.file" value="${dist.dir}/${project.name}.war"/>
	<property name="ear.file" value="${dist.dir}/${project.name}.ear"/>
	
	<!-- 서버 접속 설정 
	<property name="remote.server" value="10.10.5.112"/>
	<property name="remote.id" 	value="tmax"/>
	<property name="remote.pass" 	value="tmax"/>
	<property name="remote.dir" value="/tmax/app/meta/wiseda"/>
	<property name="remote.build" value="/tmax/app/meta/test"/>
	<property name="remote.prompt" value="waste_int_was#" />
	
	<property name="jeus.admin" value="/tmax/jeus6/bin/jeusadmin `hostname` -Uadministrator -Pjeusadmin"/>
	<property name="jeus.container" value="waste_int_was_container2"/>
	-->
		
	<!-- 컴파일 패스 설정 : 웹 라이브러리 위치 (WEB-INF/lib), 톰캣 라이브러리 추가(tomcat/lib) -->
	<!-- - - - - - - - - - - - - - - - - - 
          target: default                      
         - - - - - - - - - - - - - - - - - -->
	
	<path id="maven-ant-tasks.classpath" path="doc/build/maven-ant-tasks-2.1.3.jar" />
	<typedef resource="org/apache/maven/artifact/ant/antlib.xml"
			 uri="antlib:org.apache.maven.artifact.ant"
		 	 classpathref="maven-ant-tasks.classpath" />
	
	<!-- 환경변수 사용하도록 선언 -->
	<property environment="env"/>
	<!--
	<echo message="maven-home.path : ${env.Path}" />
	<property name="maven-home.path" value="${env.M2_HOME}" />
	-->
	
	<!-- ================================= 
          target: ssh              
         ================================= -->
    <target name="ssh-test" depends="" description="description">	
    	<sshexec host="${remote.server}"
    	         username="${remote.id}"
    	         password="${remote.pass}"
    	         trust="true"
    	         command="ls -al"/>
    </target>
    <target name="telnet-test" depends="" description="description">
    	<telnet server="${remote.server}"
    	    		 	userid="${remote.id}"
    					password="${remote.pass}"
    	    			timeout="600"
    	    		>
    	    <read>${remote.prompt}</read>
    	    <write>ls -al</write>
    		<read>${remote.prompt}</read>
    	</telnet>
    </target>
	
	<!-- ================================= 
          target: condown              
         ================================= -->
    <target name="downcon" depends="" description="stop jeus container">
    	<sshexec host="pdmeta01.woorifg.com"
    	         username="metadm"
    	         password="metadm1234"
    	         trust="true"
    	         command="/mw/jeus7/bin/cdown pdmeta01_metonl01"/>
    	<sshexec host="pdmeta02.woorifg.com"
    	         username="metadm"
    	         password="metadm1234"
    	         trust="true"
    	         command="/mw/jeus7/bin/cdown pdmeta02_metonl01"/>
    	<!--
    	<telnet server="${remote.server}"
    	    	    		 	userid="${remote.id}"
    	    					password="${remote.pass}"
    	    	    			timeout="600"
    	    	    		>
    	    	    <read>${remote.prompt}</read>
    	    	    <write>${jeus.admin} downcon ${jeus.container}</write>
    	    		<read>${remote.prompt}</read>
    	</telnet>
    	-->
    </target>
    <target name="downcon1" depends="" description="stop jeus container1">
    	<sshexec host="pdmeta01.woorifg.com"
    	         username="metadm"
    	         password="metadm1234"
    	         trust="true"
    	         command="/mw/jeus7/bin/cdown pdmeta01_metonl01"/>
    </target>
    <target name="downcon2" depends="" description="stop jeus container2">
    	<sshexec host="pdmeta02.woorifg.com"
    	         username="metadm"
    	         password="metadm1234"
    	         trust="true"
    	         command="/mw/jeus7/bin/cdown pdmeta02_metonl01"/>
    </target>
	
	
	<!-- ================================= 
          target: startcon              
         ================================= -->
    <target name="startcon" depends="" description="start jeus container">
    	<sshexec host="pdmeta01.woorifg.com"
    	         username="metadm"
    	         password="metadm1234"
    	         trust="true"
    	         command="/mw/jeus7/bin/cboot pdmeta01_metonl01"/>
    	<sshexec host="pdmeta02.woorifg.com"
    	         username="metadm"
    	         password="metadm1234"
    	         trust="true"
    	         command="/mw/jeus7/bin/cboot pdmeta02_metonl01"/>
    	<!--
    	<telnet server="${remote.server}"
    	    	    		 	userid="${remote.id}"
    	    					password="${remote.pass}"
    	    	    			timeout="600"
    	    	    		>
    	    	    <read>${remote.prompt}</read>
    	    	    <write>${jeus.admin} startcon ${jeus.container}</write>
    	    		<read>${remote.prompt}</read>
    	</telnet>
    	-->
    </target>
    <target name="startcon1" depends="" description="start jeus container1">
    	<sshexec host="pdmeta01.woorifg.com"
    	         username="metadm"
    	         password="metadm1234"
    	         trust="true"
    	         command="/mw/jeus7/bin/cboot pdmeta01_metonl01"/>
    </target>
    <target name="startcon2" depends="" description="start jeus container2">
    	<sshexec host="pdmeta02.woorifg.com"
    	         username="metadm"
    	         password="metadm1234"
    	         trust="true"
    	         command="/mw/jeus7/bin/cboot pdmeta02_metonl01"/>
    </target>
	
	<!-- ================================= 
          target: mvn-war-exploded              
         ================================= -->
    <target name="mvnwar" depends="datentime,clean" description="">
		<artifact:mvn pom="pom.xml" mavenHome="C:/IDE/apache-maven-3.0.5" fork="true">
			<!--<arg value="clean"/>-->
    		<arg value="war:exploded"/>
    		<!--<arg value="war:war"/>-->
    	</artifact:mvn>
    </target>
	
	<!-- ================================= 
          target: build              
         ================================= -->
    <target name="build" depends="mvnwar" description="wiseda build">
		<!--
    	<antcall target="postpre.${build.env}" />
		-->
    	<!--C:\IDE\workspace-slc\wiseda\target\wiseda\WEB-INF\classes\properties -->
    	<propertyfile file="${dist.dir}/${project.name}/WEB-INF/classes/properties/configure.properties" >
    	    <entry key="mode" value="${build.env}"/>
    	</propertyfile>
    	<propertyfile file="${dist.dir}/${project.name}/WEB-INF/classes/properties/database.properties" >
    	    <entry key="mode" value="${build.env}"/>
    	</propertyfile>
    	<replace file="${dist.dir}/${project.name}/WEB-INF/web.xml">
    		<replacefilter token="local" value="${build.env}" />
    	</replace>
    	
    	<copy 	file="doc/build/log4j.xml.${build.env}" 
    					tofile="${dist.dir}/${project.name}/WEB-INF/classes/log4j.xml" 
    					overwrite="true"/>
    	<copy 	file="doc/build/LoadExcel.jsp.${build.env}" 
    					tofile="${dist.dir}/${project.name}/js/IBSheet/jsp/LoadExcel.jsp" 
    					overwrite="true"/>
    	<copy 	file="doc/build/Down2Excel.jsp.${build.env}" 
    					tofile="${dist.dir}/${project.name}/js/IBSheet/jsp/Down2Excel.jsp" 
    					overwrite="true"/>
    	
    	<!--ibsheet 라이센스 파일 복사 
    	<copy 	file="doc/build/license.${build.env}" 
				tofile="${dist.dir}/wiseda/js/IBSheet/license" 
				overwrite="true"/>
    	<copy 	file="doc/build/license.${build.env}" 
				tofile="${dist.dir}/wiseda/js/IBChart/license" 
				overwrite="true"/>
    	    	
    	-->    		
    	<tar destfile="${dist.dir}/${project.name}.tar" basedir="${dist.dir}/${project.name}" />
    	
    </target>
	
	
	<!-- ================================= 
          target: deploy              
         ================================= -->
    <target name="deploy" depends="build,downcon,ftpsend,untarda,startcon" description="jeus deploy">
    	
    </target>
    <target name="upload" depends="build,ftpsend,untarda" description="src upload">
    	
    </target>
    <target name="deploy1" depends="downcon1,startcon1" description="jeus deploy1">
    	
    </target>
    <target name="deploy2" depends="downcon2,startcon2" description="jeus deploy2">
    	
    </target>
	
	
	<!-- ================================= 
          target: untar wiseda              
         ================================= -->
    <target name="untarda" depends="" description="untar wiseda">
    	<antcall target="untarda.${build.env}" />
	</target>
    	
    <target name="untarda.dev" depends="" description="untar wiseda">
    	<sshexec host="${dev.remote.server}" port="50220"
    	         username="${dev.remote.id}"
    	         password="${dev.remote.pass}"
    	         trust="true"
    	         command="rm -rf ${dev.remote.dir}/${project.name}/*;cd ${dev.remote.dir}/${project.name};tar xvf ${dev.remote.dir}/${project.name}.tar"/>
    	<!--
    	<sshexec host="wmetap2d.woorifg.com"
    	    	 username="metadm"
    	    	 password="jjang1234"
    	    	 trust="true"
    	    	 command="rm -rf /app/wisemeta3/build/wiseda/*;cd /app/wisemeta3/build/wiseda;tar xvf /app/wisemeta3/build/wiseda.tar"/>
    	<sshexec host="pdmeta01.woorifg.com"
    	         username="metadm"
    	         password="metadm1234"
    	         trust="true"
    	         command="rm -rf /app/wisemeta3/build/wiseda/*;cd /app/wisemeta3/build/wiseda;tar xvf /app/wisemeta3/build/wiseda.tar"/>
    	<sshexec host="pdmeta02.woorifg.com"
    	    	 username="metadm"
    	    	 password="metadm1234"
    	    	 trust="true"
    	    	 command="rm -rf /app/wisemeta3/build/wiseda/*;cd /app/wisemeta3/build/wiseda;tar xvf /app/wisemeta3/build/wiseda.tar"/>
    	<telnet server="${remote.server}"
    		 	userid="${remote.id}"
				password="${remote.pass}"
    			timeout="600"
    		>
    	    <read>${remote.prompt}</read>
    	    <write>tar -xvf ${remote.dir}/wiseda.tar -C ${remote.dir}/</write>
    		<read>${remote.prompt}</read>
    	</telnet>
    	-->
    </target>
    <target name="untarda.prod" depends="" description="untar wiseda">
    	<sshexec host="wmetap1p.woorifg.com"
    	         username="metadm"
    	         password="wise1012"
    	         trust="true"
    	         command="rm -rf /app/wisemeta3/build/wiseda/*;cd /app/wisemeta3/build/wiseda;tar xvf /app/wisemeta3/build/wiseda.tar"/>
    	<sshexec host="wmetap2p.woorifg.com"
    	    	 username="metadm"
    	    	 password="wise1012"
    	    	 trust="true"
    	    	 command="rm -rf /app/wisemeta3/build/wiseda/*;cd /app/wisemeta3/build/wiseda;tar xvf /app/wisemeta3/build/wiseda.tar"/>
    </target>
	
	<!-- ================================= 
          target: antftp              
         ================================= -->
    <target name="ftpsend" depends="" description="">
    	<antcall target="ftpsend.${build.env}" />
    </target>
	
    <target name="ftpsend.dev" depends="" description="">
    	<scp todir="${dev.remote.id}:${dev.remote.pass}@${dev.remote.server}:${dev.remote.dir}/" 
    		 file="${dist.dir}/${project.name}.tar" port="50220"
    		 sftp="true"
    		 trust="true"
    		>
    	</scp>
		<!--
    	<scp todir="metadm:jjang1234@wmetap2d.woorifg.com:/app/wisemeta3/build/" 
    		 file="${dist.dir}/wiseda.tar"
    		 sftp="true"
    		 trust="true"
    		>
    	</scp>
    	<ftp password="${remote.pass}" 
        	server="${remote.server}" 
        	userid="${remote.id}"
        	remotedir="${remote.dir}"
        	binary="yes"
        	separator="/"
    		verbose="yes" 
        	>
        	
	        	skipFailedTransfers="true" 
	        	passive="yes"
        	<fileset dir="${dist.dir}/wiseda" >
        		
        	</fileset>
        	<fileset file="${dist.dir}/wiseda.tar" />
        </ftp>
        	-->
    </target>
    <target name="ftpsend.prod" depends="" description="">
    	<scp todir="metadm:wise1012@wmetap1p.woorifg.com:/app/wisemeta3/build/" 
    		 file="${dist.dir}/wiseda.tar"
    		 sftp="true"
    		 trust="true"
    		>
    	</scp>
    	<scp todir="metadm:wise1012@wmetap2p.woorifg.com:/app/wisemeta3/build/" 
    		 file="${dist.dir}/wiseda.tar"
    		 sftp="true"
    		 trust="true"
    		>
    	</scp>
    </target>



	
	<!-- ================================= 
          target: clean              
         ================================= -->
    <target name="clean" description="delete build, dist">
        <delete dir="${dist.dir}/${project.name}" />
    </target>
	
	<!-- ================================= 
          target: datentime              
         ================================= -->
    <target name="datentime" description="create current date">
        <tstamp>
        	<format property="DSTAMP" pattern="yyyy-MM-dd"/>
        	<format property="TSTAMP" pattern="HH:mm:ss"/>
        </tstamp>
    	<echo message="Build started at : ${DSTAMP} - ${TSTAMP}" />
    </target>
	

	
	<!-- ================================= 
          target: prepare              
         ================================= -->
    <target name="prepare" depends="datentime,clean" description="copy web contents">
        <!--
    	<mkdir dir="${dist.dir}"/>
        <mkdir dir="${build.dir}"/>
    	<copy todir="${build.dir}">
    		<fileset dir="${web.dir}">
    			<exclude name="**/*.class"/>
    			<exclude name="**/*.java"/>
    		</fileset>
    	</copy>
        -->
		<mkdir dir="${web.dir}/WEB-INF/classes" />
    	<copy todir="${web.dir}/WEB-INF/classes">
			<fileset dir="${src.dir}" >
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
    	<copy todir="${web.dir}/WEB-INF/classes">
			<fileset dir="${resources.dir}" >
				<exclude name="**/*.java"/>
			</fileset>
		</copy>
		<antcall target="postpre.${build.env}" />
    </target>
	
	<target name="postpre.dev">
		
    	<!--lib 파일 복사 (servlet-api, jsp-api 는 제외) -->    		
		<antcall target="copylib" />
    	<!--tomcat 설청파일 복사 -->    		
    	<copy 	file="${resources.dir}/wasconfig/${project.name}.${build.env}.xml" 
				tofile="${web.dir}/WEB-INF/classes/wasconfig/${project.name}.xml" 
				overwrite="true"/>
    	<!--스프링 설정 파일 복사 -->    		
    	<copy 	file="${resources.dir}/properties/configure.${build.env}.properties" 
				tofile="${web.dir}/WEB-INF/classes/properties/configure.properties" 
				overwrite="true"/>
	</target>
	<target name="postpre.prod">
    	<!--스프링 설정 파일 복사 -->    		
    	<copy 	file="${resources.dir}/spring/${build.env}.app-context.xml" 
				tofile="${web.dir}/WEB-INF/classes/spring/app-context.xml" 
				overwrite="true"/>
    	<!--스프링 설정 파일 복사 -->    		
    	<copy 	file="${resources.dir}/properties/configure.${build.env}.properties" 
				tofile="${web.dir}/WEB-INF/classes/properties/configure.properties" 
				overwrite="true"/>
	</target>


	
	<!-- ================================= 
          target: sync              
         ================================= -->
    <target name="sync">
    	<antcall target="sync.${build.env}"/>
    </target>
    <target name="sync.dev" depends="" description="sync build">
    	<sync todir="${tomcat.config.dev}">
    	  <fileset dir="${web.dir}"/>
    	</sync>
    </target>
    <target name="sync.prod" depends="" description="sync build" >
    	<sync todir="${wls.apppath}" >
    	  <fileset dir="${base.dir}" >
    	  		<exclude name="/lib/*"/>
    	  		<!--
    	  		<exclude name="**/upload_files/**"/>
    	  		<exclude name="**/tmp_files/**"/>
    	  		-->
    	  </fileset>
    		<preserveintarget>
    		    <include name="**/templates/**"/>
    		    <include name="**/upload_files/**"/>
    		    <include name="**/tmp_files/**"/>
    		</preserveintarget>
    	</sync>
    </target>
	

	
	<!-- ================================= 
          target: antzip              
         ================================= -->
    <target name="sourcezip" depends="datentime" description="description">
        <zip destfile="${dist.dir}/${project.name}_${DSTAMP}.zip"
    		 basedir="${base.dir}/" 
        	 excludes="**/target/**"
        	 encoding="UTF-8"
        	>
        </zip>
    </target>
	
	<!-- ================================= 
          target: antunzip              
         ================================= -->
    <target name="sourceunzip" depends="" description="description">
    	<delete dir="${base.dir}" excludes="**/*.zip,.**/*.xml,**/*.properties,**/lib/*.jar">
    			
    	</delete>
    	<unzip  dest="${base.dir}" encoding="UTF-8" overwrite="ture">
    		<fileset dir=".">
    	        <include name="**/${project.name}_*.zip"/>
    		</fileset>
    	</unzip>
    	<copy todir="${web.dir}/WEB-INF/lib" >
    		<fileset dir="${base.dir}/lib" />
    	</copy>
    	  <delete>
    	    <fileset dir="." includes="**/${project.name}_*.zip"/>
    	  </delete>
    </target>
	
	<!-- ================================= 
          target: copylib              
         ================================= -->
    <target name="copylib" depends="" description="web lib copy">
    	<copy todir="${web.dir}/WEB-INF/lib" >
    		<fileset dir="${dist.dir}/lib" excludes="servlet-api-2.5.jar, jsp-api-2.1.jar" />
    	</copy>
    </target>

	
	<!-- ================================= 
          target: antftp              
         ================================= -->
    <target name="sourceftpsend" depends="sourcezip" description="">
        <ftp password="${remote.pass}" 
        	server="${remote.server}" 
        	userid="${remote.id}"
        	remotedir="${remote.dir}"
        	binary="yes"
        	separator="/"
    		verbose="yes" 
        	>
        	<!-- 
	        	skipFailedTransfers="true" 
	        	passive="yes"
        	-->
        	<fileset dir="${dist.dir}" >
        		<include name="*.zip"/>
        		<!-- <include name="/lib/*.jar"/> -->
        	</fileset>
        	<fileset dir="${base.dir}" >
        		<include name="build*"/>
        	</fileset>
        	<!-- <fileset dir="${src.dir}" includes="images/" />-->
        </ftp>
    	<delete file="${dist.dir}/*.zip">
    	 </delete>
    </target>
	
</project>
